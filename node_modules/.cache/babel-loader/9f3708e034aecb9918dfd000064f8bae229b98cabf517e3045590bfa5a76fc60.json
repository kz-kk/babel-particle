{"ast":null,"code":"var _jsxFileName = \"/Users/kasaikazunobu/project/ai/babel/ripple/3d-ripple-animation/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport * as THREE from 'three';\nimport { Suspense, useRef } from 'react';\nimport { Canvas, useFrame, useLoader } from '@react-three/fiber';\nimport { OrbitControls } from '@react-three/drei';\nimport circleImg from './assets/circle.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CameraControls() {\n  return /*#__PURE__*/_jsxDEV(OrbitControls, {\n    autoRotate: true,\n    autoRotateSpeed: -0.2\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 10\n  }, this);\n}\n_c = CameraControls;\nfunction MeshSurface() {\n  _s();\n  const imgTex = useLoader(THREE.TextureLoader, circleImg);\n  const meshRef = useRef();\n  const tRef = useRef(0);\n  const speed = 2;\n  const frequency = 0.2;\n  const amplitude = 5;\n  const radius = 100;\n  const segments = 100;\n  useFrame((state, delta) => {\n    tRef.current += delta * speed;\n    const positions = meshRef.current.geometry.attributes.position.array;\n    const vertex = new THREE.Vector3();\n    for (let i = 0; i < positions.length; i += 3) {\n      vertex.fromArray(positions, i);\n      const angle = vertex.x / radius * Math.PI * 2;\n      const distance = Math.sqrt(vertex.x * vertex.x + vertex.z * vertex.z);\n      const offset = Math.sin(distance * frequency - tRef.current) * amplitude;\n      positions[i + 0] = Math.cos(angle) * (radius + offset);\n      positions[i + 2] = Math.sin(angle) * (radius + offset);\n      positions[i + 1] = Math.sin(angle * 2 - tRef.current) * 5;\n    }\n    meshRef.current.geometry.attributes.position.needsUpdate = true;\n    meshRef.current.geometry.computeVertexNormals();\n  });\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    ref: meshRef,\n    rotation: [-Math.PI / 2, 0, 0],\n    children: [/*#__PURE__*/_jsxDEV(\"circleGeometry\", {\n      args: [radius, segments]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      map: imgTex,\n      color: 0xFFFFFF,\n      side: THREE.DoubleSide,\n      wireframe: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(MeshSurface, \"81yg2XaPC+PuRivYvl7QlDoLyj4=\", false, function () {\n  return [useLoader, useFrame];\n});\n_c2 = MeshSurface;\nfunction AnimationCanvas() {\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    colorManagement: false,\n    camera: {\n      position: [0, 100, 200],\n      fov: 75\n    },\n    children: [/*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: null,\n      children: [/*#__PURE__*/_jsxDEV(MeshSurface, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ambientLight\", {\n        intensity: 0.5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n        position: [10, 10, 10],\n        intensity: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CameraControls, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_c3 = AnimationCanvas;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"anim\",\n    children: /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 27\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(AnimationCanvas, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"CameraControls\");\n$RefreshReg$(_c2, \"MeshSurface\");\n$RefreshReg$(_c3, \"AnimationCanvas\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["THREE","Suspense","useRef","Canvas","useFrame","useLoader","OrbitControls","circleImg","jsxDEV","_jsxDEV","CameraControls","autoRotate","autoRotateSpeed","fileName","_jsxFileName","lineNumber","columnNumber","_c","MeshSurface","_s","imgTex","TextureLoader","meshRef","tRef","speed","frequency","amplitude","radius","segments","state","delta","current","positions","geometry","attributes","position","array","vertex","Vector3","i","length","fromArray","angle","x","Math","PI","distance","sqrt","z","offset","sin","cos","needsUpdate","computeVertexNormals","ref","rotation","children","args","map","color","side","DoubleSide","wireframe","_c2","AnimationCanvas","colorManagement","camera","fov","fallback","intensity","_c3","App","className","_c4","$RefreshReg$"],"sources":["/Users/kasaikazunobu/project/ai/babel/ripple/3d-ripple-animation/src/App.js"],"sourcesContent":["import './App.css';\nimport * as THREE from 'three';\nimport { Suspense, useRef } from 'react';\nimport { Canvas, useFrame, useLoader } from '@react-three/fiber';\nimport { OrbitControls } from '@react-three/drei';\nimport circleImg from './assets/circle.png';\n\nfunction CameraControls() {\n  return <OrbitControls autoRotate autoRotateSpeed={-0.2} />;\n}\n\nfunction MeshSurface() {\n  const imgTex = useLoader(THREE.TextureLoader, circleImg);\n  const meshRef = useRef();\n\n  const tRef = useRef(0);\n  const speed = 2; \n  const frequency = 0.2; \n  const amplitude = 5; \n  const radius = 100; \n  const segments = 100; \n\n  useFrame((state, delta) => {\n    tRef.current += delta * speed;\n\n    const positions = meshRef.current.geometry.attributes.position.array;\n    const vertex = new THREE.Vector3();\n\n    for (let i = 0; i < positions.length; i += 3) {\n      vertex.fromArray(positions, i);\n      const angle = vertex.x / radius * Math.PI * 2; \n      const distance = Math.sqrt(vertex.x * vertex.x + vertex.z * vertex.z);\n      const offset = Math.sin(distance * frequency - tRef.current) * amplitude;\n\n      positions[i + 0] = Math.cos(angle) * (radius + offset); \n      positions[i + 2] = Math.sin(angle) * (radius + offset); \n      positions[i + 1] = Math.sin(angle * 2 - tRef.current) * 5; \n    }\n\n    meshRef.current.geometry.attributes.position.needsUpdate = true;\n    meshRef.current.geometry.computeVertexNormals();\n  });\n\n  return (\n    <mesh ref={meshRef} rotation={[-Math.PI / 2, 0, 0]}>\n      <circleGeometry args={[radius, segments]} /> \n      <meshStandardMaterial\n        map={imgTex}\n        color={0xFFFFFF}\n        side={THREE.DoubleSide}\n        wireframe={false} \n      />\n    </mesh>\n  );\n}\n\nfunction AnimationCanvas() {\n  return (\n    <Canvas\n      colorManagement={false}\n      camera={{ position: [0, 100, 200], fov: 75 }}\n    >\n      <Suspense fallback={null}>\n        <MeshSurface />\n        <ambientLight intensity={0.5} />\n        <pointLight position={[10, 10, 10]} intensity={1} />\n      </Suspense>\n      <CameraControls />\n    </Canvas>\n  );\n}\n\nfunction App() {\n  return (\n    <div className=\"anim\">\n      <Suspense fallback={<div>Loading...</div>}>\n        <AnimationCanvas />\n      </Suspense>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}