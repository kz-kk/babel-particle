{"ast":null,"code":"var _jsxFileName = \"/Users/kasaikazunobu/project/ai/babel/ripple/3d-ripple-animation/src/components/ParticleText.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useMemo } from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ParticleText({\n  text,\n  font,\n  ...props\n}) {\n  _s();\n  const points = useRef();\n  const particlesData = useMemo(() => {\n    const canvas = document.createElement('canvas');\n    const context = canvas.getContext('2d');\n    canvas.width = 1024;\n    canvas.height = 256;\n    context.font = '200px ' + font;\n    context.fillStyle = '#ffffff';\n    context.textAlign = 'center';\n    context.fillText(text, canvas.width / 2, canvas.height / 2);\n    const imageData = context.getImageData(0, 0, canvas.width, canvas.height);\n    const data = imageData.data;\n    const particles = [];\n    for (let y = 0; y < canvas.height; y += 4) {\n      for (let x = 0; x < canvas.width; x += 4) {\n        if (data[(y * canvas.width + x) * 4 + 3] > 128) {\n          particles.push({\n            x: (x - canvas.width / 2) / 2,\n            y: -(y - canvas.height / 2) / 2,\n            z: 0,\n            vx: Math.random() * 2 - 1,\n            vy: Math.random() * 2 - 1,\n            vz: Math.random() * 2 - 1\n          });\n        }\n      }\n    }\n    return particles;\n  }, [text, font]);\n  const positions = useMemo(() => {\n    return new Float32Array(particlesData.length * 3);\n  }, [particlesData]);\n  useFrame(() => {\n    for (let i = 0; i < particlesData.length; i++) {\n      const particle = particlesData[i];\n      particle.x += particle.vx * 0.1;\n      particle.y += particle.vy * 0.1;\n      particle.z += particle.vz * 0.1;\n      positions[i * 3] = particle.x;\n      positions[i * 3 + 1] = particle.y;\n      positions[i * 3 + 2] = particle.z;\n    }\n    points.current.geometry.attributes.position.needsUpdate = true;\n  });\n  return /*#__PURE__*/_jsxDEV(\"points\", {\n    ref: points,\n    ...props,\n    children: [/*#__PURE__*/_jsxDEV(\"bufferGeometry\", {\n      children: /*#__PURE__*/_jsxDEV(\"bufferAttribute\", {\n        attachObject: ['attributes', 'position'],\n        count: particlesData.length,\n        array: positions,\n        itemSize: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointsMaterial\", {\n      color: \"#ffffff\",\n      size: 0.05,\n      sizeAttenuation: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(ParticleText, \"qoU5/lLe3KEEhxYipvG8s3rmROA=\", false, function () {\n  return [useFrame];\n});\n_c = ParticleText;\nexport default ParticleText;\nvar _c;\n$RefreshReg$(_c, \"ParticleText\");","map":{"version":3,"names":["React","useRef","useMemo","useFrame","THREE","jsxDEV","_jsxDEV","ParticleText","text","font","props","_s","points","particlesData","canvas","document","createElement","context","getContext","width","height","fillStyle","textAlign","fillText","imageData","getImageData","data","particles","y","x","push","z","vx","Math","random","vy","vz","positions","Float32Array","length","i","particle","current","geometry","attributes","position","needsUpdate","ref","children","attachObject","count","array","itemSize","fileName","_jsxFileName","lineNumber","columnNumber","color","size","sizeAttenuation","_c","$RefreshReg$"],"sources":["/Users/kasaikazunobu/project/ai/babel/ripple/3d-ripple-animation/src/components/ParticleText.js"],"sourcesContent":["import React, { useRef, useMemo } from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport * as THREE from 'three';\n\nfunction ParticleText({ text, font, ...props }) {\n  const points = useRef();\n\n  const particlesData = useMemo(() => {\n    const canvas = document.createElement('canvas');\n    const context = canvas.getContext('2d');\n    canvas.width = 1024;\n    canvas.height = 256;\n    context.font = '200px ' + font;\n    context.fillStyle = '#ffffff';\n    context.textAlign = 'center';\n    context.fillText(text, canvas.width / 2, canvas.height / 2);\n\n    const imageData = context.getImageData(0, 0, canvas.width, canvas.height);\n    const data = imageData.data;\n\n    const particles = [];\n    for (let y = 0; y < canvas.height; y += 4) {\n      for (let x = 0; x < canvas.width; x += 4) {\n        if (data[(y * canvas.width + x) * 4 + 3] > 128) {\n          particles.push({\n            x: (x - canvas.width / 2) / 2,\n            y: -(y - canvas.height / 2) / 2,\n            z: 0,\n            vx: Math.random() * 2 - 1,\n            vy: Math.random() * 2 - 1,\n            vz: Math.random() * 2 - 1,\n          });\n        }\n      }\n    }\n    return particles;\n  }, [text, font]);\n\n  const positions = useMemo(() => {\n    return new Float32Array(particlesData.length * 3);\n  }, [particlesData]);\n\n  useFrame(() => {\n    for (let i = 0; i < particlesData.length; i++) {\n      const particle = particlesData[i];\n      particle.x += particle.vx * 0.1;\n      particle.y += particle.vy * 0.1;\n      particle.z += particle.vz * 0.1;\n\n      positions[i * 3] = particle.x;\n      positions[i * 3 + 1] = particle.y;\n      positions[i * 3 + 2] = particle.z;\n    }\n    points.current.geometry.attributes.position.needsUpdate = true;\n  });\n\n  return (\n    <points ref={points} {...props}>\n      <bufferGeometry>\n        <bufferAttribute\n          attachObject={['attributes', 'position']}\n          count={particlesData.length}\n          array={positions}\n          itemSize={3}\n        />\n      </bufferGeometry>\n      <pointsMaterial color=\"#ffffff\" size={0.05} sizeAttenuation={true} />\n    </points>\n  );\n}\n\nexport default ParticleText;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}