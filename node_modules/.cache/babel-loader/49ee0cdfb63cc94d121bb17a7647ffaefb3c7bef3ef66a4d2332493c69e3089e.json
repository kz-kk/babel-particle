{"ast":null,"code":"var _jsxFileName = \"/Users/kasaikazunobu/project/ai/babel/ripple/3d-ripple-animation/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\n// App.js\nimport React, { useRef, useMemo, useEffect, useState } from 'react';\nimport { Canvas, useFrame, useLoader, useThree } from '@react-three/fiber';\nimport { OrbitControls } from '@react-three/drei';\nimport * as THREE from 'three';\nimport { createNoise3D } from 'simplex-noise';\nimport circleImg from './assets/circle.png';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CameraControls() {\n  return /*#__PURE__*/_jsxDEV(OrbitControls, {\n    autoRotate: true,\n    autoRotateSpeed: -0.2\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 10\n  }, this);\n}\n_c = CameraControls;\nfunction ParticleWave() {\n  _s();\n  const pointsRef = useRef();\n  const imgTex = useLoader(THREE.TextureLoader, circleImg);\n  const noise3D = useMemo(() => createNoise3D(), []);\n  const count = 50000;\n  const radius = 4; // 半径を少し小さくして、より集約させる\n  const height = 12; // 高さも少し小さくする\n  const speed = 0.5; // 速度を少し上げて、集約を早める\n  const spiralSpeed = 0.5; // スパイラル速度も少し上げる\n  const flowIntensity = 0.04; // フロー強度を少し強める\n\n  const positions = useMemo(() => {\n    const positions = [];\n    for (let i = 0; i < count; i++) {\n      const theta = Math.random() * Math.PI * 2;\n      const phi = Math.acos(2 * Math.random() - 1);\n      const r = Math.pow(Math.random(), 0.3) * radius; // 0.5から0.3に変更してより中心に集中\n      const x = r * Math.sin(phi) * Math.cos(theta);\n      const y = (Math.random() * 2 - 1) * height * 0.8; // 高さ方向の分布を80%に抑える\n      const z = r * Math.sin(phi) * Math.sin(theta);\n      positions.push(x, y, z);\n    }\n    return new Float32Array(positions);\n  }, [count, radius, height]);\n  useFrame(({\n    clock\n  }) => {\n    const time = clock.getElapsedTime();\n    const positionsArray = pointsRef.current.array;\n    for (let i = 0; i < count; i++) {\n      const i3 = i * 3;\n      let x = positionsArray[i3];\n      let y = positionsArray[i3 + 1];\n      let z = positionsArray[i3 + 2];\n      const noise = noise3D(x * 0.5, y * 0.5, z * 0.5 + time * 0.2) * flowIntensity;\n      const angle = Math.atan2(z, x) + spiralSpeed * 0.01 + noise;\n      const r = Math.sqrt(x * x + z * z);\n      x = r * Math.cos(angle);\n      z = r * Math.sin(angle);\n      y += speed * 0.01 * (1 + noise);\n      if (y > height / 2) {\n        y = -height / 2;\n        const newTheta = Math.random() * Math.PI * 2;\n        const newPhi = Math.acos(2 * Math.random() - 1);\n        const newR = Math.pow(Math.random(), 0.3) * radius; // ここも0.3に変更\n        x = newR * Math.sin(newPhi) * Math.cos(newTheta);\n        z = newR * Math.sin(newPhi) * Math.sin(newTheta);\n      }\n      positionsArray[i3] = x;\n      positionsArray[i3 + 1] = y;\n      positionsArray[i3 + 2] = z;\n    }\n    pointsRef.current.needsUpdate = true;\n  });\n  return /*#__PURE__*/_jsxDEV(\"points\", {\n    frustumCulled: false,\n    children: [/*#__PURE__*/_jsxDEV(\"bufferGeometry\", {\n      children: /*#__PURE__*/_jsxDEV(\"bufferAttribute\", {\n        ref: pointsRef,\n        attach: \"attributes-position\",\n        array: positions,\n        count: positions.length / 3,\n        itemSize: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointsMaterial\", {\n      map: imgTex,\n      color: 0x66ffff,\n      size: 0.025 // サイズを少し大きくして、より目立たせる\n      ,\n      sizeAttenuation: true,\n      transparent: true,\n      opacity: 0.35 // 不透明度を少し上げる\n      ,\n      blending: THREE.AdditiveBlending\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(ParticleWave, \"eVijncbd3mSJs94jF70ZKAX9Z/E=\", false, function () {\n  return [useLoader, useFrame];\n});\n_c2 = ParticleWave;\nfunction ParticleBand({\n  yPosition,\n  count = 300000,\n  height = 0.6,\n  color = 0x66ffff\n}) {\n  _s2();\n  const pointsRef = useRef();\n  const imgTex = useLoader(THREE.TextureLoader, circleImg);\n  const {\n    viewport\n  } = useThree();\n  const noise3D = useMemo(() => createNoise3D(), []);\n  const positions = useMemo(() => {\n    const positions = [];\n    const aspect = viewport.width / viewport.height;\n    const width = viewport.width * 1.5;\n    const depth = width / aspect;\n    for (let i = 0; i < count; i++) {\n      const x = (Math.random() - 0.5) * width;\n      const y = yPosition + (Math.random() - 0.5) * height * 2;\n      const z = (Math.random() - 0.5) * depth;\n      positions.push(x, y, z);\n    }\n    return new Float32Array(positions);\n  }, [count, height, yPosition, viewport.width, viewport.height]);\n  useFrame(({\n    clock\n  }) => {\n    const time = clock.getElapsedTime();\n    const positionsArray = pointsRef.current.array;\n    const width = viewport.width * 1.5;\n    const aspect = viewport.width / viewport.height;\n    const depth = width / aspect;\n    for (let i = 0; i < count; i++) {\n      const i3 = i * 3;\n      let x = positionsArray[i3];\n      let y = positionsArray[i3 + 1];\n      let z = positionsArray[i3 + 2];\n      const noiseX = noise3D(x * 0.1, y * 0.1, time * 0.1) * 0.02;\n      const noiseY = noise3D(y * 0.1, z * 0.1, time * 0.1) * 0.02;\n      const noiseZ = noise3D(z * 0.1, x * 0.1, time * 0.1) * 0.02;\n      x += noiseX;\n      y += noiseY + Math.sin(x * 0.3 + time * 0.2) * 0.005;\n      z += noiseZ;\n      if (x < -width / 2 || x > width / 2 || y < yPosition - height || y > yPosition + height || z < -depth / 2 || z > depth / 2) {\n        x = (Math.random() - 0.5) * width;\n        y = yPosition + (Math.random() - 0.5) * height * 2;\n        z = (Math.random() - 0.5) * depth;\n      }\n      positionsArray[i3] = x;\n      positionsArray[i3 + 1] = y;\n      positionsArray[i3 + 2] = z;\n    }\n    pointsRef.current.needsUpdate = true;\n  });\n  return /*#__PURE__*/_jsxDEV(\"points\", {\n    frustumCulled: false,\n    children: [/*#__PURE__*/_jsxDEV(\"bufferGeometry\", {\n      children: /*#__PURE__*/_jsxDEV(\"bufferAttribute\", {\n        ref: pointsRef,\n        attach: \"attributes-position\",\n        array: positions,\n        count: positions.length / 3,\n        itemSize: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointsMaterial\", {\n      map: imgTex,\n      color: color,\n      size: 0.015,\n      sizeAttenuation: true,\n      transparent: true,\n      opacity: 0.3,\n      blending: THREE.AdditiveBlending\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n}\n_s2(ParticleBand, \"DR82PxGpIHJgRQvCaN4D7HGMsf8=\", false, function () {\n  return [useLoader, useThree, useFrame];\n});\n_c3 = ParticleBand;\nfunction AnimationCanvas() {\n  _s3();\n  const [canvasSize, setCanvasSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n  useEffect(() => {\n    const handleResize = () => {\n      setCanvasSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Canvas, {\n      camera: {\n        position: [0, 0, 7],\n        fov: 75\n      },\n      style: {\n        width: canvasSize.width,\n        height: canvasSize.height\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"color\", {\n        attach: \"background\",\n        args: ['#000']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ambientLight\", {\n        intensity: 0.5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n        position: [10, 10, 10]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CameraControls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ParticleWave, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ParticleBand, {\n        yPosition: 4.5,\n        color: 0x66ffff,\n        count: 150000,\n        height: 0.6\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ParticleBand, {\n        yPosition: -4.5,\n        color: 0x66ffff,\n        count: 150000,\n        height: 0.6\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay-text\",\n      children: \"Babel & Zoltraak\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s3(AnimationCanvas, \"efV7aGodZujF4CF/3jUnM4vIknw=\");\n_c4 = AnimationCanvas;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"anim\",\n    children: /*#__PURE__*/_jsxDEV(AnimationCanvas, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n}\n_c5 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"CameraControls\");\n$RefreshReg$(_c2, \"ParticleWave\");\n$RefreshReg$(_c3, \"ParticleBand\");\n$RefreshReg$(_c4, \"AnimationCanvas\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"names":["React","useRef","useMemo","useEffect","useState","Canvas","useFrame","useLoader","useThree","OrbitControls","THREE","createNoise3D","circleImg","jsxDEV","_jsxDEV","Fragment","_Fragment","CameraControls","autoRotate","autoRotateSpeed","fileName","_jsxFileName","lineNumber","columnNumber","_c","ParticleWave","_s","pointsRef","imgTex","TextureLoader","noise3D","count","radius","height","speed","spiralSpeed","flowIntensity","positions","i","theta","Math","random","PI","phi","acos","r","pow","x","sin","cos","y","z","push","Float32Array","clock","time","getElapsedTime","positionsArray","current","array","i3","noise","angle","atan2","sqrt","newTheta","newPhi","newR","needsUpdate","frustumCulled","children","ref","attach","length","itemSize","map","color","size","sizeAttenuation","transparent","opacity","blending","AdditiveBlending","_c2","ParticleBand","yPosition","_s2","viewport","aspect","width","depth","noiseX","noiseY","noiseZ","_c3","AnimationCanvas","_s3","canvasSize","setCanvasSize","window","innerWidth","innerHeight","handleResize","addEventListener","removeEventListener","camera","position","fov","style","args","intensity","className","_c4","App","_c5","$RefreshReg$"],"sources":["/Users/kasaikazunobu/project/ai/babel/ripple/3d-ripple-animation/src/App.js"],"sourcesContent":["// App.js\nimport React, { useRef, useMemo, useEffect, useState } from 'react';\nimport { Canvas, useFrame, useLoader, useThree } from '@react-three/fiber';\nimport { OrbitControls } from '@react-three/drei';\nimport * as THREE from 'three';\nimport { createNoise3D } from 'simplex-noise';\n\nimport circleImg from './assets/circle.png';\nimport './App.css';\n\nfunction CameraControls() {\n  return <OrbitControls autoRotate autoRotateSpeed={-0.2} />;\n}\n\nfunction ParticleWave() {\n  const pointsRef = useRef();\n  const imgTex = useLoader(THREE.TextureLoader, circleImg);\n  \n  const noise3D = useMemo(() => createNoise3D(), []);\n\n  const count = 50000;\n  const radius = 4; // 半径を少し小さくして、より集約させる\n  const height = 12; // 高さも少し小さくする\n  const speed = 0.5; // 速度を少し上げて、集約を早める\n  const spiralSpeed = 0.5; // スパイラル速度も少し上げる\n  const flowIntensity = 0.04; // フロー強度を少し強める\n\n  const positions = useMemo(() => {\n    const positions = [];\n    for (let i = 0; i < count; i++) {\n      const theta = Math.random() * Math.PI * 2;\n      const phi = Math.acos(2 * Math.random() - 1);\n      const r = Math.pow(Math.random(), 0.3) * radius; // 0.5から0.3に変更してより中心に集中\n      const x = r * Math.sin(phi) * Math.cos(theta);\n      const y = (Math.random() * 2 - 1) * height * 0.8; // 高さ方向の分布を80%に抑える\n      const z = r * Math.sin(phi) * Math.sin(theta);\n      positions.push(x, y, z);\n    }\n    return new Float32Array(positions);\n  }, [count, radius, height]);\n\n  useFrame(({ clock }) => {\n    const time = clock.getElapsedTime();\n    const positionsArray = pointsRef.current.array;\n    for (let i = 0; i < count; i++) {\n      const i3 = i * 3;\n      let x = positionsArray[i3];\n      let y = positionsArray[i3 + 1];\n      let z = positionsArray[i3 + 2];\n\n      const noise = noise3D(x * 0.5, y * 0.5, z * 0.5 + time * 0.2) * flowIntensity;\n      const angle = Math.atan2(z, x) + spiralSpeed * 0.01 + noise;\n      const r = Math.sqrt(x * x + z * z);\n      \n      x = r * Math.cos(angle);\n      z = r * Math.sin(angle);\n      y += speed * 0.01 * (1 + noise);\n\n      if (y > height / 2) {\n        y = -height / 2;\n        const newTheta = Math.random() * Math.PI * 2;\n        const newPhi = Math.acos(2 * Math.random() - 1);\n        const newR = Math.pow(Math.random(), 0.3) * radius; // ここも0.3に変更\n        x = newR * Math.sin(newPhi) * Math.cos(newTheta);\n        z = newR * Math.sin(newPhi) * Math.sin(newTheta);\n      }\n\n      positionsArray[i3] = x;\n      positionsArray[i3 + 1] = y;\n      positionsArray[i3 + 2] = z;\n    }\n    pointsRef.current.needsUpdate = true;\n  });\n\n  return (\n    <points frustumCulled={false}>\n      <bufferGeometry>\n        <bufferAttribute\n          ref={pointsRef}\n          attach=\"attributes-position\"\n          array={positions}\n          count={positions.length / 3}\n          itemSize={3}\n        />\n      </bufferGeometry>\n      <pointsMaterial\n        map={imgTex}\n        color={0x66ffff}\n        size={0.025} // サイズを少し大きくして、より目立たせる\n        sizeAttenuation\n        transparent={true}\n        opacity={0.35} // 不透明度を少し上げる\n        blending={THREE.AdditiveBlending}\n      />\n    </points>\n  );\n}\n\nfunction ParticleBand({ yPosition, count = 300000, height = 0.6, color = 0x66ffff }) {\n  const pointsRef = useRef();\n  const imgTex = useLoader(THREE.TextureLoader, circleImg);\n  const { viewport } = useThree();\n  const noise3D = useMemo(() => createNoise3D(), []);\n\n  const positions = useMemo(() => {\n    const positions = [];\n    const aspect = viewport.width / viewport.height;\n    const width = viewport.width * 1.5;\n    const depth = width / aspect;\n    for (let i = 0; i < count; i++) {\n      const x = (Math.random() - 0.5) * width;\n      const y = yPosition + (Math.random() - 0.5) * height * 2;\n      const z = (Math.random() - 0.5) * depth;\n      positions.push(x, y, z);\n    }\n    return new Float32Array(positions);\n  }, [count, height, yPosition, viewport.width, viewport.height]);\n\n  useFrame(({ clock }) => {\n    const time = clock.getElapsedTime();\n    const positionsArray = pointsRef.current.array;\n    const width = viewport.width * 1.5;\n    const aspect = viewport.width / viewport.height;\n    const depth = width / aspect;\n    for (let i = 0; i < count; i++) {\n      const i3 = i * 3;\n      let x = positionsArray[i3];\n      let y = positionsArray[i3 + 1];\n      let z = positionsArray[i3 + 2];\n\n      const noiseX = noise3D(x * 0.1, y * 0.1, time * 0.1) * 0.02;\n      const noiseY = noise3D(y * 0.1, z * 0.1, time * 0.1) * 0.02;\n      const noiseZ = noise3D(z * 0.1, x * 0.1, time * 0.1) * 0.02;\n\n      x += noiseX;\n      y += noiseY + Math.sin(x * 0.3 + time * 0.2) * 0.005;\n      z += noiseZ;\n\n      if (x < -width / 2 || x > width / 2 || \n          y < yPosition - height || y > yPosition + height || \n          z < -depth / 2 || z > depth / 2) {\n        x = (Math.random() - 0.5) * width;\n        y = yPosition + (Math.random() - 0.5) * height * 2;\n        z = (Math.random() - 0.5) * depth;\n      }\n\n      positionsArray[i3] = x;\n      positionsArray[i3 + 1] = y;\n      positionsArray[i3 + 2] = z;\n    }\n    pointsRef.current.needsUpdate = true;\n  });\n\n  return (\n    <points frustumCulled={false}>\n      <bufferGeometry>\n        <bufferAttribute\n          ref={pointsRef}\n          attach=\"attributes-position\"\n          array={positions}\n          count={positions.length / 3}\n          itemSize={3}\n        />\n      </bufferGeometry>\n      <pointsMaterial\n        map={imgTex}\n        color={color}\n        size={0.015}\n        sizeAttenuation\n        transparent={true}\n        opacity={0.3}\n        blending={THREE.AdditiveBlending}\n      />\n    </points>\n  );\n}\n\nfunction AnimationCanvas() {\n  const [canvasSize, setCanvasSize] = useState({ width: window.innerWidth, height: window.innerHeight });\n\n  useEffect(() => {\n    const handleResize = () => {\n      setCanvasSize({ width: window.innerWidth, height: window.innerHeight });\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return (\n    <>\n      <Canvas camera={{ position: [0, 0, 7], fov: 75 }} style={{ width: canvasSize.width, height: canvasSize.height }}>\n        <color attach=\"background\" args={['#000']} />\n        <ambientLight intensity={0.5} />\n        <pointLight position={[10, 10, 10]} />\n        <CameraControls />\n        <ParticleWave />\n        <ParticleBand yPosition={4.5} color={0x66ffff} count={150000} height={0.6} />\n        <ParticleBand yPosition={-4.5} color={0x66ffff} count={150000} height={0.6} />\n      </Canvas>\n      <div className=\"overlay-text\">\n        Babel & Zoltraak\n      </div>\n    </>\n  );\n}\n\nfunction App() {\n  return (\n    <div className=\"anim\">\n      <AnimationCanvas />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}