{"ast":null,"code":"var _jsxFileName = \"/Users/kasaikazunobu/project/ai/babel/ripple/3d-ripple-animation/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\n// App.js\nimport React, { useRef, useMemo, useEffect, useState } from 'react';\nimport { Canvas, useFrame, useLoader, useThree } from '@react-three/fiber';\nimport { OrbitControls } from '@react-three/drei';\nimport * as THREE from 'three';\nimport { createNoise3D } from 'simplex-noise';\nimport circleImg from './assets/circle.png';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CameraControls() {\n  return /*#__PURE__*/_jsxDEV(OrbitControls, {\n    autoRotate: true,\n    autoRotateSpeed: -0.2\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 10\n  }, this);\n}\n_c = CameraControls;\nfunction ParticleWave() {\n  _s();\n  const pointsRef = useRef();\n  const imgTex = useLoader(THREE.TextureLoader, circleImg);\n  const noise3D = useMemo(() => createNoise3D(), []);\n  const timeRef = useRef(0);\n  const count = 50000;\n  const radius = 4;\n  const height = 12;\n  const speed = 0.5;\n  const spiralSpeed = 0.5;\n  const flowIntensity = 0.04;\n  const concentrationSpeed = 0.5; // 集約速度\n\n  const positions = useMemo(() => {\n    const positions = [];\n    for (let i = 0; i < count; i++) {\n      const theta = Math.random() * Math.PI * 2;\n      const phi = Math.acos(2 * Math.random() - 1);\n      const r = Math.random() * radius * 2; // 初期半径を2倍に\n      const x = r * Math.sin(phi) * Math.cos(theta);\n      const y = (Math.random() * 2 - 1) * height;\n      const z = r * Math.sin(phi) * Math.sin(theta);\n      positions.push(x, y, z);\n    }\n    return new Float32Array(positions);\n  }, [count, radius, height]);\n  useFrame(({\n    clock\n  }) => {\n    const deltaTime = clock.getDelta();\n    timeRef.current += deltaTime;\n    const time = clock.getElapsedTime();\n    const positionsArray = pointsRef.current.array;\n    for (let i = 0; i < count; i++) {\n      const i3 = i * 3;\n      let x = positionsArray[i3];\n      let y = positionsArray[i3 + 1];\n      let z = positionsArray[i3 + 2];\n\n      // 集約効果\n      const concentrationFactor = Math.min(timeRef.current * concentrationSpeed, 1);\n      const targetRadius = radius * (1 - concentrationFactor) + radius * 0.5 * concentrationFactor;\n      const currentRadius = Math.sqrt(x * x + z * z);\n      const radiusRatio = targetRadius / currentRadius;\n      x *= radiusRatio;\n      z *= radiusRatio;\n      const noise = noise3D(x * 0.5, y * 0.5, z * 0.5 + time * 0.2) * flowIntensity;\n      const angle = Math.atan2(z, x) + spiralSpeed * 0.01 + noise;\n      const r = Math.sqrt(x * x + z * z);\n      x = r * Math.cos(angle);\n      z = r * Math.sin(angle);\n      y += speed * 0.01 * (1 + noise);\n      if (y > height / 2) {\n        y = -height / 2;\n        const newTheta = Math.random() * Math.PI * 2;\n        const newPhi = Math.acos(2 * Math.random() - 1);\n        const newR = Math.pow(Math.random(), 0.3) * targetRadius;\n        x = newR * Math.sin(newPhi) * Math.cos(newTheta);\n        z = newR * Math.sin(newPhi) * Math.sin(newTheta);\n      }\n      positionsArray[i3] = x;\n      positionsArray[i3 + 1] = y;\n      positionsArray[i3 + 2] = z;\n    }\n    pointsRef.current.needsUpdate = true;\n  });\n  return /*#__PURE__*/_jsxDEV(\"points\", {\n    frustumCulled: false,\n    children: [/*#__PURE__*/_jsxDEV(\"bufferGeometry\", {\n      children: /*#__PURE__*/_jsxDEV(\"bufferAttribute\", {\n        ref: pointsRef,\n        attach: \"attributes-position\",\n        array: positions,\n        count: positions.length / 3,\n        itemSize: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointsMaterial\", {\n      map: imgTex,\n      color: 0x66ffff,\n      size: 0.025,\n      sizeAttenuation: true,\n      transparent: true,\n      opacity: 0.35,\n      blending: THREE.AdditiveBlending\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(ParticleWave, \"yqOfaPqxwG9uYFexTIkfXfwoa0Y=\", false, function () {\n  return [useLoader, useFrame];\n});\n_c2 = ParticleWave;\nfunction ParticleBand({\n  yPosition,\n  count = 300000,\n  height = 0.6,\n  color = 0x66ffff\n}) {\n  _s2();\n  const pointsRef = useRef();\n  const imgTex = useLoader(THREE.TextureLoader, circleImg);\n  const {\n    viewport\n  } = useThree();\n  const noise3D = useMemo(() => createNoise3D(), []);\n  const positions = useMemo(() => {\n    const positions = [];\n    const aspect = viewport.width / viewport.height;\n    const width = viewport.width * 1.5;\n    const depth = width / aspect;\n    for (let i = 0; i < count; i++) {\n      const x = (Math.random() - 0.5) * width;\n      const y = yPosition + (Math.random() - 0.5) * height * 2;\n      const z = (Math.random() - 0.5) * depth;\n      positions.push(x, y, z);\n    }\n    return new Float32Array(positions);\n  }, [count, height, yPosition, viewport.width, viewport.height]);\n  useFrame(({\n    clock\n  }) => {\n    const time = clock.getElapsedTime();\n    const positionsArray = pointsRef.current.array;\n    const width = viewport.width * 1.5;\n    const aspect = viewport.width / viewport.height;\n    const depth = width / aspect;\n    for (let i = 0; i < count; i++) {\n      const i3 = i * 3;\n      let x = positionsArray[i3];\n      let y = positionsArray[i3 + 1];\n      let z = positionsArray[i3 + 2];\n      const noiseX = noise3D(x * 0.1, y * 0.1, time * 0.1) * 0.02;\n      const noiseY = noise3D(y * 0.1, z * 0.1, time * 0.1) * 0.02;\n      const noiseZ = noise3D(z * 0.1, x * 0.1, time * 0.1) * 0.02;\n      x += noiseX;\n      y += noiseY + Math.sin(x * 0.3 + time * 0.2) * 0.005;\n      z += noiseZ;\n      if (x < -width / 2 || x > width / 2 || y < yPosition - height || y > yPosition + height || z < -depth / 2 || z > depth / 2) {\n        x = (Math.random() - 0.5) * width;\n        y = yPosition + (Math.random() - 0.5) * height * 2;\n        z = (Math.random() - 0.5) * depth;\n      }\n      positionsArray[i3] = x;\n      positionsArray[i3 + 1] = y;\n      positionsArray[i3 + 2] = z;\n    }\n    pointsRef.current.needsUpdate = true;\n  });\n  return /*#__PURE__*/_jsxDEV(\"points\", {\n    frustumCulled: false,\n    children: [/*#__PURE__*/_jsxDEV(\"bufferGeometry\", {\n      children: /*#__PURE__*/_jsxDEV(\"bufferAttribute\", {\n        ref: pointsRef,\n        attach: \"attributes-position\",\n        array: positions,\n        count: positions.length / 3,\n        itemSize: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointsMaterial\", {\n      map: imgTex,\n      color: color,\n      size: 0.015,\n      sizeAttenuation: true,\n      transparent: true,\n      opacity: 0.3,\n      blending: THREE.AdditiveBlending\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n}\n_s2(ParticleBand, \"DR82PxGpIHJgRQvCaN4D7HGMsf8=\", false, function () {\n  return [useLoader, useThree, useFrame];\n});\n_c3 = ParticleBand;\nfunction AnimationCanvas() {\n  _s3();\n  const [canvasSize, setCanvasSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n  useEffect(() => {\n    const handleResize = () => {\n      setCanvasSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Canvas, {\n      camera: {\n        position: [0, 0, 7],\n        fov: 75\n      },\n      style: {\n        width: canvasSize.width,\n        height: canvasSize.height\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"color\", {\n        attach: \"background\",\n        args: ['#000']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ambientLight\", {\n        intensity: 0.5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n        position: [10, 10, 10]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CameraControls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ParticleWave, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ParticleBand, {\n        yPosition: 4.5,\n        color: 0x66ffff,\n        count: 300000,\n        height: 0.6\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ParticleBand, {\n        yPosition: -4.5,\n        color: 0x66ffff,\n        count: 300000,\n        height: 0.6\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay-text\",\n      children: \"Babel & Zoltraak\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s3(AnimationCanvas, \"efV7aGodZujF4CF/3jUnM4vIknw=\");\n_c4 = AnimationCanvas;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"anim\",\n    children: /*#__PURE__*/_jsxDEV(AnimationCanvas, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 5\n  }, this);\n}\n_c5 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"CameraControls\");\n$RefreshReg$(_c2, \"ParticleWave\");\n$RefreshReg$(_c3, \"ParticleBand\");\n$RefreshReg$(_c4, \"AnimationCanvas\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"names":["React","useRef","useMemo","useEffect","useState","Canvas","useFrame","useLoader","useThree","OrbitControls","THREE","createNoise3D","circleImg","jsxDEV","_jsxDEV","Fragment","_Fragment","CameraControls","autoRotate","autoRotateSpeed","fileName","_jsxFileName","lineNumber","columnNumber","_c","ParticleWave","_s","pointsRef","imgTex","TextureLoader","noise3D","timeRef","count","radius","height","speed","spiralSpeed","flowIntensity","concentrationSpeed","positions","i","theta","Math","random","PI","phi","acos","r","x","sin","cos","y","z","push","Float32Array","clock","deltaTime","getDelta","current","time","getElapsedTime","positionsArray","array","i3","concentrationFactor","min","targetRadius","currentRadius","sqrt","radiusRatio","noise","angle","atan2","newTheta","newPhi","newR","pow","needsUpdate","frustumCulled","children","ref","attach","length","itemSize","map","color","size","sizeAttenuation","transparent","opacity","blending","AdditiveBlending","_c2","ParticleBand","yPosition","_s2","viewport","aspect","width","depth","noiseX","noiseY","noiseZ","_c3","AnimationCanvas","_s3","canvasSize","setCanvasSize","window","innerWidth","innerHeight","handleResize","addEventListener","removeEventListener","camera","position","fov","style","args","intensity","className","_c4","App","_c5","$RefreshReg$"],"sources":["/Users/kasaikazunobu/project/ai/babel/ripple/3d-ripple-animation/src/App.js"],"sourcesContent":["// App.js\nimport React, { useRef, useMemo, useEffect, useState } from 'react';\nimport { Canvas, useFrame, useLoader, useThree } from '@react-three/fiber';\nimport { OrbitControls } from '@react-three/drei';\nimport * as THREE from 'three';\nimport { createNoise3D } from 'simplex-noise';\n\nimport circleImg from './assets/circle.png';\nimport './App.css';\n\nfunction CameraControls() {\n  return <OrbitControls autoRotate autoRotateSpeed={-0.2} />;\n}\n\nfunction ParticleWave() {\n  const pointsRef = useRef();\n  const imgTex = useLoader(THREE.TextureLoader, circleImg);\n  const noise3D = useMemo(() => createNoise3D(), []);\n  const timeRef = useRef(0);\n\n  const count = 50000;\n  const radius = 4;\n  const height = 12;\n  const speed = 0.5;\n  const spiralSpeed = 0.5;\n  const flowIntensity = 0.04;\n  const concentrationSpeed = 0.5; // 集約速度\n\n  const positions = useMemo(() => {\n    const positions = [];\n    for (let i = 0; i < count; i++) {\n      const theta = Math.random() * Math.PI * 2;\n      const phi = Math.acos(2 * Math.random() - 1);\n      const r = Math.random() * radius * 2; // 初期半径を2倍に\n      const x = r * Math.sin(phi) * Math.cos(theta);\n      const y = (Math.random() * 2 - 1) * height;\n      const z = r * Math.sin(phi) * Math.sin(theta);\n      positions.push(x, y, z);\n    }\n    return new Float32Array(positions);\n  }, [count, radius, height]);\n\n  useFrame(({ clock }) => {\n    const deltaTime = clock.getDelta();\n    timeRef.current += deltaTime;\n    const time = clock.getElapsedTime();\n    const positionsArray = pointsRef.current.array;\n\n    for (let i = 0; i < count; i++) {\n      const i3 = i * 3;\n      let x = positionsArray[i3];\n      let y = positionsArray[i3 + 1];\n      let z = positionsArray[i3 + 2];\n\n      // 集約効果\n      const concentrationFactor = Math.min(timeRef.current * concentrationSpeed, 1);\n      const targetRadius = radius * (1 - concentrationFactor) + radius * 0.5 * concentrationFactor;\n      const currentRadius = Math.sqrt(x * x + z * z);\n      const radiusRatio = targetRadius / currentRadius;\n\n      x *= radiusRatio;\n      z *= radiusRatio;\n\n      const noise = noise3D(x * 0.5, y * 0.5, z * 0.5 + time * 0.2) * flowIntensity;\n      const angle = Math.atan2(z, x) + spiralSpeed * 0.01 + noise;\n      const r = Math.sqrt(x * x + z * z);\n      \n      x = r * Math.cos(angle);\n      z = r * Math.sin(angle);\n      y += speed * 0.01 * (1 + noise);\n\n      if (y > height / 2) {\n        y = -height / 2;\n        const newTheta = Math.random() * Math.PI * 2;\n        const newPhi = Math.acos(2 * Math.random() - 1);\n        const newR = Math.pow(Math.random(), 0.3) * targetRadius;\n        x = newR * Math.sin(newPhi) * Math.cos(newTheta);\n        z = newR * Math.sin(newPhi) * Math.sin(newTheta);\n      }\n\n      positionsArray[i3] = x;\n      positionsArray[i3 + 1] = y;\n      positionsArray[i3 + 2] = z;\n    }\n    pointsRef.current.needsUpdate = true;\n  });\n\n  return (\n    <points frustumCulled={false}>\n      <bufferGeometry>\n        <bufferAttribute\n          ref={pointsRef}\n          attach=\"attributes-position\"\n          array={positions}\n          count={positions.length / 3}\n          itemSize={3}\n        />\n      </bufferGeometry>\n      <pointsMaterial\n        map={imgTex}\n        color={0x66ffff}\n        size={0.025}\n        sizeAttenuation\n        transparent={true}\n        opacity={0.35}\n        blending={THREE.AdditiveBlending}\n      />\n    </points>\n  );\n}\n\nfunction ParticleBand({ yPosition, count = 300000, height = 0.6, color = 0x66ffff }) {\n  const pointsRef = useRef();\n  const imgTex = useLoader(THREE.TextureLoader, circleImg);\n  const { viewport } = useThree();\n  const noise3D = useMemo(() => createNoise3D(), []);\n\n  const positions = useMemo(() => {\n    const positions = [];\n    const aspect = viewport.width / viewport.height;\n    const width = viewport.width * 1.5;\n    const depth = width / aspect;\n    for (let i = 0; i < count; i++) {\n      const x = (Math.random() - 0.5) * width;\n      const y = yPosition + (Math.random() - 0.5) * height * 2;\n      const z = (Math.random() - 0.5) * depth;\n      positions.push(x, y, z);\n    }\n    return new Float32Array(positions);\n  }, [count, height, yPosition, viewport.width, viewport.height]);\n\n  useFrame(({ clock }) => {\n    const time = clock.getElapsedTime();\n    const positionsArray = pointsRef.current.array;\n    const width = viewport.width * 1.5;\n    const aspect = viewport.width / viewport.height;\n    const depth = width / aspect;\n    for (let i = 0; i < count; i++) {\n      const i3 = i * 3;\n      let x = positionsArray[i3];\n      let y = positionsArray[i3 + 1];\n      let z = positionsArray[i3 + 2];\n\n      const noiseX = noise3D(x * 0.1, y * 0.1, time * 0.1) * 0.02;\n      const noiseY = noise3D(y * 0.1, z * 0.1, time * 0.1) * 0.02;\n      const noiseZ = noise3D(z * 0.1, x * 0.1, time * 0.1) * 0.02;\n\n      x += noiseX;\n      y += noiseY + Math.sin(x * 0.3 + time * 0.2) * 0.005;\n      z += noiseZ;\n\n      if (x < -width / 2 || x > width / 2 || \n          y < yPosition - height || y > yPosition + height || \n          z < -depth / 2 || z > depth / 2) {\n        x = (Math.random() - 0.5) * width;\n        y = yPosition + (Math.random() - 0.5) * height * 2;\n        z = (Math.random() - 0.5) * depth;\n      }\n\n      positionsArray[i3] = x;\n      positionsArray[i3 + 1] = y;\n      positionsArray[i3 + 2] = z;\n    }\n    pointsRef.current.needsUpdate = true;\n  });\n\n  return (\n    <points frustumCulled={false}>\n      <bufferGeometry>\n        <bufferAttribute\n          ref={pointsRef}\n          attach=\"attributes-position\"\n          array={positions}\n          count={positions.length / 3}\n          itemSize={3}\n        />\n      </bufferGeometry>\n      <pointsMaterial\n        map={imgTex}\n        color={color}\n        size={0.015}\n        sizeAttenuation\n        transparent={true}\n        opacity={0.3}\n        blending={THREE.AdditiveBlending}\n      />\n    </points>\n  );\n}\n\nfunction AnimationCanvas() {\n  const [canvasSize, setCanvasSize] = useState({ width: window.innerWidth, height: window.innerHeight });\n\n  useEffect(() => {\n    const handleResize = () => {\n      setCanvasSize({ width: window.innerWidth, height: window.innerHeight });\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return (\n    <>\n      <Canvas camera={{ position: [0, 0, 7], fov: 75 }} style={{ width: canvasSize.width, height: canvasSize.height }}>\n        <color attach=\"background\" args={['#000']} />\n        <ambientLight intensity={0.5} />\n        <pointLight position={[10, 10, 10]} />\n        <CameraControls />\n        <ParticleWave />\n        <ParticleBand yPosition={4.5} color={0x66ffff} count={300000} height={0.6} />\n        <ParticleBand yPosition={-4.5} color={0x66ffff} count={300000} height={0.6} />\n      </Canvas>\n      <div className=\"overlay-text\">\n        Babel & Zoltraak\n      </div>\n    </>\n  );\n}\n\nfunction App() {\n  return (\n    <div className=\"anim\">\n      <AnimationCanvas />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}