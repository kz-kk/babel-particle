{"ast":null,"code":"var _jsxFileName = \"/Users/kasaikazunobu/project/babel/babel-particle/src/components/ParticleText.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useMemo, useEffect } from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ParticleText({\n  text,\n  font,\n  ...props\n}) {\n  _s();\n  const points = useRef();\n  const particlesData = useMemo(() => {\n    const canvas = document.createElement('canvas');\n    const context = canvas.getContext('2d');\n    canvas.width = 1024;\n    canvas.height = 256;\n    context.font = '200px ' + font;\n    context.fillStyle = '#ffffff';\n    context.textAlign = 'center';\n    context.fillText(text, canvas.width / 2, canvas.height / 2);\n    const imageData = context.getImageData(0, 0, canvas.width, canvas.height);\n    const data = imageData.data;\n    const particles = [];\n    for (let y = 0; y < canvas.height; y += 2) {\n      for (let x = 0; x < canvas.width; x += 2) {\n        if (data[(y * canvas.width + x) * 4 + 3] > 128) {\n          particles.push({\n            x: (x - canvas.width / 2) / 2,\n            y: -(y - canvas.height / 2) / 2,\n            z: 0,\n            ox: (x - canvas.width / 2) / 2,\n            oy: -(y - canvas.height / 2) / 2,\n            oz: 0,\n            vx: (Math.random() - 0.5) * 2,\n            vy: (Math.random() - 0.5) * 2,\n            vz: (Math.random() - 0.5) * 2\n          });\n        }\n      }\n    }\n    return particles;\n  }, [text, font]);\n  const positions = useMemo(() => {\n    return new Float32Array(particlesData.length * 3);\n  }, [particlesData]);\n  useEffect(() => {\n    if (points.current) {\n      points.current.geometry.setAttribute('position', new THREE.BufferAttribute(positions, 3));\n    }\n  }, [positions]);\n  useFrame(({\n    clock\n  }) => {\n    if (points.current) {\n      const time = clock.getElapsedTime();\n      for (let i = 0; i < particlesData.length; i++) {\n        const particle = particlesData[i];\n        const life = Math.sin(time * 0.5) * 0.5 + 0.5;\n        particle.x = particle.ox + particle.vx * life * 20;\n        particle.y = particle.oy + particle.vy * life * 20;\n        particle.z = particle.oz + particle.vz * life * 20;\n        positions[i * 3] = particle.x;\n        positions[i * 3 + 1] = particle.y;\n        positions[i * 3 + 2] = particle.z;\n      }\n      points.current.geometry.attributes.position.needsUpdate = true;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"points\", {\n    ref: points,\n    ...props,\n    children: [/*#__PURE__*/_jsxDEV(\"bufferGeometry\", {\n      children: /*#__PURE__*/_jsxDEV(\"bufferAttribute\", {\n        attach: \"attributes-position\",\n        count: particlesData.length,\n        array: positions,\n        itemSize: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointsMaterial\", {\n      color: \"#ffffff\",\n      size: 4,\n      sizeAttenuation: true,\n      transparent: true,\n      opacity: 0.8\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(ParticleText, \"MPh76cMGTuRMpQlRQw2fI2K41Ik=\", false, function () {\n  return [useFrame];\n});\n_c = ParticleText;\nexport default ParticleText;\nvar _c;\n$RefreshReg$(_c, \"ParticleText\");","map":{"version":3,"names":["React","useRef","useMemo","useEffect","useFrame","THREE","jsxDEV","_jsxDEV","ParticleText","text","font","props","_s","points","particlesData","canvas","document","createElement","context","getContext","width","height","fillStyle","textAlign","fillText","imageData","getImageData","data","particles","y","x","push","z","ox","oy","oz","vx","Math","random","vy","vz","positions","Float32Array","length","current","geometry","setAttribute","BufferAttribute","clock","time","getElapsedTime","i","particle","life","sin","attributes","position","needsUpdate","ref","children","attach","count","array","itemSize","fileName","_jsxFileName","lineNumber","columnNumber","color","size","sizeAttenuation","transparent","opacity","_c","$RefreshReg$"],"sources":["/Users/kasaikazunobu/project/babel/babel-particle/src/components/ParticleText.js"],"sourcesContent":["import React, { useRef, useMemo, useEffect } from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport * as THREE from 'three';\n\nfunction ParticleText({ text, font, ...props }) {\n  const points = useRef();\n\n  const particlesData = useMemo(() => {\n    const canvas = document.createElement('canvas');\n    const context = canvas.getContext('2d');\n    canvas.width = 1024;\n    canvas.height = 256;\n    context.font = '200px ' + font;\n    context.fillStyle = '#ffffff';\n    context.textAlign = 'center';\n    context.fillText(text, canvas.width / 2, canvas.height / 2);\n\n    const imageData = context.getImageData(0, 0, canvas.width, canvas.height);\n    const data = imageData.data;\n\n    const particles = [];\n    for (let y = 0; y < canvas.height; y += 2) {\n      for (let x = 0; x < canvas.width; x += 2) {\n        if (data[(y * canvas.width + x) * 4 + 3] > 128) {\n          particles.push({\n            x: (x - canvas.width / 2) / 2,\n            y: -(y - canvas.height / 2) / 2,\n            z: 0,\n            ox: (x - canvas.width / 2) / 2,\n            oy: -(y - canvas.height / 2) / 2,\n            oz: 0,\n            vx: (Math.random() - 0.5) * 2,\n            vy: (Math.random() - 0.5) * 2,\n            vz: (Math.random() - 0.5) * 2,\n          });\n        }\n      }\n    }\n    return particles;\n  }, [text, font]);\n\n  const positions = useMemo(() => {\n    return new Float32Array(particlesData.length * 3);\n  }, [particlesData]);\n\n  useEffect(() => {\n    if (points.current) {\n      points.current.geometry.setAttribute('position', new THREE.BufferAttribute(positions, 3));\n    }\n  }, [positions]);\n\n  useFrame(({ clock }) => {\n    if (points.current) {\n      const time = clock.getElapsedTime();\n      for (let i = 0; i < particlesData.length; i++) {\n        const particle = particlesData[i];\n        const life = Math.sin(time * 0.5) * 0.5 + 0.5;\n        particle.x = particle.ox + particle.vx * life * 20;\n        particle.y = particle.oy + particle.vy * life * 20;\n        particle.z = particle.oz + particle.vz * life * 20;\n\n        positions[i * 3] = particle.x;\n        positions[i * 3 + 1] = particle.y;\n        positions[i * 3 + 2] = particle.z;\n      }\n      points.current.geometry.attributes.position.needsUpdate = true;\n    }\n  });\n\n  return (\n    <points ref={points} {...props}>\n      <bufferGeometry>\n        <bufferAttribute\n          attach=\"attributes-position\"\n          count={particlesData.length}\n          array={positions}\n          itemSize={3}\n        />\n      </bufferGeometry>\n      <pointsMaterial color=\"#ffffff\" size={4} sizeAttenuation={true} transparent opacity={0.8} />\n    </points>\n  );\n}\n\nexport default ParticleText;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}