{"ast":null,"code":"var _jsxFileName = \"/Users/kasaikazunobu/project/ai/babel/ripple/3d-ripple-animation/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\n// App.js\nimport React, { useRef, useMemo, useEffect, useState } from 'react';\nimport { Canvas, useFrame, useLoader, useThree } from '@react-three/fiber';\nimport { OrbitControls, Text } from '@react-three/drei';\nimport * as THREE from 'three';\nimport { createNoise3D } from 'simplex-noise';\nimport circleImg from './assets/circle.png';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst noise3D = createNoise3D();\nfunction CameraControls() {\n  return /*#__PURE__*/_jsxDEV(OrbitControls, {\n    autoRotate: true,\n    autoRotateSpeed: -0.2\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 10\n  }, this);\n}\n_c = CameraControls;\nfunction ParticleWave() {\n  _s();\n  const pointsRef = useRef();\n  const imgTex = useLoader(THREE.TextureLoader, circleImg);\n  const count = 100000;\n  const radius = 2;\n  const height = 7;\n  const speed = 0.8;\n  const spiralSpeed = 0.3;\n  const flowIntensity = 0.05;\n  const positions = useMemo(() => {\n    const positions = [];\n    for (let i = 0; i < count; i++) {\n      const theta = Math.random() * Math.PI * 2;\n      const phi = Math.acos(2 * Math.random() - 1);\n      const r = Math.random() * radius;\n      const x = r * Math.sin(phi) * Math.cos(theta);\n      const y = Math.random() * height - height / 2;\n      const z = r * Math.sin(phi) * Math.sin(theta);\n      positions.push(x, y, z);\n    }\n    return new Float32Array(positions);\n  }, [count, radius, height]);\n  const opacities = useMemo(() => {\n    const opacities = [];\n    for (let i = 0; i < count; i++) {\n      const y = positions[i * 3 + 1];\n      const baseOpacity = 0.3;\n      const edgeOpacity = 0.6;\n      const opacity = baseOpacity + (edgeOpacity - baseOpacity) * (1 - Math.abs(y / (height / 2)));\n      opacities.push(opacity, opacity, opacity);\n    }\n    return new Float32Array(opacities);\n  }, [positions, count, height]);\n  useFrame(({\n    clock\n  }) => {\n    const time = clock.getElapsedTime();\n    const positionsArray = pointsRef.current.array;\n    const opacitiesArray = pointsRef.current.attributes.opacity.array;\n    for (let i = 0; i < count; i++) {\n      const i3 = i * 3;\n      let x = positionsArray[i3];\n      let y = positionsArray[i3 + 1];\n      let z = positionsArray[i3 + 2];\n      const noise = noise3D(x * 0.5, y * 0.5, z * 0.5 + time * 0.2) * flowIntensity;\n      const angle = Math.atan2(z, x) + spiralSpeed * 0.01 + noise;\n      const r = Math.sqrt(x * x + z * z);\n      x = r * Math.cos(angle);\n      z = r * Math.sin(angle);\n      y += speed * 0.01 * (1 + noise);\n      if (y > height / 2) {\n        y = -height / 2;\n        const newTheta = Math.random() * Math.PI * 2;\n        const newPhi = Math.acos(2 * Math.random() - 1);\n        const newR = Math.random() * radius;\n        x = newR * Math.sin(newPhi) * Math.cos(newTheta);\n        z = newR * Math.sin(newPhi) * Math.sin(newTheta);\n      }\n      positionsArray[i3] = x;\n      positionsArray[i3 + 1] = y;\n      positionsArray[i3 + 2] = z;\n      const opacity = opacities[i3];\n      opacitiesArray[i3] = opacity;\n      opacitiesArray[i3 + 1] = opacity;\n      opacitiesArray[i3 + 2] = opacity;\n    }\n    pointsRef.current.needsUpdate = true;\n    pointsRef.current.attributes.opacity.needsUpdate = true;\n  });\n  return /*#__PURE__*/_jsxDEV(\"points\", {\n    frustumCulled: false,\n    children: [/*#__PURE__*/_jsxDEV(\"bufferGeometry\", {\n      children: [/*#__PURE__*/_jsxDEV(\"bufferAttribute\", {\n        ref: pointsRef,\n        attach: \"attributes-position\",\n        array: positions,\n        count: positions.length / 3,\n        itemSize: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"bufferAttribute\", {\n        attach: \"attributes-opacity\",\n        array: opacities,\n        count: opacities.length / 3,\n        itemSize: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointsMaterial\", {\n      map: imgTex,\n      color: 0x66ffff,\n      size: 0.02,\n      sizeAttenuation: true,\n      transparent: true,\n      opacity: 0.3,\n      blending: THREE.AdditiveBlending,\n      vertexColors: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n_s(ParticleWave, \"3EkJ/x3dj5pjEOGnJd8ejFdEFQg=\", false, function () {\n  return [useLoader, useFrame];\n});\n_c2 = ParticleWave;\nfunction ParticleBand({\n  yPosition,\n  count = 200000,\n  height = 0.2,\n  color = 0x66ffff,\n  opacity = 0.2,\n  size = 0.015\n}) {\n  _s2();\n  const pointsRef = useRef();\n  const imgTex = useLoader(THREE.TextureLoader, circleImg);\n  const {\n    viewport\n  } = useThree();\n  const positions = useMemo(() => {\n    const positions = [];\n    const aspect = viewport.width / viewport.height;\n    const width = viewport.width * 1.2;\n    const depth = width / aspect;\n    for (let i = 0; i < count; i++) {\n      const x = (Math.random() - 0.5) * width;\n      const y = yPosition + (Math.random() - 0.5) * height;\n      const z = (Math.random() - 0.5) * depth;\n      positions.push(x, y, z);\n    }\n    return new Float32Array(positions);\n  }, [count, height, yPosition, viewport.width, viewport.height]);\n  useFrame(({\n    clock\n  }) => {\n    const time = clock.getElapsedTime();\n    const positionsArray = pointsRef.current.array;\n    const width = viewport.width * 1.2;\n    const aspect = viewport.width / viewport.height;\n    const depth = width / aspect;\n    for (let i = 0; i < count; i++) {\n      const i3 = i * 3;\n      let x = positionsArray[i3];\n      let y = positionsArray[i3 + 1];\n      let z = positionsArray[i3 + 2];\n      x += Math.sin(z * 0.3 + time * 0.2) * 0.01;\n      z += Math.cos(x * 0.3 + time * 0.2) * 0.01;\n      y += Math.sin(x * 0.3 + z * 0.3 + time * 0.1) * 0.002;\n      if (x < -width / 2) x += width;\n      if (x > width / 2) x -= width;\n      if (z < -depth / 2) z += depth;\n      if (z > depth / 2) z -= depth;\n      positionsArray[i3] = x;\n      positionsArray[i3 + 1] = y;\n      positionsArray[i3 + 2] = z;\n    }\n    pointsRef.current.needsUpdate = true;\n  });\n  return /*#__PURE__*/_jsxDEV(\"points\", {\n    frustumCulled: false,\n    children: [/*#__PURE__*/_jsxDEV(\"bufferGeometry\", {\n      children: /*#__PURE__*/_jsxDEV(\"bufferAttribute\", {\n        ref: pointsRef,\n        attach: \"attributes-position\",\n        array: positions,\n        count: positions.length / 3,\n        itemSize: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointsMaterial\", {\n      map: imgTex,\n      color: color,\n      size: size,\n      sizeAttenuation: true,\n      transparent: true,\n      opacity: opacity,\n      blending: THREE.AdditiveBlending\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n}\n_s2(ParticleBand, \"mkjvxZxlZJUcDF4z3qt0/IvloEQ=\", false, function () {\n  return [useLoader, useThree, useFrame];\n});\n_c3 = ParticleBand;\nfunction TextParticles() {\n  _s3();\n  const [dragging, setDragging] = useState(false);\n  const pointsRef = useRef();\n  const originalPositions = useRef();\n  const targetPositions = useRef();\n  const mousePosition = useRef({\n    x: 0,\n    y: 0\n  });\n  const {\n    viewport\n  } = useThree();\n  const textMesh = useMemo(() => {\n    const geometry = new THREE.BufferGeometry();\n    const material = new THREE.MeshBasicMaterial({\n      color: 0xffffff\n    });\n    const mesh = new THREE.Mesh(geometry, material);\n    const textGeometry = new THREE.TextGeometry('Babel & Zoltraak', {\n      font: new THREE.Font(),\n      // フォントをロードする必要があります\n      size: 0.5,\n      height: 0.1\n    });\n    textGeometry.center();\n    mesh.geometry = textGeometry;\n    return mesh;\n  }, []);\n  const particleCount = 5000;\n  const positions = useMemo(() => {\n    const positions = new Float32Array(particleCount * 3);\n    const tempPositions = textMesh.geometry.attributes.position.array;\n    for (let i = 0; i < particleCount; i++) {\n      const i3 = i * 3;\n      const randomIndex = Math.floor(Math.random() * (tempPositions.length / 3)) * 3;\n      positions[i3] = tempPositions[randomIndex];\n      positions[i3 + 1] = tempPositions[randomIndex + 1];\n      positions[i3 + 2] = tempPositions[randomIndex + 2];\n    }\n    originalPositions.current = positions.slice();\n    targetPositions.current = positions.slice();\n    return positions;\n  }, [textMesh, particleCount]);\n  useFrame(() => {\n    const positions = pointsRef.current.geometry.attributes.position.array;\n    for (let i = 0; i < particleCount; i++) {\n      const i3 = i * 3;\n      if (dragging) {\n        const dx = mousePosition.current.x - positions[i3];\n        const dy = mousePosition.current.y - positions[i3 + 1];\n        const distance = Math.sqrt(dx * dx + dy * dy);\n        if (distance < 0.1) {\n          positions[i3] += (Math.random() - 0.5) * 0.01;\n          positions[i3 + 1] += (Math.random() - 0.5) * 0.01;\n          positions[i3 + 2] += (Math.random() - 0.5) * 0.01;\n        }\n      } else {\n        positions[i3] += (targetPositions.current[i3] - positions[i3]) * 0.1;\n        positions[i3 + 1] += (targetPositions.current[i3 + 1] - positions[i3 + 1]) * 0.1;\n        positions[i3 + 2] += (targetPositions.current[i3 + 2] - positions[i3 + 2]) * 0.1;\n      }\n    }\n    pointsRef.current.geometry.attributes.position.needsUpdate = true;\n  });\n  const handlePointerDown = event => {\n    setDragging(true);\n    updateMousePosition(event);\n  };\n  const handlePointerUp = () => {\n    setDragging(false);\n    targetPositions.current = originalPositions.current.slice();\n  };\n  const handlePointerMove = event => {\n    if (dragging) {\n      updateMousePosition(event);\n    }\n  };\n  const updateMousePosition = event => {\n    mousePosition.current.x = event.clientX / window.innerWidth * 2 - 1;\n    mousePosition.current.y = -(event.clientY / window.innerHeight) * 2 + 1;\n  };\n  return /*#__PURE__*/_jsxDEV(\"points\", {\n    ref: pointsRef,\n    onPointerDown: handlePointerDown,\n    onPointerUp: handlePointerUp,\n    onPointerMove: handlePointerMove,\n    children: [/*#__PURE__*/_jsxDEV(\"bufferGeometry\", {\n      children: /*#__PURE__*/_jsxDEV(\"bufferAttribute\", {\n        attach: \"attributes-position\",\n        count: positions.length / 3,\n        array: positions,\n        itemSize: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointsMaterial\", {\n      color: 0xffffff,\n      size: 0.02,\n      sizeAttenuation: true,\n      transparent: true,\n      opacity: 0.8,\n      blending: THREE.AdditiveBlending\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 287,\n    columnNumber: 5\n  }, this);\n}\n_s3(TextParticles, \"DeL9gF1680/w6/++h6E19VUeoL0=\", false, function () {\n  return [useThree, useFrame];\n});\n_c4 = TextParticles;\nfunction AnimationCanvas() {\n  _s4();\n  const [canvasSize, setCanvasSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n  useEffect(() => {\n    const handleResize = () => {\n      setCanvasSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    camera: {\n      position: [0, 0, 9],\n      fov: 75\n    },\n    style: {\n      width: canvasSize.width,\n      height: canvasSize.height\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"color\", {\n      attach: \"background\",\n      args: ['#000']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ambientLight\", {\n      intensity: 0.5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n      position: [10, 10, 10]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CameraControls, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ParticleWave, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ParticleBand, {\n      yPosition: 4.5,\n      color: 0x66ffff,\n      count: 200000\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ParticleBand, {\n      yPosition: -4.5,\n      color: 0x66ffff,\n      count: 250000,\n      opacity: 0.3,\n      size: 0.018\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextParticles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 325,\n    columnNumber: 5\n  }, this);\n}\n_s4(AnimationCanvas, \"efV7aGodZujF4CF/3jUnM4vIknw=\");\n_c5 = AnimationCanvas;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"anim\",\n    children: /*#__PURE__*/_jsxDEV(AnimationCanvas, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 346,\n    columnNumber: 5\n  }, this);\n}\n_c6 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"CameraControls\");\n$RefreshReg$(_c2, \"ParticleWave\");\n$RefreshReg$(_c3, \"ParticleBand\");\n$RefreshReg$(_c4, \"TextParticles\");\n$RefreshReg$(_c5, \"AnimationCanvas\");\n$RefreshReg$(_c6, \"App\");","map":{"version":3,"names":["React","useRef","useMemo","useEffect","useState","Canvas","useFrame","useLoader","useThree","OrbitControls","Text","THREE","createNoise3D","circleImg","jsxDEV","_jsxDEV","noise3D","CameraControls","autoRotate","autoRotateSpeed","fileName","_jsxFileName","lineNumber","columnNumber","_c","ParticleWave","_s","pointsRef","imgTex","TextureLoader","count","radius","height","speed","spiralSpeed","flowIntensity","positions","i","theta","Math","random","PI","phi","acos","r","x","sin","cos","y","z","push","Float32Array","opacities","baseOpacity","edgeOpacity","opacity","abs","clock","time","getElapsedTime","positionsArray","current","array","opacitiesArray","attributes","i3","noise","angle","atan2","sqrt","newTheta","newPhi","newR","needsUpdate","frustumCulled","children","ref","attach","length","itemSize","map","color","size","sizeAttenuation","transparent","blending","AdditiveBlending","vertexColors","_c2","ParticleBand","yPosition","_s2","viewport","aspect","width","depth","_c3","TextParticles","_s3","dragging","setDragging","originalPositions","targetPositions","mousePosition","textMesh","geometry","BufferGeometry","material","MeshBasicMaterial","mesh","Mesh","textGeometry","TextGeometry","font","Font","center","particleCount","tempPositions","position","randomIndex","floor","slice","dx","dy","distance","handlePointerDown","event","updateMousePosition","handlePointerUp","handlePointerMove","clientX","window","innerWidth","clientY","innerHeight","onPointerDown","onPointerUp","onPointerMove","_c4","AnimationCanvas","_s4","canvasSize","setCanvasSize","handleResize","addEventListener","removeEventListener","camera","fov","style","args","intensity","_c5","App","className","_c6","$RefreshReg$"],"sources":["/Users/kasaikazunobu/project/ai/babel/ripple/3d-ripple-animation/src/App.js"],"sourcesContent":["// App.js\nimport React, { useRef, useMemo, useEffect, useState } from 'react';\nimport { Canvas, useFrame, useLoader, useThree } from '@react-three/fiber';\nimport { OrbitControls, Text } from '@react-three/drei';\nimport * as THREE from 'three';\nimport { createNoise3D } from 'simplex-noise';\nimport circleImg from './assets/circle.png';\nimport './App.css';\n\nconst noise3D = createNoise3D();\n\nfunction CameraControls() {\n  return <OrbitControls autoRotate autoRotateSpeed={-0.2} />;\n}\n\nfunction ParticleWave() {\n  const pointsRef = useRef();\n  const imgTex = useLoader(THREE.TextureLoader, circleImg);\n\n  const count = 100000;\n  const radius = 2;\n  const height = 7;\n  const speed = 0.8;\n  const spiralSpeed = 0.3;\n  const flowIntensity = 0.05;\n\n  const positions = useMemo(() => {\n    const positions = [];\n    for (let i = 0; i < count; i++) {\n      const theta = Math.random() * Math.PI * 2;\n      const phi = Math.acos(2 * Math.random() - 1);\n      const r = Math.random() * radius;\n      const x = r * Math.sin(phi) * Math.cos(theta);\n      const y = Math.random() * height - height / 2;\n      const z = r * Math.sin(phi) * Math.sin(theta);\n      positions.push(x, y, z);\n    }\n    return new Float32Array(positions);\n  }, [count, radius, height]);\n\n  const opacities = useMemo(() => {\n    const opacities = [];\n    for (let i = 0; i < count; i++) {\n      const y = positions[i * 3 + 1];\n      const baseOpacity = 0.3;\n      const edgeOpacity = 0.6;\n      const opacity = baseOpacity + (edgeOpacity - baseOpacity) * (1 - Math.abs(y / (height / 2)));\n      opacities.push(opacity, opacity, opacity);\n    }\n    return new Float32Array(opacities);\n  }, [positions, count, height]);\n\n  useFrame(({ clock }) => {\n    const time = clock.getElapsedTime();\n    const positionsArray = pointsRef.current.array;\n    const opacitiesArray = pointsRef.current.attributes.opacity.array;\n    for (let i = 0; i < count; i++) {\n      const i3 = i * 3;\n      let x = positionsArray[i3];\n      let y = positionsArray[i3 + 1];\n      let z = positionsArray[i3 + 2];\n\n      const noise = noise3D(x * 0.5, y * 0.5, z * 0.5 + time * 0.2) * flowIntensity;\n      const angle = Math.atan2(z, x) + spiralSpeed * 0.01 + noise;\n      const r = Math.sqrt(x * x + z * z);\n      \n      x = r * Math.cos(angle);\n      z = r * Math.sin(angle);\n      y += speed * 0.01 * (1 + noise);\n\n      if (y > height / 2) {\n        y = -height / 2;\n        const newTheta = Math.random() * Math.PI * 2;\n        const newPhi = Math.acos(2 * Math.random() - 1);\n        const newR = Math.random() * radius;\n        x = newR * Math.sin(newPhi) * Math.cos(newTheta);\n        z = newR * Math.sin(newPhi) * Math.sin(newTheta);\n      }\n\n      positionsArray[i3] = x;\n      positionsArray[i3 + 1] = y;\n      positionsArray[i3 + 2] = z;\n\n      const opacity = opacities[i3];\n      opacitiesArray[i3] = opacity;\n      opacitiesArray[i3 + 1] = opacity;\n      opacitiesArray[i3 + 2] = opacity;\n    }\n    pointsRef.current.needsUpdate = true;\n    pointsRef.current.attributes.opacity.needsUpdate = true;\n  });\n\n  return (\n    <points frustumCulled={false}>\n      <bufferGeometry>\n        <bufferAttribute\n          ref={pointsRef}\n          attach=\"attributes-position\"\n          array={positions}\n          count={positions.length / 3}\n          itemSize={3}\n        />\n        <bufferAttribute\n          attach=\"attributes-opacity\"\n          array={opacities}\n          count={opacities.length / 3}\n          itemSize={3}\n        />\n      </bufferGeometry>\n      <pointsMaterial\n        map={imgTex}\n        color={0x66ffff}\n        size={0.02}\n        sizeAttenuation\n        transparent={true}\n        opacity={0.3}\n        blending={THREE.AdditiveBlending}\n        vertexColors\n      />\n    </points>\n  );\n}\n\nfunction ParticleBand({ yPosition, count = 200000, height = 0.2, color = 0x66ffff, opacity = 0.2, size = 0.015 }) {\n  const pointsRef = useRef();\n  const imgTex = useLoader(THREE.TextureLoader, circleImg);\n  const { viewport } = useThree();\n\n  const positions = useMemo(() => {\n    const positions = [];\n    const aspect = viewport.width / viewport.height;\n    const width = viewport.width * 1.2;\n    const depth = width / aspect;\n    for (let i = 0; i < count; i++) {\n      const x = (Math.random() - 0.5) * width;\n      const y = yPosition + (Math.random() - 0.5) * height;\n      const z = (Math.random() - 0.5) * depth;\n      positions.push(x, y, z);\n    }\n    return new Float32Array(positions);\n  }, [count, height, yPosition, viewport.width, viewport.height]);\n\n  useFrame(({ clock }) => {\n    const time = clock.getElapsedTime();\n    const positionsArray = pointsRef.current.array;\n    const width = viewport.width * 1.2;\n    const aspect = viewport.width / viewport.height;\n    const depth = width / aspect;\n    for (let i = 0; i < count; i++) {\n      const i3 = i * 3;\n      let x = positionsArray[i3];\n      let y = positionsArray[i3 + 1];\n      let z = positionsArray[i3 + 2];\n\n      x += Math.sin(z * 0.3 + time * 0.2) * 0.01;\n      z += Math.cos(x * 0.3 + time * 0.2) * 0.01;\n      y += Math.sin(x * 0.3 + z * 0.3 + time * 0.1) * 0.002;\n\n      if (x < -width / 2) x += width;\n      if (x > width / 2) x -= width;\n      if (z < -depth / 2) z += depth;\n      if (z > depth / 2) z -= depth;\n\n      positionsArray[i3] = x;\n      positionsArray[i3 + 1] = y;\n      positionsArray[i3 + 2] = z;\n    }\n    pointsRef.current.needsUpdate = true;\n  });\n\n  return (\n    <points frustumCulled={false}>\n      <bufferGeometry>\n        <bufferAttribute\n          ref={pointsRef}\n          attach=\"attributes-position\"\n          array={positions}\n          count={positions.length / 3}\n          itemSize={3}\n        />\n      </bufferGeometry>\n      <pointsMaterial\n        map={imgTex}\n        color={color}\n        size={size}\n        sizeAttenuation\n        transparent={true}\n        opacity={opacity}\n        blending={THREE.AdditiveBlending}\n      />\n    </points>\n  );\n}\n\nfunction TextParticles() {\n  const [dragging, setDragging] = useState(false);\n  const pointsRef = useRef();\n  const originalPositions = useRef();\n  const targetPositions = useRef();\n  const mousePosition = useRef({ x: 0, y: 0 });\n  const { viewport } = useThree();\n\n  const textMesh = useMemo(() => {\n    const geometry = new THREE.BufferGeometry();\n    const material = new THREE.MeshBasicMaterial({ color: 0xffffff });\n    const mesh = new THREE.Mesh(geometry, material);\n    \n    const textGeometry = new THREE.TextGeometry('Babel & Zoltraak', {\n      font: new THREE.Font(), // フォントをロードする必要があります\n      size: 0.5,\n      height: 0.1,\n    });\n    \n    textGeometry.center();\n    mesh.geometry = textGeometry;\n    \n    return mesh;\n  }, []);\n\n  const particleCount = 5000;\n\n  const positions = useMemo(() => {\n    const positions = new Float32Array(particleCount * 3);\n    const tempPositions = textMesh.geometry.attributes.position.array;\n    \n    for (let i = 0; i < particleCount; i++) {\n      const i3 = i * 3;\n      const randomIndex = Math.floor(Math.random() * (tempPositions.length / 3)) * 3;\n      positions[i3] = tempPositions[randomIndex];\n      positions[i3 + 1] = tempPositions[randomIndex + 1];\n      positions[i3 + 2] = tempPositions[randomIndex + 2];\n    }\n    \n    originalPositions.current = positions.slice();\n    targetPositions.current = positions.slice();\n    return positions;\n  }, [textMesh, particleCount]);\n\n  useFrame(() => {\n    const positions = pointsRef.current.geometry.attributes.position.array;\n    \n    for (let i = 0; i < particleCount; i++) {\n      const i3 = i * 3;\n      \n      if (dragging) {\n        const dx = mousePosition.current.x - positions[i3];\n        const dy = mousePosition.current.y - positions[i3 + 1];\n        const distance = Math.sqrt(dx * dx + dy * dy);\n        \n        if (distance < 0.1) {\n          positions[i3] += (Math.random() - 0.5) * 0.01;\n          positions[i3 + 1] += (Math.random() - 0.5) * 0.01;\n          positions[i3 + 2] += (Math.random() - 0.5) * 0.01;\n        }\n      } else {\n        positions[i3] += (targetPositions.current[i3] - positions[i3]) * 0.1;\n        positions[i3 + 1] += (targetPositions.current[i3 + 1] - positions[i3 + 1]) * 0.1;\n        positions[i3 + 2] += (targetPositions.current[i3 + 2] - positions[i3 + 2]) * 0.1;\n      }\n    }\n    \n    pointsRef.current.geometry.attributes.position.needsUpdate = true;\n  });\n\n  const handlePointerDown = (event) => {\n    setDragging(true);\n    updateMousePosition(event);\n  };\n\n  const handlePointerUp = () => {\n    setDragging(false);\n    targetPositions.current = originalPositions.current.slice();\n  };\n\n  const handlePointerMove = (event) => {\n    if (dragging) {\n      updateMousePosition(event);\n    }\n  };\n\n  const updateMousePosition = (event) => {\n    mousePosition.current.x = (event.clientX / window.innerWidth) * 2 - 1;\n    mousePosition.current.y = -(event.clientY / window.innerHeight) * 2 + 1;\n  };\n\n  return (\n    <points\n      ref={pointsRef}\n      onPointerDown={handlePointerDown}\n      onPointerUp={handlePointerUp}\n      onPointerMove={handlePointerMove}\n    >\n      <bufferGeometry>\n        <bufferAttribute\n          attach=\"attributes-position\"\n          count={positions.length / 3}\n          array={positions}\n          itemSize={3}\n        />\n      </bufferGeometry>\n      <pointsMaterial\n        color={0xffffff}\n        size={0.02}\n        sizeAttenuation\n        transparent\n        opacity={0.8}\n        blending={THREE.AdditiveBlending}\n      />\n    </points>\n  );\n}\n\nfunction AnimationCanvas() {\n  const [canvasSize, setCanvasSize] = useState({ width: window.innerWidth, height: window.innerHeight });\n\n  useEffect(() => {\n    const handleResize = () => {\n      setCanvasSize({ width: window.innerWidth, height: window.innerHeight });\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return (\n    <Canvas camera={{ position: [0, 0, 9], fov: 75 }} style={{ width: canvasSize.width, height: canvasSize.height }}>\n      <color attach=\"background\" args={['#000']} />\n      <ambientLight intensity={0.5} />\n      <pointLight position={[10, 10, 10]} />\n      <CameraControls />\n      <ParticleWave />\n      <ParticleBand yPosition={4.5} color={0x66ffff} count={200000} />\n      <ParticleBand \n        yPosition={-4.5} \n        color={0x66ffff} \n        count={250000}\n        opacity={0.3}\n        size={0.018}\n      />\n      <TextParticles />\n    </Canvas>\n  );\n}\n\nfunction App() {\n  return (\n    <div className=\"anim\">\n      <AnimationCanvas />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}