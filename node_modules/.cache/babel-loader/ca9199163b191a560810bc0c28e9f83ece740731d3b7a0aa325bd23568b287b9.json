{"ast":null,"code":"import { jsx } from \"react/jsx-runtime\";\nimport { createContext, useState, useMemo, useRef, useContext, useEffect } from \"react\";\nconst selectionContext = createContext(null);\nfunction Selection({\n  children,\n  enabled = true\n}) {\n  const [selected, select] = useState([]);\n  const value = useMemo(() => ({\n    selected,\n    select,\n    enabled\n  }), [selected, select, enabled]);\n  return /* @__PURE__ */jsx(selectionContext.Provider, {\n    value,\n    children\n  });\n}\nfunction Select({\n  enabled = false,\n  children,\n  ...props\n}) {\n  const group = useRef(null);\n  const api = useContext(selectionContext);\n  useEffect(() => {\n    if (api && enabled) {\n      let changed = false;\n      const current = [];\n      group.current.traverse(o => {\n        o.type === \"Mesh\" && current.push(o);\n        if (api.selected.indexOf(o) === -1) changed = true;\n      });\n      if (changed) {\n        api.select(state => [...state, ...current]);\n        return () => {\n          api.select(state => state.filter(selected => !current.includes(selected)));\n        };\n      }\n    }\n  }, [enabled, children, api]);\n  return /* @__PURE__ */jsx(\"group\", {\n    ref: group,\n    ...props,\n    children\n  });\n}\nexport { Select, Selection, selectionContext };","map":{"version":3,"names":["selectionContext","createContext","Selection","children","enabled","selected","select","useState","value","useMemo","jsx","Provider","Select","props","group","useRef","api","useContext","useEffect","changed","current","traverse","o","type","push","indexOf","state","filter","includes","ref"],"sources":["/Users/kasaikazunobu/project/babel/babel-project/node_modules/@react-three/postprocessing/src/Selection.tsx"],"sourcesContent":["import * as THREE from 'three'\nimport React, { createContext, useState, useContext, useEffect, useRef, useMemo } from 'react'\n\nexport type Api = {\n  selected: THREE.Object3D[]\n  select: React.Dispatch<React.SetStateAction<THREE.Object3D[]>>\n  enabled: boolean\n}\nexport type SelectApi = JSX.IntrinsicElements['group'] & {\n  enabled?: boolean\n}\n\nexport const selectionContext = createContext<Api | null>(null)\n\nexport function Selection({ children, enabled = true }: { enabled?: boolean; children: React.ReactNode }) {\n  const [selected, select] = useState<THREE.Object3D[]>([])\n  const value = useMemo(() => ({ selected, select, enabled }), [selected, select, enabled])\n  return <selectionContext.Provider value={value}>{children}</selectionContext.Provider>\n}\n\nexport function Select({ enabled = false, children, ...props }: SelectApi) {\n  const group = useRef<THREE.Group>(null!)\n  const api = useContext(selectionContext)\n  useEffect(() => {\n    if (api && enabled) {\n      let changed = false\n      const current: THREE.Object3D<THREE.Event>[] = []\n      group.current.traverse((o) => {\n        o.type === 'Mesh' && current.push(o)\n        if (api.selected.indexOf(o) === -1) changed = true\n      })\n      if (changed) {\n        api.select((state) => [...state, ...current])\n        return () => {\n          api.select((state) => state.filter((selected) => !current.includes(selected)))\n        }\n      }\n    }\n  }, [enabled, children, api])\n  return (\n    <group ref={group} {...props}>\n      {children}\n    </group>\n  )\n}\n"],"mappings":";;AAYa,MAAAA,gBAAA,GAAmBC,aAAA,CAA0B,IAAI;AAEvD,SAASC,UAAU;EAAEC,QAAA;EAAUC,OAAA,GAAU;AAAA,GAA0D;EACxG,MAAM,CAACC,QAAA,EAAUC,MAAM,IAAIC,QAAA,CAA2B,EAAE;EACxD,MAAMC,KAAA,GAAQC,OAAA,CAAQ,OAAO;IAAEJ,QAAA;IAAUC,MAAA;IAAQF;EAAQ,IAAI,CAACC,QAAA,EAAUC,MAAA,EAAQF,OAAO,CAAC;EACxF,OAAQ,eAAAM,GAAA,CAAAV,gBAAA,CAAiBW,QAAA,EAAjB;IAA0BH,KAAA;IAAeL;EAAS;AAC5D;AAEO,SAASS,OAAO;EAAER,OAAA,GAAU;EAAOD,QAAA;EAAU,GAAGU;AAAA,GAAoB;EACnE,MAAAC,KAAA,GAAQC,MAAA,CAAoB,IAAK;EACjC,MAAAC,GAAA,GAAMC,UAAA,CAAWjB,gBAAgB;EACvCkB,SAAA,CAAU,MAAM;IACd,IAAIF,GAAA,IAAOZ,OAAA,EAAS;MAClB,IAAIe,OAAA,GAAU;MACd,MAAMC,OAAA,GAAyC;MACzCN,KAAA,CAAAM,OAAA,CAAQC,QAAA,CAAUC,CAAA,IAAM;QAC5BA,CAAA,CAAEC,IAAA,KAAS,UAAUH,OAAA,CAAQI,IAAA,CAAKF,CAAC;QACnC,IAAIN,GAAA,CAAIX,QAAA,CAASoB,OAAA,CAAQH,CAAC,MAAM,IAAcH,OAAA;MAAA,CAC/C;MACD,IAAIA,OAAA,EAAS;QACPH,GAAA,CAAAV,MAAA,CAAQoB,KAAA,IAAU,CAAC,GAAGA,KAAA,EAAO,GAAGN,OAAO,CAAC;QAC5C,OAAO,MAAM;UACXJ,GAAA,CAAIV,MAAA,CAAQoB,KAAA,IAAUA,KAAA,CAAMC,MAAA,CAAQtB,QAAA,IAAa,CAACe,OAAA,CAAQQ,QAAA,CAASvB,QAAQ,CAAC,CAAC;QAAA;MAEjF;IACF;EACC,IAACD,OAAA,EAASD,QAAA,EAAUa,GAAG,CAAC;EAC3B,sBAAAN,GAAA,CACG,SAAM;IAAAmB,GAAA,EAAKf,KAAA;IAAQ,GAAGD,KAAA;IACpBV;EACH;AAEJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}