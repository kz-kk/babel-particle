{"ast":null,"code":"var _jsxFileName = \"/Users/kasaikazunobu/project/ai/babel/babel-project/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$();\n// App.js\nimport React, { useRef, useMemo, useEffect, useState } from 'react';\nimport { Canvas, useFrame, useLoader, useThree } from '@react-three/fiber';\nimport { OrbitControls } from '@react-three/drei';\nimport * as THREE from 'three';\nimport { createNoise3D } from 'simplex-noise';\nimport ParticleText from './components/ParticleText';\nimport circleImg from './assets/circle.png';\nimport './App.css';\n\n// ... 残りのコード ...\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CameraControls({\n  position,\n  up\n}) {\n  _s();\n  const {\n    camera\n  } = useThree();\n  useEffect(() => {\n    camera.position.set(...position);\n    camera.up.set(...up);\n    camera.updateProjectionMatrix();\n  }, [camera, position, up]);\n  return /*#__PURE__*/_jsxDEV(OrbitControls, {\n    enableRotate: false,\n    enableZoom: false,\n    enablePan: false\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n}\n_s(CameraControls, \"Wo14/kl28HhoRfDX+Cg7MK2EhFU=\", false, function () {\n  return [useThree];\n});\n_c = CameraControls;\nfunction ParticleWave() {\n  _s2();\n  const pointsRef = useRef();\n  const imgTex = useLoader(THREE.TextureLoader, circleImg);\n\n  // Define noise3D within the ParticleWave component\n  const noise3D = useMemo(() => createNoise3D(), []);\n  const count = 80000;\n  const radius = 5;\n  const height = 10;\n  const speed = 0.8; // 速度を上げて、粒子がより早く集約するようにする\n  const spiralSpeed = 0.3; // スパイラル速度も上げる\n  const flowIntensity = 0.05; // フロー強度を少し強める\n\n  const positions = useMemo(() => {\n    const positions = [];\n    for (let i = 0; i < count; i++) {\n      const theta = Math.random() * Math.PI * 2;\n      const phi = Math.acos(2 * Math.random() - 1);\n      const r = Math.pow(Math.random(), 0.3) * radius; // 0.5から0.3に変更してより中心に集中させる\n      const x = r * Math.sin(phi) * Math.cos(theta);\n      const y = (Math.random() * 2 - 1) * height * 0.5; // 高さ範囲を半分に縮小\n      const z = r * Math.sin(phi) * Math.sin(theta);\n      positions.push(x, y, z);\n    }\n    return new Float32Array(positions);\n  }, [count, radius, height]);\n  useFrame(({\n    clock\n  }) => {\n    const time = clock.getElapsedTime();\n    const positionsArray = pointsRef.current.array;\n    for (let i = 0; i < count; i++) {\n      const i3 = i * 3;\n      let x = positionsArray[i3];\n      let y = positionsArray[i3 + 1];\n      let z = positionsArray[i3 + 2];\n      const noise = noise3D(x * 0.5, y * 0.5, z * 0.5 + time * 0.2) * flowIntensity;\n      const angle = Math.atan2(z, x) + spiralSpeed * 0.02 + noise; // スパイラル速度を上げる\n      const r = Math.sqrt(x * x + z * z);\n      x = r * Math.cos(angle);\n      z = r * Math.sin(angle);\n      y += speed * 0.02 * (1 + noise); // 上昇速度を上げる\n\n      if (y > height / 2) {\n        // 上限に達したら下に戻す\n        y = -height / 2;\n        const newTheta = Math.random() * Math.PI * 2;\n        const newPhi = Math.acos(2 * Math.random() - 1);\n        const newR = Math.random() * radius;\n        x = newR * Math.sin(newPhi) * Math.cos(newTheta);\n        z = newR * Math.sin(newPhi) * Math.sin(newTheta);\n      }\n      positionsArray[i3] = x;\n      positionsArray[i3 + 1] = y;\n      positionsArray[i3 + 2] = z;\n    }\n    pointsRef.current.needsUpdate = true;\n  });\n  return /*#__PURE__*/_jsxDEV(\"points\", {\n    frustumCulled: false,\n    children: [/*#__PURE__*/_jsxDEV(\"bufferGeometry\", {\n      children: /*#__PURE__*/_jsxDEV(\"bufferAttribute\", {\n        ref: pointsRef,\n        attach: \"attributes-position\",\n        array: positions,\n        count: positions.length / 3,\n        itemSize: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointsMaterial\", {\n      map: imgTex,\n      color: 0x66ffff,\n      size: 0.015 // サイズを0.02から0.01に減少\n      ,\n      sizeAttenuation: true,\n      transparent: true,\n      opacity: 0.3,\n      blending: THREE.AdditiveBlending\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s2(ParticleWave, \"eVijncbd3mSJs94jF70ZKAX9Z/E=\", false, function () {\n  return [useLoader, useFrame];\n});\n_c2 = ParticleWave;\nfunction ParticleBand({\n  yPosition,\n  count = 100000,\n  height = 0.4,\n  color = 0x66ffff\n}) {\n  _s3();\n  // heightを0.4に増加\n  const pointsRef = useRef();\n  const imgTex = useLoader(THREE.TextureLoader, circleImg);\n  const {\n    viewport\n  } = useThree();\n  const noise3D = useMemo(() => createNoise3D(), []);\n  const positions = useMemo(() => {\n    const positions = [];\n    const aspect = viewport.width / viewport.height;\n    const width = viewport.width * 1.2; // 幅を1.2倍に調整して密度を増加\n    const depth = width / aspect;\n    for (let i = 0; i < count; i++) {\n      const x = (Math.random() - 0.5) * width;\n      const y = yPosition + (Math.random() - 0.5) * height * 2; // 高さの範囲をさらに拡大\n      const z = (Math.random() - 0.5) * depth;\n      positions.push(x, y, z);\n    }\n    return new Float32Array(positions);\n  }, [count, height, yPosition, viewport.width, viewport.height]);\n  useFrame(({\n    clock\n  }) => {\n    const time = clock.getElapsedTime();\n    const positionsArray = pointsRef.current.array;\n    const width = viewport.width * 1.5;\n    const aspect = viewport.width / viewport.height;\n    const depth = width / aspect;\n    for (let i = 0; i < count; i++) {\n      const i3 = i * 3;\n      let x = positionsArray[i3];\n      let y = positionsArray[i3 + 1];\n      let z = positionsArray[i3 + 2];\n\n      // ノイズを使用してより複雑な動きを生成\n      const noiseX = noise3D(x * 0.1, y * 0.1, time * 0.1) * 0.02;\n      const noiseY = noise3D(y * 0.1, z * 0.1, time * 0.1) * 0.02;\n      const noiseZ = noise3D(z * 0.1, x * 0.1, time * 0.1) * 0.02;\n      x += noiseX;\n      y += noiseY + Math.sin(x * 0.3 + time * 0.2) * 0.005; // 上下の動きを追加\n      z += noiseZ;\n\n      // 範囲外に出た粒子をリセット\n      if (x < -width / 2 || x > width / 2 || y < yPosition - height || y > yPosition + height || z < -depth / 2 || z > depth / 2) {\n        x = (Math.random() - 0.5) * width;\n        y = yPosition + (Math.random() - 0.5) * height * 2;\n        z = (Math.random() - 0.5) * depth;\n      }\n      positionsArray[i3] = x;\n      positionsArray[i3 + 1] = y;\n      positionsArray[i3 + 2] = z;\n    }\n    pointsRef.current.needsUpdate = true;\n  });\n  return /*#__PURE__*/_jsxDEV(\"points\", {\n    frustumCulled: false,\n    children: [/*#__PURE__*/_jsxDEV(\"bufferGeometry\", {\n      children: /*#__PURE__*/_jsxDEV(\"bufferAttribute\", {\n        ref: pointsRef,\n        attach: \"attributes-position\",\n        array: positions,\n        count: positions.length / 3,\n        itemSize: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointsMaterial\", {\n      map: imgTex,\n      color: color,\n      size: 0.015,\n      sizeAttenuation: true,\n      transparent: true,\n      opacity: 0.5 // 不透明度を上げて、より濃く見せる\n      ,\n      blending: THREE.AdditiveBlending\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n}\n_s3(ParticleBand, \"DR82PxGpIHJgRQvCaN4D7HGMsf8=\", false, function () {\n  return [useLoader, useThree, useFrame];\n});\n_c3 = ParticleBand;\nfunction MagicCircle() {\n  _s4();\n  const pointsRef = useRef();\n  const imgTex = useLoader(THREE.TextureLoader, circleImg);\n  const noise3D = useMemo(() => createNoise3D(), []);\n  const count = 100000; // 粒子数を増やす\n  const radius = 3;\n  const innerRadius = 1.5; // 内側の円の半径\n\n  const positions = useMemo(() => {\n    const positions = [];\n    for (let i = 0; i < count; i++) {\n      const angle = Math.random() * Math.PI * 2;\n      const r = Math.sqrt(Math.random()) * (radius - innerRadius) + innerRadius;\n      const x = r * Math.cos(angle);\n      const z = r * Math.sin(angle);\n      const y = (Math.random() - 0.5) * 0.05; // より平面に近づける\n      positions.push(x, y, z);\n    }\n    return new Float32Array(positions);\n  }, [count, radius, innerRadius]);\n  useFrame(({\n    clock\n  }) => {\n    const time = clock.getElapsedTime();\n    const positionsArray = pointsRef.current.array;\n    for (let i = 0; i < count; i++) {\n      const i3 = i * 3;\n      let x = positionsArray[i3];\n      let y = positionsArray[i3 + 1];\n      let z = positionsArray[i3 + 2];\n      const r = Math.sqrt(x * x + z * z);\n      const angle = Math.atan2(z, x);\n\n      // 回転速度を半径に応じて変える\n      const rotationSpeed = 0.2 * (1 - (r - innerRadius) / (radius - innerRadius));\n      const newAngle = angle + rotationSpeed * 0.02;\n\n      // ノイズを使って微妙な揺らぎを加える\n      const noise = noise3D(x * 0.5, y * 0.5, z * 0.5 + time * 0.2) * 0.01;\n      x = r * Math.cos(newAngle) + noise;\n      z = r * Math.sin(newAngle) + noise;\n      y += Math.sin(time * 2 + r * 2) * 0.001; // 上下の動きを小さくする\n\n      positionsArray[i3] = x;\n      positionsArray[i3 + 1] = y;\n      positionsArray[i3 + 2] = z;\n    }\n    pointsRef.current.needsUpdate = true;\n  });\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    children: [/*#__PURE__*/_jsxDEV(\"points\", {\n      frustumCulled: false,\n      children: [/*#__PURE__*/_jsxDEV(\"bufferGeometry\", {\n        children: /*#__PURE__*/_jsxDEV(\"bufferAttribute\", {\n          ref: pointsRef,\n          attach: \"attributes-position\",\n          array: positions,\n          count: positions.length / 3,\n          itemSize: 3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pointsMaterial\", {\n        map: imgTex,\n        color: 0x00ffff // 青い蛍光色\n        ,\n        size: 0.015,\n        sizeAttenuation: true,\n        transparent: true,\n        opacity: 0.8,\n        blending: THREE.AdditiveBlending\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MagicCircleDecorations, {\n      radius: radius,\n      innerRadius: innerRadius\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 5\n  }, this);\n}\n\n// 魔法陣の装飾的な要素を追加するコンポーネント\n_s4(MagicCircle, \"eVijncbd3mSJs94jF70ZKAX9Z/E=\", false, function () {\n  return [useLoader, useFrame];\n});\n_c4 = MagicCircle;\nfunction MagicCircleDecorations({\n  radius,\n  innerRadius\n}) {\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    children: [/*#__PURE__*/_jsxDEV(\"line\", {\n      children: [/*#__PURE__*/_jsxDEV(\"bufferGeometry\", {\n        children: /*#__PURE__*/_jsxDEV(\"bufferAttribute\", {\n          attach: \"attributes-position\",\n          count: 64,\n          array: new Float32Array(64 * 3),\n          itemSize: 3,\n          usage: THREE.DynamicDrawUsage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"lineBasicMaterial\", {\n        color: 0x00ffff,\n        linewidth: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n      children: [/*#__PURE__*/_jsxDEV(\"bufferGeometry\", {\n        children: /*#__PURE__*/_jsxDEV(\"bufferAttribute\", {\n          attach: \"attributes-position\",\n          count: 64,\n          array: new Float32Array(64 * 3),\n          itemSize: 3,\n          usage: THREE.DynamicDrawUsage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"lineBasicMaterial\", {\n        color: 0x00ffff,\n        linewidth: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this), [0, 60, 120, 180, 240, 300].map((angle, index) => /*#__PURE__*/_jsxDEV(\"line\", {\n      children: [/*#__PURE__*/_jsxDEV(\"bufferGeometry\", {\n        children: /*#__PURE__*/_jsxDEV(\"bufferAttribute\", {\n          attach: \"attributes-position\",\n          count: 2,\n          array: new Float32Array([Math.cos(angle * Math.PI / 180) * innerRadius, 0, Math.sin(angle * Math.PI / 180) * innerRadius, Math.cos(angle * Math.PI / 180) * radius, 0, Math.sin(angle * Math.PI / 180) * radius]),\n          itemSize: 3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"lineBasicMaterial\", {\n        color: 0x00ffff,\n        linewidth: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 275,\n    columnNumber: 5\n  }, this);\n}\n_c5 = MagicCircleDecorations;\nfunction AnimationCanvas() {\n  _s5();\n  const [canvasSize, setCanvasSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n  const [showLogo, setShowLogo] = useState(false);\n  const [showButtons, setShowButtons] = useState(false);\n  const [showMagicCircle, setShowMagicCircle] = useState(false);\n  const [cameraPosition, setCameraPosition] = useState([0, 0, 7]);\n  const [cameraUp, setCameraUp] = useState([0, 1, 0]);\n  useEffect(() => {\n    const handleResize = () => {\n      setCanvasSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    };\n    window.addEventListener('resize', handleResize);\n    const logoTimer = setTimeout(() => setShowLogo(true), 1000);\n    const buttonTimer = setTimeout(() => setShowButtons(true), 3000);\n    const magicCircleTimer = setTimeout(() => {\n      setShowMagicCircle(true);\n      setCameraPosition([0, 5, 0]);\n      setCameraUp([0, 0, -1]);\n    }, 3000);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      clearTimeout(logoTimer);\n      clearTimeout(buttonTimer);\n      clearTimeout(magicCircleTimer);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Canvas, {\n      camera: {\n        fov: 75\n      },\n      style: {\n        width: canvasSize.width,\n        height: canvasSize.height\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"color\", {\n        attach: \"background\",\n        args: ['#000']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ambientLight\", {\n        intensity: 0.5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n        position: [10, 10, 10]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CameraControls, {\n        position: cameraPosition,\n        up: cameraUp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this), !showMagicCircle && /*#__PURE__*/_jsxDEV(ParticleWave, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 30\n      }, this), showMagicCircle && /*#__PURE__*/_jsxDEV(MagicCircle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(ParticleBand, {\n        yPosition: 4.5,\n        color: 0x66ffff,\n        count: 50000,\n        height: 0.4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ParticleBand, {\n        yPosition: -4.5,\n        color: 0x66ffff,\n        count: 50000,\n        height: 0.4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: `logo ${showLogo ? 'visible' : ''}`,\n        children: \"Babel & Zoltraak\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: `leed ${showLogo ? 'visible' : ''}`,\n        children: \"\\u8A00\\u8A9E\\u3092\\u8D85\\u3048\\u3001\\u6587\\u5316\\u3092\\u7E4B\\u3050 \\u65B0\\u305F\\u306A\\u4E16\\u754C\\u306E\\u5275\\u9020\\u3078\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `button-container ${showButtons ? 'visible' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-button\",\n          children: \"Babel Editor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-button\",\n          children: \"System List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s5(AnimationCanvas, \"IHLqJlUjJHOWVRwN7jCRvWCg7n4=\");\n_c6 = AnimationCanvas;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"anim\",\n    children: /*#__PURE__*/_jsxDEV(AnimationCanvas, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 389,\n    columnNumber: 5\n  }, this);\n}\n_c7 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"CameraControls\");\n$RefreshReg$(_c2, \"ParticleWave\");\n$RefreshReg$(_c3, \"ParticleBand\");\n$RefreshReg$(_c4, \"MagicCircle\");\n$RefreshReg$(_c5, \"MagicCircleDecorations\");\n$RefreshReg$(_c6, \"AnimationCanvas\");\n$RefreshReg$(_c7, \"App\");","map":{"version":3,"names":["React","useRef","useMemo","useEffect","useState","Canvas","useFrame","useLoader","useThree","OrbitControls","THREE","createNoise3D","ParticleText","circleImg","jsxDEV","_jsxDEV","Fragment","_Fragment","CameraControls","position","up","_s","camera","set","updateProjectionMatrix","enableRotate","enableZoom","enablePan","fileName","_jsxFileName","lineNumber","columnNumber","_c","ParticleWave","_s2","pointsRef","imgTex","TextureLoader","noise3D","count","radius","height","speed","spiralSpeed","flowIntensity","positions","i","theta","Math","random","PI","phi","acos","r","pow","x","sin","cos","y","z","push","Float32Array","clock","time","getElapsedTime","positionsArray","current","array","i3","noise","angle","atan2","sqrt","newTheta","newPhi","newR","needsUpdate","frustumCulled","children","ref","attach","length","itemSize","map","color","size","sizeAttenuation","transparent","opacity","blending","AdditiveBlending","_c2","ParticleBand","yPosition","_s3","viewport","aspect","width","depth","noiseX","noiseY","noiseZ","_c3","MagicCircle","_s4","innerRadius","rotationSpeed","newAngle","MagicCircleDecorations","_c4","usage","DynamicDrawUsage","linewidth","index","_c5","AnimationCanvas","_s5","canvasSize","setCanvasSize","window","innerWidth","innerHeight","showLogo","setShowLogo","showButtons","setShowButtons","showMagicCircle","setShowMagicCircle","cameraPosition","setCameraPosition","cameraUp","setCameraUp","handleResize","addEventListener","logoTimer","setTimeout","buttonTimer","magicCircleTimer","removeEventListener","clearTimeout","fov","style","args","intensity","className","_c6","App","_c7","$RefreshReg$"],"sources":["/Users/kasaikazunobu/project/ai/babel/babel-project/src/App.js"],"sourcesContent":["// App.js\nimport React, { useRef, useMemo, useEffect, useState } from 'react';\nimport { Canvas, useFrame, useLoader, useThree } from '@react-three/fiber';\nimport { OrbitControls } from '@react-three/drei';\nimport * as THREE from 'three';\nimport { createNoise3D } from 'simplex-noise';\nimport ParticleText from './components/ParticleText';\n\nimport circleImg from './assets/circle.png';\nimport './App.css';\n\n// ... 残りのコード ...\n\nfunction CameraControls({ position, up }) {\n  const { camera } = useThree();\n  \n  useEffect(() => {\n    camera.position.set(...position);\n    camera.up.set(...up);\n    camera.updateProjectionMatrix();\n  }, [camera, position, up]);\n\n  return <OrbitControls enableRotate={false} enableZoom={false} enablePan={false} />;\n}\n\nfunction ParticleWave() {\n  const pointsRef = useRef();\n  const imgTex = useLoader(THREE.TextureLoader, circleImg);\n  \n  // Define noise3D within the ParticleWave component\n  const noise3D = useMemo(() => createNoise3D(), []);\n\n  const count = 80000;\n  const radius = 5;\n  const height = 10;\n  const speed = 0.8; // 速度を上げて、粒子がより早く集約するようにする\n  const spiralSpeed = 0.3; // スパイラル速度も上げる\n  const flowIntensity = 0.05; // フロー強度を少し強める\n\n  const positions = useMemo(() => {\n    const positions = [];\n    for (let i = 0; i < count; i++) {\n      const theta = Math.random() * Math.PI * 2;\n      const phi = Math.acos(2 * Math.random() - 1);\n      const r = Math.pow(Math.random(), 0.3) * radius; // 0.5から0.3に変更してより中心に集中させる\n      const x = r * Math.sin(phi) * Math.cos(theta);\n      const y = (Math.random() * 2 - 1) * height * 0.5; // 高さ範囲を半分に縮小\n      const z = r * Math.sin(phi) * Math.sin(theta);\n      positions.push(x, y, z);\n    }\n    return new Float32Array(positions);\n  }, [count, radius, height]);\n\n  useFrame(({ clock }) => {\n    const time = clock.getElapsedTime();\n    const positionsArray = pointsRef.current.array;\n    for (let i = 0; i < count; i++) {\n      const i3 = i * 3;\n      let x = positionsArray[i3];\n      let y = positionsArray[i3 + 1];\n      let z = positionsArray[i3 + 2];\n\n      const noise = noise3D(x * 0.5, y * 0.5, z * 0.5 + time * 0.2) * flowIntensity;\n      const angle = Math.atan2(z, x) + spiralSpeed * 0.02 + noise; // スパイラル速度を上げる\n      const r = Math.sqrt(x * x + z * z);\n      \n      x = r * Math.cos(angle);\n      z = r * Math.sin(angle);\n      y += speed * 0.02 * (1 + noise); // 上昇速度を上げる\n\n      if (y > height / 2) { // 上限に達したら下に戻す\n        y = -height / 2;\n        const newTheta = Math.random() * Math.PI * 2;\n        const newPhi = Math.acos(2 * Math.random() - 1);\n        const newR = Math.random() * radius;\n        x = newR * Math.sin(newPhi) * Math.cos(newTheta);\n        z = newR * Math.sin(newPhi) * Math.sin(newTheta);\n      }\n\n      positionsArray[i3] = x;\n      positionsArray[i3 + 1] = y;\n      positionsArray[i3 + 2] = z;\n    }\n    pointsRef.current.needsUpdate = true;\n  });\n\n  return (\n    <points frustumCulled={false}>\n      <bufferGeometry>\n        <bufferAttribute\n          ref={pointsRef}\n          attach=\"attributes-position\"\n          array={positions}\n          count={positions.length / 3}\n          itemSize={3}\n        />\n      </bufferGeometry>\n      <pointsMaterial\n        map={imgTex}\n        color={0x66ffff}\n        size={0.015} // サイズを0.02から0.01に減少\n        sizeAttenuation\n        transparent={true}\n        opacity={0.3}\n        blending={THREE.AdditiveBlending}\n      />\n    </points>\n  );\n}\n\nfunction ParticleBand({ yPosition, count = 100000, height = 0.4, color = 0x66ffff }) { // heightを0.4に増加\n  const pointsRef = useRef();\n  const imgTex = useLoader(THREE.TextureLoader, circleImg);\n  const { viewport } = useThree();\n  const noise3D = useMemo(() => createNoise3D(), []);\n\n  const positions = useMemo(() => {\n    const positions = [];\n    const aspect = viewport.width / viewport.height;\n    const width = viewport.width * 1.2; // 幅を1.2倍に調整して密度を増加\n    const depth = width / aspect;\n    for (let i = 0; i < count; i++) {\n      const x = (Math.random() - 0.5) * width;\n      const y = yPosition + (Math.random() - 0.5) * height * 2; // 高さの範囲をさらに拡大\n      const z = (Math.random() - 0.5) * depth;\n      positions.push(x, y, z);\n    }\n    return new Float32Array(positions);\n  }, [count, height, yPosition, viewport.width, viewport.height]);\n\n  useFrame(({ clock }) => {\n    const time = clock.getElapsedTime();\n    const positionsArray = pointsRef.current.array;\n    const width = viewport.width * 1.5;\n    const aspect = viewport.width / viewport.height;\n    const depth = width / aspect;\n    for (let i = 0; i < count; i++) {\n      const i3 = i * 3;\n      let x = positionsArray[i3];\n      let y = positionsArray[i3 + 1];\n      let z = positionsArray[i3 + 2];\n\n      // ノイズを使用してより複雑な動きを生成\n      const noiseX = noise3D(x * 0.1, y * 0.1, time * 0.1) * 0.02;\n      const noiseY = noise3D(y * 0.1, z * 0.1, time * 0.1) * 0.02;\n      const noiseZ = noise3D(z * 0.1, x * 0.1, time * 0.1) * 0.02;\n\n      x += noiseX;\n      y += noiseY + Math.sin(x * 0.3 + time * 0.2) * 0.005; // 上下の動きを追加\n      z += noiseZ;\n\n      // 範囲外に出た粒子をリセット\n      if (x < -width / 2 || x > width / 2 || \n          y < yPosition - height || y > yPosition + height || \n          z < -depth / 2 || z > depth / 2) {\n        x = (Math.random() - 0.5) * width;\n        y = yPosition + (Math.random() - 0.5) * height * 2;\n        z = (Math.random() - 0.5) * depth;\n      }\n\n      positionsArray[i3] = x;\n      positionsArray[i3 + 1] = y;\n      positionsArray[i3 + 2] = z;\n    }\n    pointsRef.current.needsUpdate = true;\n  });\n\n  return (\n    <points frustumCulled={false}>\n      <bufferGeometry>\n        <bufferAttribute\n          ref={pointsRef}\n          attach=\"attributes-position\"\n          array={positions}\n          count={positions.length / 3}\n          itemSize={3}\n        />\n      </bufferGeometry>\n      <pointsMaterial\n        map={imgTex}\n        color={color}\n        size={0.015}\n        sizeAttenuation\n        transparent={true}\n        opacity={0.5} // 不透明度を上げて、より濃く見せる\n        blending={THREE.AdditiveBlending}\n      />\n    </points>\n  );\n}\n\nfunction MagicCircle() {\n  const pointsRef = useRef();\n  const imgTex = useLoader(THREE.TextureLoader, circleImg);\n  const noise3D = useMemo(() => createNoise3D(), []);\n\n  const count = 100000; // 粒子数を増やす\n  const radius = 3;\n  const innerRadius = 1.5; // 内側の円の半径\n\n  const positions = useMemo(() => {\n    const positions = [];\n    for (let i = 0; i < count; i++) {\n      const angle = Math.random() * Math.PI * 2;\n      const r = Math.sqrt(Math.random()) * (radius - innerRadius) + innerRadius;\n      const x = r * Math.cos(angle);\n      const z = r * Math.sin(angle);\n      const y = (Math.random() - 0.5) * 0.05; // より平面に近づける\n      positions.push(x, y, z);\n    }\n    return new Float32Array(positions);\n  }, [count, radius, innerRadius]);\n\n  useFrame(({ clock }) => {\n    const time = clock.getElapsedTime();\n    const positionsArray = pointsRef.current.array;\n    for (let i = 0; i < count; i++) {\n      const i3 = i * 3;\n      let x = positionsArray[i3];\n      let y = positionsArray[i3 + 1];\n      let z = positionsArray[i3 + 2];\n\n      const r = Math.sqrt(x * x + z * z);\n      const angle = Math.atan2(z, x);\n      \n      // 回転速度を半径に応じて変える\n      const rotationSpeed = 0.2 * (1 - (r - innerRadius) / (radius - innerRadius));\n      const newAngle = angle + rotationSpeed * 0.02;\n\n      // ノイズを使って微妙な揺らぎを加える\n      const noise = noise3D(x * 0.5, y * 0.5, z * 0.5 + time * 0.2) * 0.01;\n      \n      x = r * Math.cos(newAngle) + noise;\n      z = r * Math.sin(newAngle) + noise;\n      y += Math.sin(time * 2 + r * 2) * 0.001; // 上下の動きを小さくする\n\n      positionsArray[i3] = x;\n      positionsArray[i3 + 1] = y;\n      positionsArray[i3 + 2] = z;\n    }\n    pointsRef.current.needsUpdate = true;\n  });\n\n  return (\n    <group>\n      <points frustumCulled={false}>\n        <bufferGeometry>\n          <bufferAttribute\n            ref={pointsRef}\n            attach=\"attributes-position\"\n            array={positions}\n            count={positions.length / 3}\n            itemSize={3}\n          />\n        </bufferGeometry>\n        <pointsMaterial\n          map={imgTex}\n          color={0x00ffff} // 青い蛍光色\n          size={0.015}\n          sizeAttenuation\n          transparent={true}\n          opacity={0.8}\n          blending={THREE.AdditiveBlending}\n        />\n      </points>\n      {/* 魔法陣の装飾的な要素を追加 */}\n      <MagicCircleDecorations radius={radius} innerRadius={innerRadius} />\n    </group>\n  );\n}\n\n// 魔法陣の装飾的な要素を追加するコンポーネント\nfunction MagicCircleDecorations({ radius, innerRadius }) {\n  return (\n    <group>\n      {/* 外側の円 */}\n      <line>\n        <bufferGeometry>\n          <bufferAttribute\n            attach=\"attributes-position\"\n            count={64}\n            array={new Float32Array(64 * 3)}\n            itemSize={3}\n            usage={THREE.DynamicDrawUsage}\n          />\n        </bufferGeometry>\n        <lineBasicMaterial color={0x00ffff} linewidth={1} />\n      </line>\n      {/* 内側の円 */}\n      <line>\n        <bufferGeometry>\n          <bufferAttribute\n            attach=\"attributes-position\"\n            count={64}\n            array={new Float32Array(64 * 3)}\n            itemSize={3}\n            usage={THREE.DynamicDrawUsage}\n          />\n        </bufferGeometry>\n        <lineBasicMaterial color={0x00ffff} linewidth={1} />\n      </line>\n      {/* 装飾的な線 */}\n      {[0, 60, 120, 180, 240, 300].map((angle, index) => (\n        <line key={index}>\n          <bufferGeometry>\n            <bufferAttribute\n              attach=\"attributes-position\"\n              count={2}\n              array={new Float32Array([\n                Math.cos(angle * Math.PI / 180) * innerRadius,\n                0,\n                Math.sin(angle * Math.PI / 180) * innerRadius,\n                Math.cos(angle * Math.PI / 180) * radius,\n                0,\n                Math.sin(angle * Math.PI / 180) * radius,\n              ])}\n              itemSize={3}\n            />\n          </bufferGeometry>\n          <lineBasicMaterial color={0x00ffff} linewidth={1} />\n        </line>\n      ))}\n    </group>\n  );\n}\n\nfunction AnimationCanvas() {\n  const [canvasSize, setCanvasSize] = useState({ width: window.innerWidth, height: window.innerHeight });\n  const [showLogo, setShowLogo] = useState(false);\n  const [showButtons, setShowButtons] = useState(false);\n  const [showMagicCircle, setShowMagicCircle] = useState(false);\n  const [cameraPosition, setCameraPosition] = useState([0, 0, 7]);\n  const [cameraUp, setCameraUp] = useState([0, 1, 0]);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setCanvasSize({ width: window.innerWidth, height: window.innerHeight });\n    };\n    window.addEventListener('resize', handleResize);\n\n    const logoTimer = setTimeout(() => setShowLogo(true), 1000);\n    const buttonTimer = setTimeout(() => setShowButtons(true), 3000);\n    const magicCircleTimer = setTimeout(() => {\n      setShowMagicCircle(true);\n      setCameraPosition([0, 5, 0]);\n      setCameraUp([0, 0, -1]);\n    }, 3000);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      clearTimeout(logoTimer);\n      clearTimeout(buttonTimer);\n      clearTimeout(magicCircleTimer);\n    };\n  }, []);\n\n  return (\n    <>\n      <Canvas camera={{ fov: 75 }} style={{ width: canvasSize.width, height: canvasSize.height }}>\n        <color attach=\"background\" args={['#000']} />\n        <ambientLight intensity={0.5} />\n        <pointLight position={[10, 10, 10]} />\n        <CameraControls position={cameraPosition} up={cameraUp} />\n        {!showMagicCircle && <ParticleWave />}\n        {showMagicCircle && <MagicCircle />}\n        <ParticleBand yPosition={4.5} color={0x66ffff} count={50000} height={0.4} />\n        <ParticleBand yPosition={-4.5} color={0x66ffff} count={50000} height={0.4} />\n      </Canvas>\n      <div className=\"overlay-content\">\n        <h1\n          className={`logo ${showLogo ? 'visible' : ''}`}\n        >\n          Babel & Zoltraak\n        </h1>\n        <h2 className={`leed ${showLogo ? 'visible' : ''}`}>\n          言語を超え、文化を繋ぐ 新たな世界の創造へ\n        </h2>\n        <div className={`button-container ${showButtons ? 'visible' : ''}`}>\n          <button className=\"action-button\">Babel Editor</button>\n          <button className=\"action-button\">System List</button>\n        </div>\n      </div>\n    </>\n  );\n}\n\nfunction App() {\n  return (\n    <div className=\"anim\">\n      <AnimationCanvas />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}