{"ast":null,"code":"import { jsxs, Fragment, jsx } from \"react/jsx-runtime\";\nimport * as THREE from \"three\";\nimport { forwardRef, useRef, useContext, useState, useEffect, useCallback, useMemo, useImperativeHandle } from \"react\";\nimport { useThree, useFrame, createPortal } from \"@react-three/fiber\";\nimport { DepthPickingPass, CopyPass } from \"postprocessing\";\nimport { easing } from \"maath\";\nimport { DepthOfField } from \"./DepthOfField.js\";\nimport { EffectComposerContext } from \"../EffectComposer.js\";\nconst Autofocus = forwardRef(({\n  target = void 0,\n  mouse: followMouse = false,\n  debug = void 0,\n  manual = false,\n  smoothTime = 0.25,\n  ...props\n}, fref) => {\n  const dofRef = useRef(null);\n  const hitpointRef = useRef(null);\n  const targetRef = useRef(null);\n  const scene = useThree(({\n    scene: scene2\n  }) => scene2);\n  const pointer = useThree(({\n    pointer: pointer2\n  }) => pointer2);\n  const {\n    composer,\n    camera\n  } = useContext(EffectComposerContext);\n  const [depthPickingPass] = useState(() => new DepthPickingPass());\n  const [copyPass] = useState(() => new CopyPass());\n  useEffect(() => {\n    composer.addPass(depthPickingPass);\n    composer.addPass(copyPass);\n    return () => {\n      composer.removePass(depthPickingPass);\n      composer.removePass(copyPass);\n    };\n  }, [composer, depthPickingPass, copyPass]);\n  useEffect(() => {\n    return () => {\n      depthPickingPass.dispose();\n      copyPass.dispose();\n    };\n  }, [depthPickingPass, copyPass]);\n  const [hitpoint] = useState(() => new THREE.Vector3(0, 0, 0));\n  const [ndc] = useState(() => new THREE.Vector3(0, 0, 0));\n  const getHit = useCallback(async (x, y) => {\n    ndc.x = x;\n    ndc.y = y;\n    ndc.z = await depthPickingPass.readDepth(ndc);\n    ndc.z = ndc.z * 2 - 1;\n    const hit = 1 - ndc.z > 1e-7;\n    return hit ? ndc.unproject(camera) : false;\n  }, [ndc, depthPickingPass, camera]);\n  const update = useCallback(async (delta, updateTarget = true) => {\n    var _a;\n    if (target) {\n      hitpoint.set(...target);\n    } else {\n      const {\n        x,\n        y\n      } = followMouse ? pointer : {\n        x: 0,\n        y: 0\n      };\n      const hit = await getHit(x, y);\n      if (hit) hitpoint.copy(hit);\n    }\n    if (updateTarget && ((_a = dofRef.current) == null ? void 0 : _a.target)) {\n      if (smoothTime > 0 && delta > 0) {\n        easing.damp3(dofRef.current.target, hitpoint, smoothTime, delta);\n      } else {\n        dofRef.current.target.copy(hitpoint);\n      }\n    }\n  }, [target, hitpoint, followMouse, getHit, smoothTime, pointer]);\n  useFrame(async (_, delta) => {\n    var _a;\n    if (!manual) {\n      update(delta);\n    }\n    if (hitpointRef.current) {\n      hitpointRef.current.position.copy(hitpoint);\n    }\n    if (targetRef.current && ((_a = dofRef.current) == null ? void 0 : _a.target)) {\n      targetRef.current.position.copy(dofRef.current.target);\n    }\n  });\n  const api = useMemo(() => ({\n    dofRef,\n    hitpoint,\n    update\n  }), [hitpoint, update]);\n  useImperativeHandle(fref, () => api, [api]);\n  return /* @__PURE__ */jsxs(Fragment, {\n    children: [debug ? createPortal(/* @__PURE__ */jsxs(Fragment, {\n      children: [/* @__PURE__ */jsxs(\"mesh\", {\n        ref: hitpointRef,\n        children: [/* @__PURE__ */jsx(\"sphereGeometry\", {\n          args: [debug, 16, 16]\n        }), /* @__PURE__ */jsx(\"meshBasicMaterial\", {\n          color: \"#00ff00\",\n          opacity: 1,\n          transparent: true,\n          depthWrite: false\n        })]\n      }), /* @__PURE__ */jsxs(\"mesh\", {\n        ref: targetRef,\n        children: [/* @__PURE__ */jsx(\"sphereGeometry\", {\n          args: [debug / 2, 16, 16]\n        }), /* @__PURE__ */jsx(\"meshBasicMaterial\", {\n          color: \"#00ff00\",\n          opacity: 0.5,\n          transparent: true,\n          depthWrite: false\n        })]\n      })]\n    }), scene) : null, /* @__PURE__ */jsx(DepthOfField, {\n      ref: dofRef,\n      ...props,\n      target: hitpoint\n    })]\n  });\n});\nexport { Autofocus };","map":{"version":3,"names":["Autofocus","forwardRef","target","mouse","followMouse","debug","manual","smoothTime","props","fref","dofRef","useRef","hitpointRef","targetRef","scene","useThree","scene2","pointer","pointer2","composer","camera","useContext","EffectComposerContext","depthPickingPass","useState","DepthPickingPass","copyPass","CopyPass","useEffect","addPass","removePass","dispose","hitpoint","THREE","Vector3","ndc","getHit","useCallback","x","y","z","readDepth","hit","unproject","update","delta","updateTarget","set","copy","_a","current","easing","damp3","useFrame","_","position","api","useMemo","useImperativeHandle","jsxs","Fragment","children","createPortal","ref","jsx","args","color","opacity","transparent","depthWrite","DepthOfField"],"sources":["/Users/kasaikazunobu/project/babel/babel-project/node_modules/@react-three/postprocessing/src/effects/Autofocus.tsx"],"sourcesContent":["import * as THREE from 'three'\nimport React, {\n  useRef,\n  useContext,\n  useState,\n  useEffect,\n  useCallback,\n  forwardRef,\n  useImperativeHandle,\n  RefObject,\n  useMemo,\n} from 'react'\nimport { useThree, useFrame, createPortal, Vector3 } from '@react-three/fiber'\nimport { CopyPass, DepthPickingPass, DepthOfFieldEffect } from 'postprocessing'\nimport { easing } from 'maath'\n\nimport { DepthOfField } from './DepthOfField'\nimport { EffectComposerContext } from '../EffectComposer'\n\nexport type AutofocusProps = React.ComponentProps<typeof DepthOfField> & {\n  target?: Vector3\n  /** should the target follow the pointer */\n  mouse?: boolean\n  /** size of the debug green point  */\n  debug?: number\n  /** manual update */\n  manual?: boolean\n  /** approximate time to reach the target */\n  smoothTime?: number\n}\n\nexport type AutofocusApi = {\n  dofRef: RefObject<DepthOfFieldEffect>\n  hitpoint: THREE.Vector3\n  update: (delta: number, updateTarget: boolean) => void\n}\n\nexport const Autofocus = forwardRef<AutofocusApi, AutofocusProps>(\n  (\n    { target = undefined, mouse: followMouse = false, debug = undefined, manual = false, smoothTime = 0.25, ...props },\n    fref\n  ) => {\n    const dofRef = useRef<DepthOfFieldEffect>(null)\n    const hitpointRef = useRef<THREE.Mesh>(null)\n    const targetRef = useRef<THREE.Mesh>(null)\n\n    const scene = useThree(({ scene }) => scene)\n    const pointer = useThree(({ pointer }) => pointer)\n    const { composer, camera } = useContext(EffectComposerContext)\n\n    // see: https://codesandbox.io/s/depthpickingpass-x130hg\n    const [depthPickingPass] = useState(() => new DepthPickingPass())\n    const [copyPass] = useState(() => new CopyPass())\n    useEffect(() => {\n      composer.addPass(depthPickingPass)\n      composer.addPass(copyPass)\n      return () => {\n        composer.removePass(depthPickingPass)\n        composer.removePass(copyPass)\n      }\n    }, [composer, depthPickingPass, copyPass])\n\n    useEffect(() => {\n      return () => {\n        depthPickingPass.dispose()\n        copyPass.dispose()\n      }\n    }, [depthPickingPass, copyPass])\n\n    const [hitpoint] = useState(() => new THREE.Vector3(0, 0, 0))\n\n    const [ndc] = useState(() => new THREE.Vector3(0, 0, 0))\n    const getHit = useCallback(\n      async (x: number, y: number) => {\n        ndc.x = x\n        ndc.y = y\n        ndc.z = await depthPickingPass.readDepth(ndc)\n        ndc.z = ndc.z * 2.0 - 1.0\n        const hit = 1 - ndc.z > 0.0000001 // it is missed if ndc.z is close to 1\n        return hit ? ndc.unproject(camera) : false\n      },\n      [ndc, depthPickingPass, camera]\n    )\n\n    const update = useCallback(\n      async (delta: number, updateTarget = true) => {\n        // Update hitpoint\n        if (target) {\n          hitpoint.set(...(target as [number, number, number]))\n        } else {\n          const { x, y } = followMouse ? pointer : { x: 0, y: 0 }\n          const hit = await getHit(x, y)\n          if (hit) hitpoint.copy(hit)\n        }\n\n        // Update target\n        if (updateTarget && dofRef.current?.target) {\n          if (smoothTime > 0 && delta > 0) {\n            easing.damp3(dofRef.current.target, hitpoint, smoothTime, delta)\n          } else {\n            dofRef.current.target.copy(hitpoint)\n          }\n        }\n      },\n      [target, hitpoint, followMouse, getHit, smoothTime, pointer]\n    )\n\n    useFrame(async (_, delta) => {\n      if (!manual) {\n        update(delta)\n      }\n      if (hitpointRef.current) {\n        hitpointRef.current.position.copy(hitpoint)\n      }\n      if (targetRef.current && dofRef.current?.target) {\n        targetRef.current.position.copy(dofRef.current.target)\n      }\n    })\n\n    // Ref API\n    const api = useMemo<AutofocusApi>(\n      () => ({\n        dofRef,\n        hitpoint,\n        update,\n      }),\n      [hitpoint, update]\n    )\n    useImperativeHandle(fref, () => api, [api])\n\n    return (\n      <>\n        {debug\n          ? createPortal(\n              <>\n                <mesh ref={hitpointRef}>\n                  <sphereGeometry args={[debug, 16, 16]} />\n                  <meshBasicMaterial color=\"#00ff00\" opacity={1} transparent depthWrite={false} />\n                </mesh>\n                <mesh ref={targetRef}>\n                  <sphereGeometry args={[debug / 2, 16, 16]} />\n                  <meshBasicMaterial color=\"#00ff00\" opacity={0.5} transparent depthWrite={false} />\n                </mesh>\n              </>,\n              scene\n            )\n          : null}\n\n        <DepthOfField ref={dofRef} {...props} target={hitpoint} />\n      </>\n    )\n  }\n)\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}