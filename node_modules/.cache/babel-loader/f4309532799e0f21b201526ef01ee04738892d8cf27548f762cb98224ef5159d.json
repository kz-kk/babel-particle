{"ast":null,"code":"var _jsxFileName = \"/Users/kasaikazunobu/project/ai/babel/ripple/3d-ripple-animation/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useRef, useMemo } from 'react';\nimport { Canvas, useFrame, useLoader } from '@react-three/fiber';\nimport { OrbitControls, Grid } from '@react-three/drei';\nimport * as THREE from 'three';\nimport circleImg from './assets/circle.png'; // テクスチャのパスを正しく設定\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CameraControls() {\n  return /*#__PURE__*/_jsxDEV(OrbitControls, {\n    autoRotate: true,\n    autoRotateSpeed: -0.2\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 10\n  }, this);\n}\n_c = CameraControls;\nfunction ParticleWave() {\n  _s();\n  const pointsRef = useRef();\n  const imgTex = useLoader(THREE.TextureLoader, circleImg); // テクスチャの読み込み\n\n  const count = 400; // グリッドのサイズを400x400に増やす\n  const separation = 0.2; // 点と点の間隔を狭める\n  const amplitude = 0.3; // 波の振幅をさらに大きくする\n  const frequency = 1.5; // 波の周波数を下げて、間隔を広くする\n  const speed = 0.8; // リップルの速度\n\n  // ポイントの初期位置を計算\n  const positions = useMemo(() => {\n    const positions = [];\n    for (let xi = 0; xi < count; xi++) {\n      for (let zi = 0; zi < count; zi++) {\n        const x = separation * (xi - count / 2);\n        const z = separation * (zi - count / 2);\n        const y = 0; // 初期Y座標\n        positions.push(x, y, z);\n      }\n    }\n    return new Float32Array(positions);\n  }, [count, separation]);\n\n  // フレームごとにY座標を更新（リップルアニメーション）\n  useFrame(({\n    clock\n  }) => {\n    const time = clock.getElapsedTime();\n    const positionsArray = pointsRef.current.array;\n    let i = 0;\n    for (let xi = 0; xi < count; xi++) {\n      for (let zi = 0; zi < count; zi++) {\n        const x = separation * (xi - count / 2);\n        const z = separation * (zi - count / 2);\n        const distance = Math.sqrt(x * x + z * z);\n        // リップル波の関数（周波数を下げ、振幅を大きくした）\n        positionsArray[i + 1] = Math.sin((distance - time * speed) * frequency) * amplitude;\n        i += 3;\n      }\n    }\n    pointsRef.current.needsUpdate = true;\n  });\n  return /*#__PURE__*/_jsxDEV(\"points\", {\n    frustumCulled: false,\n    children: [/*#__PURE__*/_jsxDEV(\"bufferGeometry\", {\n      children: /*#__PURE__*/_jsxDEV(\"bufferAttribute\", {\n        ref: pointsRef,\n        attach: \"attributes-position\",\n        array: positions,\n        count: positions.length / 3,\n        itemSize: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointsMaterial\", {\n      map: imgTex // テクスチャを適用\n      ,\n      color: 0xffffff // 白色に設定\n      ,\n      size: 0.01 // ���子のサイズをさらに小さく設定\n      ,\n      sizeAttenuation: true,\n      transparent: true,\n      opacity: 0.8,\n      blending: THREE.AdditiveBlending // 加算ブレンディングを使用\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(ParticleWave, \"V8gvKTS4WlZhPJZRXUDAYoJHmbo=\", false, function () {\n  return [useLoader, useFrame];\n});\n_c2 = ParticleWave;\nfunction AnimationCanvas() {\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    camera: {\n      position: [0, 20, 40],\n      fov: 60\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"color\", {\n      attach: \"background\",\n      args: ['#000']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ambientLight\", {\n      intensity: 0.3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n      position: [10, 10, 10]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CameraControls, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      args: [50, 50],\n      cellSize: 1,\n      cellThickness: 0.3,\n      cellColor: \"#ffffff\",\n      sectionSize: 10,\n      sectionThickness: 1.0,\n      sectionColor: \"#ffffff\",\n      fadeDistance: 50,\n      fadeStrength: 1,\n      \"material-opacity\": 0.3,\n      \"material-transparent\": true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ParticleWave, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_c3 = AnimationCanvas;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"anim\",\n    children: /*#__PURE__*/_jsxDEV(AnimationCanvas, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"CameraControls\");\n$RefreshReg$(_c2, \"ParticleWave\");\n$RefreshReg$(_c3, \"AnimationCanvas\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["React","useRef","useMemo","Canvas","useFrame","useLoader","OrbitControls","Grid","THREE","circleImg","jsxDEV","_jsxDEV","CameraControls","autoRotate","autoRotateSpeed","fileName","_jsxFileName","lineNumber","columnNumber","_c","ParticleWave","_s","pointsRef","imgTex","TextureLoader","count","separation","amplitude","frequency","speed","positions","xi","zi","x","z","y","push","Float32Array","clock","time","getElapsedTime","positionsArray","current","array","i","distance","Math","sqrt","sin","needsUpdate","frustumCulled","children","ref","attach","length","itemSize","map","color","size","sizeAttenuation","transparent","opacity","blending","AdditiveBlending","_c2","AnimationCanvas","camera","position","fov","args","intensity","cellSize","cellThickness","cellColor","sectionSize","sectionThickness","sectionColor","fadeDistance","fadeStrength","_c3","App","className","_c4","$RefreshReg$"],"sources":["/Users/kasaikazunobu/project/ai/babel/ripple/3d-ripple-animation/src/App.js"],"sourcesContent":["// App.js\nimport React, { useRef, useMemo } from 'react';\nimport { Canvas, useFrame, useLoader } from '@react-three/fiber';\nimport { OrbitControls, Grid } from '@react-three/drei';\nimport * as THREE from 'three';\nimport circleImg from './assets/circle.png'; // テクスチャのパスを正しく設定\nimport './App.css';\n\nfunction CameraControls() {\n  return <OrbitControls autoRotate autoRotateSpeed={-0.2} />;\n}\n\nfunction ParticleWave() {\n  const pointsRef = useRef();\n  const imgTex = useLoader(THREE.TextureLoader, circleImg); // テクスチャの読み込み\n\n  const count = 400; // グリッドのサイズを400x400に増やす\n  const separation = 0.2; // 点と点の間隔を狭める\n  const amplitude = 0.3; // 波の振幅をさらに大きくする\n  const frequency = 1.5; // 波の周波数を下げて、間隔を広くする\n  const speed = 0.8; // リップルの速度\n\n  // ポイントの初期位置を計算\n  const positions = useMemo(() => {\n    const positions = [];\n    for (let xi = 0; xi < count; xi++) {\n      for (let zi = 0; zi < count; zi++) {\n        const x = separation * (xi - count / 2);\n        const z = separation * (zi - count / 2);\n        const y = 0; // 初期Y座標\n        positions.push(x, y, z);\n      }\n    }\n    return new Float32Array(positions);\n  }, [count, separation]);\n\n  // フレームごとにY座標を更新（リップルアニメーション）\n  useFrame(({ clock }) => {\n    const time = clock.getElapsedTime();\n    const positionsArray = pointsRef.current.array;\n    let i = 0;\n    for (let xi = 0; xi < count; xi++) {\n      for (let zi = 0; zi < count; zi++) {\n        const x = separation * (xi - count / 2);\n        const z = separation * (zi - count / 2);\n        const distance = Math.sqrt(x * x + z * z);\n        // リップル波の関数（周波数を下げ、振幅を大きくした）\n        positionsArray[i + 1] = Math.sin((distance - time * speed) * frequency) * amplitude;\n        i += 3;\n      }\n    }\n    pointsRef.current.needsUpdate = true;\n  });\n\n  return (\n    <points frustumCulled={false}>\n      <bufferGeometry>\n        <bufferAttribute\n          ref={pointsRef}\n          attach=\"attributes-position\"\n          array={positions}\n          count={positions.length / 3}\n          itemSize={3}\n        />\n      </bufferGeometry>\n      <pointsMaterial\n        map={imgTex} // テクスチャを適用\n        color={0xffffff} // 白色に設定\n        size={0.01} // ���子のサイズをさらに小さく設定\n        sizeAttenuation\n        transparent={true}\n        opacity={0.8}\n        blending={THREE.AdditiveBlending} // 加算ブレンディングを使用\n      />\n    </points>\n  );\n}\n\nfunction AnimationCanvas() {\n  return (\n    <Canvas camera={{ position: [0, 20, 40], fov: 60 }}>\n      <color attach=\"background\" args={['#000']} />\n      <ambientLight intensity={0.3} />\n      <pointLight position={[10, 10, 10]} />\n      <CameraControls />\n      {/* <axesHelper args={[5]} /> */}\n      <Grid\n        args={[50, 50]}\n        cellSize={1}\n        cellThickness={0.3}\n        cellColor=\"#ffffff\"\n        sectionSize={10}\n        sectionThickness={1.0}\n        sectionColor=\"#ffffff\"\n        fadeDistance={50}\n        fadeStrength={1}\n        material-opacity={0.3}\n        material-transparent\n      />\n      <ParticleWave />\n    </Canvas>\n  );\n}\n\nfunction App() {\n  return (\n    <div className=\"anim\">\n      <AnimationCanvas />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}