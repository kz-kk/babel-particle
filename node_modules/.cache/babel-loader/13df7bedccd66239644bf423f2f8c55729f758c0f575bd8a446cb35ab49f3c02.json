{"ast":null,"code":"var _jsxFileName = \"/Users/kasaikazunobu/project/ai/babel/ripple/3d-ripple-animation/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\n// App.js\nimport React, { useRef, useMemo, useEffect, useState } from 'react';\nimport { Canvas, useFrame, useLoader, useThree } from '@react-three/fiber';\nimport { OrbitControls } from '@react-three/drei';\nimport * as THREE from 'three';\nimport { createNoise3D } from 'simplex-noise';\nimport circleImg from './assets/circle.png';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst noise3D = createNoise3D();\nfunction CameraControls() {\n  return /*#__PURE__*/_jsxDEV(OrbitControls, {\n    autoRotate: true,\n    autoRotateSpeed: -0.2\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 10\n  }, this);\n}\n_c = CameraControls;\nfunction ParticleWave() {\n  _s();\n  const pointsRef = useRef();\n  const opacityRef = useRef();\n  const imgTex = useLoader(THREE.TextureLoader, circleImg);\n  const count = 100000;\n  const radius = 2;\n  const height = 7;\n  const speed = 0.8;\n  const spiralSpeed = 0.3;\n  const flowIntensity = 0.05;\n  const {\n    positions,\n    opacities\n  } = useMemo(() => {\n    const positions = [];\n    const opacities = [];\n    for (let i = 0; i < count; i++) {\n      const theta = Math.random() * Math.PI * 2;\n      const phi = Math.acos(2 * Math.random() - 1);\n      const r = Math.random() * radius;\n      const x = r * Math.sin(phi) * Math.cos(theta);\n      const y = Math.random() * height - height / 2;\n      const z = r * Math.sin(phi) * Math.sin(theta);\n      positions.push(x, y, z);\n\n      // 上下の端に近いほど不透明度を高くする\n      const edgeFactor = 1 - Math.abs(y) / (height / 2);\n      const baseOpacity = 0.3;\n      const edgeOpacity = 0.7;\n      opacities.push(baseOpacity + edgeFactor * (edgeOpacity - baseOpacity));\n    }\n    return {\n      positions: new Float32Array(positions),\n      opacities: new Float32Array(opacities)\n    };\n  }, [count, radius, height]);\n  useFrame(({\n    clock\n  }) => {\n    const time = clock.getElapsedTime();\n    const positionsArray = pointsRef.current.array;\n    const opacitiesArray = opacityRef.current.array;\n    for (let i = 0; i < count; i++) {\n      const i3 = i * 3;\n      let x = positionsArray[i3];\n      let y = positionsArray[i3 + 1];\n      let z = positionsArray[i3 + 2];\n      const noise = noise3D(x * 0.5, y * 0.5, z * 0.5 + time * 0.2) * flowIntensity;\n      const angle = Math.atan2(z, x) + spiralSpeed * 0.01 + noise;\n      const r = Math.sqrt(x * x + z * z);\n      x = r * Math.cos(angle);\n      z = r * Math.sin(angle);\n      y += speed * 0.01 * (1 + noise);\n      if (y > height / 2) {\n        y = -height / 2;\n        const newTheta = Math.random() * Math.PI * 2;\n        const newPhi = Math.acos(2 * Math.random() - 1);\n        const newR = Math.random() * radius;\n        x = newR * Math.sin(newPhi) * Math.cos(newTheta);\n        z = newR * Math.sin(newPhi) * Math.sin(newTheta);\n      }\n      positionsArray[i3] = x;\n      positionsArray[i3 + 1] = y;\n      positionsArray[i3 + 2] = z;\n\n      // 不透明度を更新\n      const edgeFactor = 1 - Math.abs(y) / (height / 2);\n      const baseOpacity = 0.3;\n      const edgeOpacity = 0.7;\n      opacitiesArray[i] = baseOpacity + edgeFactor * (edgeOpacity - baseOpacity);\n    }\n    pointsRef.current.needsUpdate = true;\n    opacityRef.current.needsUpdate = true;\n  });\n  return /*#__PURE__*/_jsxDEV(\"points\", {\n    frustumCulled: false,\n    children: [/*#__PURE__*/_jsxDEV(\"bufferGeometry\", {\n      children: [/*#__PURE__*/_jsxDEV(\"bufferAttribute\", {\n        ref: pointsRef,\n        attach: \"attributes-position\",\n        array: positions,\n        count: positions.length / 3,\n        itemSize: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"bufferAttribute\", {\n        ref: opacityRef,\n        attach: \"attributes-opacity\",\n        array: opacities,\n        count: opacities.length,\n        itemSize: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointsMaterial\", {\n      map: imgTex,\n      color: 0x66ffff,\n      size: 0.02,\n      sizeAttenuation: true,\n      transparent: true,\n      blending: THREE.AdditiveBlending,\n      vertexColors: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n_s(ParticleWave, \"4uMmmFkZ+boST+DDz5g0uvXFniE=\", false, function () {\n  return [useLoader, useFrame];\n});\n_c2 = ParticleWave;\nfunction ParticleBand({\n  yPosition,\n  count = 200000,\n  height = 0.2,\n  color = 0x66ffff\n}) {\n  _s2();\n  const pointsRef = useRef();\n  const imgTex = useLoader(THREE.TextureLoader, circleImg);\n  const {\n    viewport\n  } = useThree();\n  const positions = useMemo(() => {\n    const positions = [];\n    const aspect = viewport.width / viewport.height;\n    const width = viewport.width * 1.2;\n    const depth = width / aspect;\n    for (let i = 0; i < count; i++) {\n      const x = (Math.random() - 0.5) * width;\n      const y = yPosition + (Math.random() - 0.5) * height;\n      const z = (Math.random() - 0.5) * depth;\n      positions.push(x, y, z);\n    }\n    return new Float32Array(positions);\n  }, [count, height, yPosition, viewport.width, viewport.height]);\n  useFrame(({\n    clock\n  }) => {\n    const time = clock.getElapsedTime();\n    const positionsArray = pointsRef.current.array;\n    const width = viewport.width * 1.2;\n    const aspect = viewport.width / viewport.height;\n    const depth = width / aspect;\n    for (let i = 0; i < count; i++) {\n      const i3 = i * 3;\n      let x = positionsArray[i3];\n      let y = positionsArray[i3 + 1];\n      let z = positionsArray[i3 + 2];\n      x += Math.sin(z * 0.3 + time * 0.2) * 0.01;\n      z += Math.cos(x * 0.3 + time * 0.2) * 0.01;\n      y += Math.sin(x * 0.3 + z * 0.3 + time * 0.1) * 0.002;\n      if (x < -width / 2) x += width;\n      if (x > width / 2) x -= width;\n      if (z < -depth / 2) z += depth;\n      if (z > depth / 2) z -= depth;\n      positionsArray[i3] = x;\n      positionsArray[i3 + 1] = y;\n      positionsArray[i3 + 2] = z;\n    }\n    pointsRef.current.needsUpdate = true;\n  });\n  return /*#__PURE__*/_jsxDEV(\"points\", {\n    frustumCulled: false,\n    children: [/*#__PURE__*/_jsxDEV(\"bufferGeometry\", {\n      children: /*#__PURE__*/_jsxDEV(\"bufferAttribute\", {\n        ref: pointsRef,\n        attach: \"attributes-position\",\n        array: positions,\n        count: positions.length / 3,\n        itemSize: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointsMaterial\", {\n      map: imgTex,\n      color: color,\n      size: 0.025,\n      sizeAttenuation: true,\n      transparent: true,\n      opacity: 0.4,\n      blending: THREE.AdditiveBlending\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n}\n_s2(ParticleBand, \"mkjvxZxlZJUcDF4z3qt0/IvloEQ=\", false, function () {\n  return [useLoader, useThree, useFrame];\n});\n_c3 = ParticleBand;\nfunction AnimationCanvas() {\n  _s3();\n  const [canvasSize, setCanvasSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n  useEffect(() => {\n    const handleResize = () => {\n      setCanvasSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    camera: {\n      position: [0, 0, 9],\n      fov: 75\n    },\n    style: {\n      width: canvasSize.width,\n      height: canvasSize.height\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"color\", {\n      attach: \"background\",\n      args: ['#000']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ambientLight\", {\n      intensity: 0.5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n      position: [10, 10, 10]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CameraControls, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ParticleWave, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ParticleBand, {\n      yPosition: 5,\n      color: 0x66ffff,\n      count: 200000\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ParticleBand, {\n      yPosition: -5,\n      color: 0x66ffff,\n      count: 200000\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n}\n_s3(AnimationCanvas, \"efV7aGodZujF4CF/3jUnM4vIknw=\");\n_c4 = AnimationCanvas;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"anim\",\n    children: /*#__PURE__*/_jsxDEV(AnimationCanvas, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 221,\n    columnNumber: 5\n  }, this);\n}\n_c5 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"CameraControls\");\n$RefreshReg$(_c2, \"ParticleWave\");\n$RefreshReg$(_c3, \"ParticleBand\");\n$RefreshReg$(_c4, \"AnimationCanvas\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"names":["React","useRef","useMemo","useEffect","useState","Canvas","useFrame","useLoader","useThree","OrbitControls","THREE","createNoise3D","circleImg","jsxDEV","_jsxDEV","noise3D","CameraControls","autoRotate","autoRotateSpeed","fileName","_jsxFileName","lineNumber","columnNumber","_c","ParticleWave","_s","pointsRef","opacityRef","imgTex","TextureLoader","count","radius","height","speed","spiralSpeed","flowIntensity","positions","opacities","i","theta","Math","random","PI","phi","acos","r","x","sin","cos","y","z","push","edgeFactor","abs","baseOpacity","edgeOpacity","Float32Array","clock","time","getElapsedTime","positionsArray","current","array","opacitiesArray","i3","noise","angle","atan2","sqrt","newTheta","newPhi","newR","needsUpdate","frustumCulled","children","ref","attach","length","itemSize","map","color","size","sizeAttenuation","transparent","blending","AdditiveBlending","vertexColors","_c2","ParticleBand","yPosition","_s2","viewport","aspect","width","depth","opacity","_c3","AnimationCanvas","_s3","canvasSize","setCanvasSize","window","innerWidth","innerHeight","handleResize","addEventListener","removeEventListener","camera","position","fov","style","args","intensity","_c4","App","className","_c5","$RefreshReg$"],"sources":["/Users/kasaikazunobu/project/ai/babel/ripple/3d-ripple-animation/src/App.js"],"sourcesContent":["// App.js\nimport React, { useRef, useMemo, useEffect, useState } from 'react';\nimport { Canvas, useFrame, useLoader, useThree } from '@react-three/fiber';\nimport { OrbitControls } from '@react-three/drei';\nimport * as THREE from 'three';\nimport { createNoise3D } from 'simplex-noise';\nimport circleImg from './assets/circle.png';\nimport './App.css';\n\nconst noise3D = createNoise3D();\n\nfunction CameraControls() {\n  return <OrbitControls autoRotate autoRotateSpeed={-0.2} />;\n}\n\nfunction ParticleWave() {\n  const pointsRef = useRef();\n  const opacityRef = useRef();\n  const imgTex = useLoader(THREE.TextureLoader, circleImg);\n\n  const count = 100000;\n  const radius = 2;\n  const height = 7;\n  const speed = 0.8;\n  const spiralSpeed = 0.3;\n  const flowIntensity = 0.05;\n\n  const { positions, opacities } = useMemo(() => {\n    const positions = [];\n    const opacities = [];\n    for (let i = 0; i < count; i++) {\n      const theta = Math.random() * Math.PI * 2;\n      const phi = Math.acos(2 * Math.random() - 1);\n      const r = Math.random() * radius;\n      const x = r * Math.sin(phi) * Math.cos(theta);\n      const y = Math.random() * height - height / 2;\n      const z = r * Math.sin(phi) * Math.sin(theta);\n      positions.push(x, y, z);\n      \n      // 上下の端に近いほど不透明度を高くする\n      const edgeFactor = 1 - Math.abs(y) / (height / 2);\n      const baseOpacity = 0.3;\n      const edgeOpacity = 0.7;\n      opacities.push(baseOpacity + edgeFactor * (edgeOpacity - baseOpacity));\n    }\n    return { \n      positions: new Float32Array(positions),\n      opacities: new Float32Array(opacities)\n    };\n  }, [count, radius, height]);\n\n  useFrame(({ clock }) => {\n    const time = clock.getElapsedTime();\n    const positionsArray = pointsRef.current.array;\n    const opacitiesArray = opacityRef.current.array;\n    for (let i = 0; i < count; i++) {\n      const i3 = i * 3;\n      let x = positionsArray[i3];\n      let y = positionsArray[i3 + 1];\n      let z = positionsArray[i3 + 2];\n\n      const noise = noise3D(x * 0.5, y * 0.5, z * 0.5 + time * 0.2) * flowIntensity;\n      const angle = Math.atan2(z, x) + spiralSpeed * 0.01 + noise;\n      const r = Math.sqrt(x * x + z * z);\n      \n      x = r * Math.cos(angle);\n      z = r * Math.sin(angle);\n      y += speed * 0.01 * (1 + noise);\n\n      if (y > height / 2) {\n        y = -height / 2;\n        const newTheta = Math.random() * Math.PI * 2;\n        const newPhi = Math.acos(2 * Math.random() - 1);\n        const newR = Math.random() * radius;\n        x = newR * Math.sin(newPhi) * Math.cos(newTheta);\n        z = newR * Math.sin(newPhi) * Math.sin(newTheta);\n      }\n\n      positionsArray[i3] = x;\n      positionsArray[i3 + 1] = y;\n      positionsArray[i3 + 2] = z;\n\n      // 不透明度を更新\n      const edgeFactor = 1 - Math.abs(y) / (height / 2);\n      const baseOpacity = 0.3;\n      const edgeOpacity = 0.7;\n      opacitiesArray[i] = baseOpacity + edgeFactor * (edgeOpacity - baseOpacity);\n    }\n    pointsRef.current.needsUpdate = true;\n    opacityRef.current.needsUpdate = true;\n  });\n\n  return (\n    <points frustumCulled={false}>\n      <bufferGeometry>\n        <bufferAttribute\n          ref={pointsRef}\n          attach=\"attributes-position\"\n          array={positions}\n          count={positions.length / 3}\n          itemSize={3}\n        />\n        <bufferAttribute\n          ref={opacityRef}\n          attach=\"attributes-opacity\"\n          array={opacities}\n          count={opacities.length}\n          itemSize={1}\n        />\n      </bufferGeometry>\n      <pointsMaterial\n        map={imgTex}\n        color={0x66ffff}\n        size={0.02}\n        sizeAttenuation\n        transparent={true}\n        blending={THREE.AdditiveBlending}\n        vertexColors={true}\n      />\n    </points>\n  );\n}\n\nfunction ParticleBand({ yPosition, count = 200000, height = 0.2, color = 0x66ffff }) {\n  const pointsRef = useRef();\n  const imgTex = useLoader(THREE.TextureLoader, circleImg);\n  const { viewport } = useThree();\n\n  const positions = useMemo(() => {\n    const positions = [];\n    const aspect = viewport.width / viewport.height;\n    const width = viewport.width * 1.2;\n    const depth = width / aspect;\n    for (let i = 0; i < count; i++) {\n      const x = (Math.random() - 0.5) * width;\n      const y = yPosition + (Math.random() - 0.5) * height;\n      const z = (Math.random() - 0.5) * depth;\n      positions.push(x, y, z);\n    }\n    return new Float32Array(positions);\n  }, [count, height, yPosition, viewport.width, viewport.height]);\n\n  useFrame(({ clock }) => {\n    const time = clock.getElapsedTime();\n    const positionsArray = pointsRef.current.array;\n    const width = viewport.width * 1.2;\n    const aspect = viewport.width / viewport.height;\n    const depth = width / aspect;\n    for (let i = 0; i < count; i++) {\n      const i3 = i * 3;\n      let x = positionsArray[i3];\n      let y = positionsArray[i3 + 1];\n      let z = positionsArray[i3 + 2];\n\n      x += Math.sin(z * 0.3 + time * 0.2) * 0.01;\n      z += Math.cos(x * 0.3 + time * 0.2) * 0.01;\n      y += Math.sin(x * 0.3 + z * 0.3 + time * 0.1) * 0.002;\n\n      if (x < -width / 2) x += width;\n      if (x > width / 2) x -= width;\n      if (z < -depth / 2) z += depth;\n      if (z > depth / 2) z -= depth;\n\n      positionsArray[i3] = x;\n      positionsArray[i3 + 1] = y;\n      positionsArray[i3 + 2] = z;\n    }\n    pointsRef.current.needsUpdate = true;\n  });\n\n  return (\n    <points frustumCulled={false}>\n      <bufferGeometry>\n        <bufferAttribute\n          ref={pointsRef}\n          attach=\"attributes-position\"\n          array={positions}\n          count={positions.length / 3}\n          itemSize={3}\n        />\n      </bufferGeometry>\n      <pointsMaterial\n        map={imgTex}\n        color={color}\n        size={0.025}\n        sizeAttenuation\n        transparent={true}\n        opacity={0.4}\n        blending={THREE.AdditiveBlending}\n      />\n    </points>\n  );\n}\n\nfunction AnimationCanvas() {\n  const [canvasSize, setCanvasSize] = useState({ width: window.innerWidth, height: window.innerHeight });\n\n  useEffect(() => {\n    const handleResize = () => {\n      setCanvasSize({ width: window.innerWidth, height: window.innerHeight });\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return (\n    <Canvas camera={{ position: [0, 0, 9], fov: 75 }} style={{ width: canvasSize.width, height: canvasSize.height }}>\n      <color attach=\"background\" args={['#000']} />\n      <ambientLight intensity={0.5} />\n      <pointLight position={[10, 10, 10]} />\n      <CameraControls />\n      <ParticleWave />\n      <ParticleBand yPosition={5} color={0x66ffff} count={200000} />\n      <ParticleBand yPosition={-5} color={0x66ffff} count={200000} />\n    </Canvas>\n  );\n}\n\nfunction App() {\n  return (\n    <div className=\"anim\">\n      <AnimationCanvas />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}