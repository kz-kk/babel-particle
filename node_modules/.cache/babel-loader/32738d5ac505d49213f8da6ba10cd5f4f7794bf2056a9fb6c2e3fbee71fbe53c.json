{"ast":null,"code":"var _jsxFileName = \"/Users/kasaikazunobu/project/ai/babel/ripple/3d-ripple-animation/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useRef, useMemo } from 'react';\nimport { Canvas, useFrame, useLoader } from '@react-three/fiber';\nimport { OrbitControls } from '@react-three/drei';\nimport * as THREE from 'three';\nimport circleImg from './assets/circle.png'; // テクスチャのパスを正しく設定\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CameraControls() {\n  return /*#__PURE__*/_jsxDEV(OrbitControls, {\n    autoRotate: true,\n    autoRotateSpeed: -0.2\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 10\n  }, this);\n}\n_c = CameraControls;\nfunction ParticleWave() {\n  _s();\n  const pointsRef = useRef();\n  const imgTex = useLoader(THREE.TextureLoader, circleImg);\n  const count = 10000; // 粒子の数を増やす\n  const radius = 2; // 螺旋の半径\n  const height = 4; // 螺旋の高さ\n  const turns = 3; // 螺旋の巻数\n  const speed = 0.2; // 粒子の移動速度\n\n  // パーリンノイズ関数（簡易版）\n  const noise = (x, y, z) => {\n    return (Math.sin(x * 1.5 + y * 2.3 + z * 3.7) + Math.sin(x * 2.5 + y * 6.7 + z * 1.3) + Math.sin(x * 3.5 + y * 4.7 + z * 2.3)) / 3;\n  };\n\n  // 粒子の初期位置を計算\n  const positions = useMemo(() => {\n    const positions = [];\n    for (let i = 0; i < count; i++) {\n      const t = i / count;\n      const angle = 2 * Math.PI * turns * t;\n      const x = radius * Math.cos(angle) + (Math.random() - 0.5) * 0.5;\n      const y = height * (0.5 - t) + (Math.random() - 0.5) * 0.5;\n      const z = radius * Math.sin(angle) + (Math.random() - 0.5) * 0.5;\n      positions.push(x, y, z);\n    }\n    return new Float32Array(positions);\n  }, [count, radius, height, turns]);\n\n  // フレームごとに粒子の位置を更新\n  useFrame(({\n    clock\n  }) => {\n    const time = clock.getElapsedTime();\n    const positionsArray = pointsRef.current.array;\n    for (let i = 0; i < count; i++) {\n      const i3 = i * 3;\n      const t = (i / count + time * speed) % 1;\n      const angle = 2 * Math.PI * turns * t;\n      const noiseScale = 0.5;\n      const noiseX = noise(t * 10, time * 0.5, 0) * noiseScale;\n      const noiseY = noise(t * 10, time * 0.5, 1000) * noiseScale;\n      const noiseZ = noise(t * 10, time * 0.5, 2000) * noiseScale;\n      positionsArray[i3] = radius * Math.cos(angle) + noiseX;\n      positionsArray[i3 + 1] = height * (0.5 - t) + noiseY;\n      positionsArray[i3 + 2] = radius * Math.sin(angle) + noiseZ;\n    }\n    pointsRef.current.needsUpdate = true;\n  });\n  return /*#__PURE__*/_jsxDEV(\"points\", {\n    frustumCulled: false,\n    children: [/*#__PURE__*/_jsxDEV(\"bufferGeometry\", {\n      children: /*#__PURE__*/_jsxDEV(\"bufferAttribute\", {\n        ref: pointsRef,\n        attach: \"attributes-position\",\n        array: positions,\n        count: positions.length / 3,\n        itemSize: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointsMaterial\", {\n      map: imgTex,\n      color: 0xffffff,\n      size: 0.03,\n      sizeAttenuation: true,\n      transparent: true,\n      opacity: 0.6,\n      blending: THREE.AdditiveBlending\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(ParticleWave, \"V8gvKTS4WlZhPJZRXUDAYoJHmbo=\", false, function () {\n  return [useLoader, useFrame];\n});\n_c2 = ParticleWave;\nfunction AnimationCanvas() {\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    camera: {\n      position: [0, 0, 10],\n      fov: 75\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"color\", {\n      attach: \"background\",\n      args: ['#000']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ambientLight\", {\n      intensity: 0.5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n      position: [10, 10, 10]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CameraControls, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ParticleWave, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_c3 = AnimationCanvas;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"anim\",\n    children: /*#__PURE__*/_jsxDEV(AnimationCanvas, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"CameraControls\");\n$RefreshReg$(_c2, \"ParticleWave\");\n$RefreshReg$(_c3, \"AnimationCanvas\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["React","useRef","useMemo","Canvas","useFrame","useLoader","OrbitControls","THREE","circleImg","jsxDEV","_jsxDEV","CameraControls","autoRotate","autoRotateSpeed","fileName","_jsxFileName","lineNumber","columnNumber","_c","ParticleWave","_s","pointsRef","imgTex","TextureLoader","count","radius","height","turns","speed","noise","x","y","z","Math","sin","positions","i","t","angle","PI","cos","random","push","Float32Array","clock","time","getElapsedTime","positionsArray","current","array","i3","noiseScale","noiseX","noiseY","noiseZ","needsUpdate","frustumCulled","children","ref","attach","length","itemSize","map","color","size","sizeAttenuation","transparent","opacity","blending","AdditiveBlending","_c2","AnimationCanvas","camera","position","fov","args","intensity","_c3","App","className","_c4","$RefreshReg$"],"sources":["/Users/kasaikazunobu/project/ai/babel/ripple/3d-ripple-animation/src/App.js"],"sourcesContent":["// App.js\nimport React, { useRef, useMemo } from 'react';\nimport { Canvas, useFrame, useLoader } from '@react-three/fiber';\nimport { OrbitControls } from '@react-three/drei';\nimport * as THREE from 'three';\nimport circleImg from './assets/circle.png'; // テクスチャのパスを正しく設定\nimport './App.css';\n\nfunction CameraControls() {\n  return <OrbitControls autoRotate autoRotateSpeed={-0.2} />;\n}\n\nfunction ParticleWave() {\n  const pointsRef = useRef();\n  const imgTex = useLoader(THREE.TextureLoader, circleImg);\n\n  const count = 10000; // 粒子の数を増やす\n  const radius = 2; // 螺旋の半径\n  const height = 4; // 螺旋の高さ\n  const turns = 3; // 螺旋の巻数\n  const speed = 0.2; // 粒子の移動速度\n\n  // パーリンノイズ関数（簡易版）\n  const noise = (x, y, z) => {\n    return (Math.sin(x * 1.5 + y * 2.3 + z * 3.7) +\n            Math.sin(x * 2.5 + y * 6.7 + z * 1.3) +\n            Math.sin(x * 3.5 + y * 4.7 + z * 2.3)) / 3;\n  };\n\n  // 粒子の初期位置を計算\n  const positions = useMemo(() => {\n    const positions = [];\n    for (let i = 0; i < count; i++) {\n      const t = i / count;\n      const angle = 2 * Math.PI * turns * t;\n      const x = radius * Math.cos(angle) + (Math.random() - 0.5) * 0.5;\n      const y = height * (0.5 - t) + (Math.random() - 0.5) * 0.5;\n      const z = radius * Math.sin(angle) + (Math.random() - 0.5) * 0.5;\n      positions.push(x, y, z);\n    }\n    return new Float32Array(positions);\n  }, [count, radius, height, turns]);\n\n  // フレームごとに粒子の位置を更新\n  useFrame(({ clock }) => {\n    const time = clock.getElapsedTime();\n    const positionsArray = pointsRef.current.array;\n    for (let i = 0; i < count; i++) {\n      const i3 = i * 3;\n      const t = (i / count + time * speed) % 1;\n      const angle = 2 * Math.PI * turns * t;\n      const noiseScale = 0.5;\n      const noiseX = noise(t * 10, time * 0.5, 0) * noiseScale;\n      const noiseY = noise(t * 10, time * 0.5, 1000) * noiseScale;\n      const noiseZ = noise(t * 10, time * 0.5, 2000) * noiseScale;\n      positionsArray[i3] = radius * Math.cos(angle) + noiseX;\n      positionsArray[i3 + 1] = height * (0.5 - t) + noiseY;\n      positionsArray[i3 + 2] = radius * Math.sin(angle) + noiseZ;\n    }\n    pointsRef.current.needsUpdate = true;\n  });\n\n  return (\n    <points frustumCulled={false}>\n      <bufferGeometry>\n        <bufferAttribute\n          ref={pointsRef}\n          attach=\"attributes-position\"\n          array={positions}\n          count={positions.length / 3}\n          itemSize={3}\n        />\n      </bufferGeometry>\n      <pointsMaterial\n        map={imgTex}\n        color={0xffffff}\n        size={0.03}\n        sizeAttenuation\n        transparent={true}\n        opacity={0.6}\n        blending={THREE.AdditiveBlending}\n      />\n    </points>\n  );\n}\n\nfunction AnimationCanvas() {\n  return (\n    <Canvas camera={{ position: [0, 0, 10], fov: 75 }}>\n      <color attach=\"background\" args={['#000']} />\n      <ambientLight intensity={0.5} />\n      <pointLight position={[10, 10, 10]} />\n      <CameraControls />\n      <ParticleWave />\n    </Canvas>\n  );\n}\n\nfunction App() {\n  return (\n    <div className=\"anim\">\n      <AnimationCanvas />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}