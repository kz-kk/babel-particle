{"ast":null,"code":"var _jsxFileName = \"/Users/kasaikazunobu/project/ai/babel/ripple/3d-ripple-animation/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useRef, useMemo } from 'react';\nimport { Canvas, useFrame, useLoader } from '@react-three/fiber';\nimport { OrbitControls } from '@react-three/drei';\nimport * as THREE from 'three';\nimport circleImg from './assets/circle.png'; // テクスチャのパスを正しく設定\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CameraControls() {\n  return /*#__PURE__*/_jsxDEV(OrbitControls, {\n    autoRotate: true,\n    autoRotateSpeed: -0.2\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 10\n  }, this);\n}\n_c = CameraControls;\nfunction ParticleWave() {\n  _s();\n  const pointsRef = useRef();\n  const imgTex = useLoader(THREE.TextureLoader, circleImg); // テクスチャの読み込み\n\n  const count = 50; // グリッドのサイズ（100x100）\n  const separation = 0.5; // 点と点の間隔を狭める\n  const amplitude = 1.5; // 波の振幅を減少\n  const frequency = 1.0; // 波の周波数を調整\n\n  // ポイントの初期位置と色を計算\n  const {\n    positions,\n    colors\n  } = useMemo(() => {\n    const positions = [];\n    const colors = [];\n    for (let xi = 0; xi < count; xi++) {\n      for (let zi = 0; zi < count; zi++) {\n        const x = separation * (xi - count / 2);\n        const z = separation * (zi - count / 2);\n        const y = 0; // 初期Y座標\n        positions.push(x, y, z);\n\n        // 色のグラデーション（例: 青から赤へ）\n        const hue = (x + z) / (count * separation) * 0.5; // 0から0.5の範囲\n        const color = new THREE.Color();\n        color.setHSL(hue, 1.0, 0.5);\n        colors.push(color.r, color.g, color.b);\n      }\n    }\n    return {\n      positions: new Float32Array(positions),\n      colors: new Float32Array(colors)\n    };\n  }, [count, separation]);\n\n  // フレームごとにY座標を更新\n  useFrame(({\n    clock\n  }) => {\n    const time = clock.getElapsedTime();\n    const positionsArray = pointsRef.current.array;\n    let i = 0;\n    for (let xi = 0; xi < count; xi++) {\n      for (let zi = 0; zi < count; zi++) {\n        const x = separation * (xi - count / 2);\n        const z = separation * (zi - count / 2);\n        // 波の関数（より平面的なサイン波）\n        positionsArray[i + 1] = Math.sin((x + z + time * frequency) * 0.5) * amplitude;\n        i += 3;\n      }\n    }\n    pointsRef.current.needsUpdate = true;\n  });\n  return /*#__PURE__*/_jsxDEV(\"points\", {\n    frustumCulled: false,\n    children: [/*#__PURE__*/_jsxDEV(\"bufferGeometry\", {\n      children: [/*#__PURE__*/_jsxDEV(\"bufferAttribute\", {\n        ref: pointsRef,\n        attach: \"attributes-position\",\n        array: positions,\n        count: positions.length / 3,\n        itemSize: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"bufferAttribute\", {\n        attach: \"attributes-color\",\n        array: colors,\n        count: colors.length / 3,\n        itemSize: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointsMaterial\", {\n      vertexColors: true // 頂点ごとの色を使用\n      ,\n      map: imgTex // テクスチャを適用\n      ,\n      color: 0xffffff // 白色に設定（テクスチャの色が反映されやすい）\n      ,\n      size: 0.05 // 粒子のサイズをさらに小さく設定\n      ,\n      sizeAttenuation: true,\n      transparent: true,\n      opacity: 0.8,\n      blending: THREE.AdditiveBlending // 加算ブレンディングを使用\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(ParticleWave, \"vWSTeN1SYmB//4xpL+zqC/9mApI=\", false, function () {\n  return [useLoader, useFrame];\n});\n_c2 = ParticleWave;\nfunction AnimationCanvas() {\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    camera: {\n      position: [0, 5, 20],\n      fov: 75\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"color\", {\n      attach: \"background\",\n      args: ['#000']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ambientLight\", {\n      intensity: 0.3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n      position: [10, 10, 10]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CameraControls, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ParticleWave, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_c3 = AnimationCanvas;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"anim\",\n    children: /*#__PURE__*/_jsxDEV(AnimationCanvas, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"CameraControls\");\n$RefreshReg$(_c2, \"ParticleWave\");\n$RefreshReg$(_c3, \"AnimationCanvas\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["React","useRef","useMemo","Canvas","useFrame","useLoader","OrbitControls","THREE","circleImg","jsxDEV","_jsxDEV","CameraControls","autoRotate","autoRotateSpeed","fileName","_jsxFileName","lineNumber","columnNumber","_c","ParticleWave","_s","pointsRef","imgTex","TextureLoader","count","separation","amplitude","frequency","positions","colors","xi","zi","x","z","y","push","hue","color","Color","setHSL","r","g","b","Float32Array","clock","time","getElapsedTime","positionsArray","current","array","i","Math","sin","needsUpdate","frustumCulled","children","ref","attach","length","itemSize","vertexColors","map","size","sizeAttenuation","transparent","opacity","blending","AdditiveBlending","_c2","AnimationCanvas","camera","position","fov","args","intensity","_c3","App","className","_c4","$RefreshReg$"],"sources":["/Users/kasaikazunobu/project/ai/babel/ripple/3d-ripple-animation/src/App.js"],"sourcesContent":["// App.js\nimport React, { useRef, useMemo } from 'react';\nimport { Canvas, useFrame, useLoader } from '@react-three/fiber';\nimport { OrbitControls } from '@react-three/drei';\nimport * as THREE from 'three';\nimport circleImg from './assets/circle.png'; // テクスチャのパスを正しく設定\nimport './App.css';\n\nfunction CameraControls() {\n  return <OrbitControls autoRotate autoRotateSpeed={-0.2} />;\n}\n\nfunction ParticleWave() {\n  const pointsRef = useRef();\n  const imgTex = useLoader(THREE.TextureLoader, circleImg); // テクスチャの読み込み\n\n  const count = 50; // グリッドのサイズ（100x100）\n  const separation = 0.5; // 点と点の間隔を狭める\n  const amplitude = 1.5; // 波の振幅を減少\n  const frequency = 1.0; // 波の周波数を調整\n\n  // ポイントの初期位置と色を計算\n  const { positions, colors } = useMemo(() => {\n    const positions = [];\n    const colors = [];\n    for (let xi = 0; xi < count; xi++) {\n      for (let zi = 0; zi < count; zi++) {\n        const x = separation * (xi - count / 2);\n        const z = separation * (zi - count / 2);\n        const y = 0; // 初期Y座標\n        positions.push(x, y, z);\n\n        // 色のグラデーション（例: 青から赤へ）\n        const hue = (x + z) / (count * separation) * 0.5; // 0から0.5の範囲\n        const color = new THREE.Color();\n        color.setHSL(hue, 1.0, 0.5);\n        colors.push(color.r, color.g, color.b);\n      }\n    }\n    return { positions: new Float32Array(positions), colors: new Float32Array(colors) };\n  }, [count, separation]);\n\n  // フレームごとにY座標を更新\n  useFrame(({ clock }) => {\n    const time = clock.getElapsedTime();\n    const positionsArray = pointsRef.current.array;\n    let i = 0;\n    for (let xi = 0; xi < count; xi++) {\n      for (let zi = 0; zi < count; zi++) {\n        const x = separation * (xi - count / 2);\n        const z = separation * (zi - count / 2);\n        // 波の関数（より平面的なサイン波）\n        positionsArray[i + 1] = Math.sin((x + z + time * frequency) * 0.5) * amplitude;\n        i += 3;\n      }\n    }\n    pointsRef.current.needsUpdate = true;\n  });\n\n  return (\n    <points frustumCulled={false}>\n      <bufferGeometry>\n        <bufferAttribute\n          ref={pointsRef}\n          attach=\"attributes-position\"\n          array={positions}\n          count={positions.length / 3}\n          itemSize={3}\n        />\n        <bufferAttribute\n          attach=\"attributes-color\"\n          array={colors}\n          count={colors.length / 3}\n          itemSize={3}\n        />\n      </bufferGeometry>\n      <pointsMaterial\n        vertexColors // 頂点ごとの色を使用\n        map={imgTex} // テクスチャを適用\n        color={0xffffff} // 白色に設定（テクスチャの色が反映されやすい）\n        size={0.05} // 粒子のサイズをさらに小さく設定\n        sizeAttenuation\n        transparent={true}\n        opacity={0.8}\n        blending={THREE.AdditiveBlending} // 加算ブレンディングを使用\n      />\n    </points>\n  );\n}\n\nfunction AnimationCanvas() {\n  return (\n    <Canvas camera={{ position: [0, 5, 20], fov: 75 }}>\n      <color attach=\"background\" args={['#000']} />\n      <ambientLight intensity={0.3} />\n      <pointLight position={[10, 10, 10]} />\n      <CameraControls />\n      {/* <axesHelper args={[5]} /> */}\n      {/* <gridHelper args={[50, 50]} /> */}\n      <ParticleWave />\n    </Canvas>\n  );\n}\n\nfunction App() {\n  return (\n    <div className=\"anim\">\n      <AnimationCanvas />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,OAAO,QAAQ,OAAO;AAC9C,SAASC,MAAM,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,oBAAoB;AAChE,SAASC,aAAa,QAAQ,mBAAmB;AACjD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,OAAOC,SAAS,MAAM,qBAAqB,CAAC,CAAC;AAC7C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,cAAcA,CAAA,EAAG;EACxB,oBAAOD,OAAA,CAACJ,aAAa;IAACM,UAAU;IAACC,eAAe,EAAE,CAAC;EAAI;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC5D;AAACC,EAAA,GAFQP,cAAc;AAIvB,SAASQ,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAMC,SAAS,GAAGpB,MAAM,CAAC,CAAC;EAC1B,MAAMqB,MAAM,GAAGjB,SAAS,CAACE,KAAK,CAACgB,aAAa,EAAEf,SAAS,CAAC,CAAC,CAAC;;EAE1D,MAAMgB,KAAK,GAAG,EAAE,CAAC,CAAC;EAClB,MAAMC,UAAU,GAAG,GAAG,CAAC,CAAC;EACxB,MAAMC,SAAS,GAAG,GAAG,CAAC,CAAC;EACvB,MAAMC,SAAS,GAAG,GAAG,CAAC,CAAC;;EAEvB;EACA,MAAM;IAAEC,SAAS;IAAEC;EAAO,CAAC,GAAG3B,OAAO,CAAC,MAAM;IAC1C,MAAM0B,SAAS,GAAG,EAAE;IACpB,MAAMC,MAAM,GAAG,EAAE;IACjB,KAAK,IAAIC,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGN,KAAK,EAAEM,EAAE,EAAE,EAAE;MACjC,KAAK,IAAIC,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGP,KAAK,EAAEO,EAAE,EAAE,EAAE;QACjC,MAAMC,CAAC,GAAGP,UAAU,IAAIK,EAAE,GAAGN,KAAK,GAAG,CAAC,CAAC;QACvC,MAAMS,CAAC,GAAGR,UAAU,IAAIM,EAAE,GAAGP,KAAK,GAAG,CAAC,CAAC;QACvC,MAAMU,CAAC,GAAG,CAAC,CAAC,CAAC;QACbN,SAAS,CAACO,IAAI,CAACH,CAAC,EAAEE,CAAC,EAAED,CAAC,CAAC;;QAEvB;QACA,MAAMG,GAAG,GAAG,CAACJ,CAAC,GAAGC,CAAC,KAAKT,KAAK,GAAGC,UAAU,CAAC,GAAG,GAAG,CAAC,CAAC;QAClD,MAAMY,KAAK,GAAG,IAAI9B,KAAK,CAAC+B,KAAK,CAAC,CAAC;QAC/BD,KAAK,CAACE,MAAM,CAACH,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QAC3BP,MAAM,CAACM,IAAI,CAACE,KAAK,CAACG,CAAC,EAAEH,KAAK,CAACI,CAAC,EAAEJ,KAAK,CAACK,CAAC,CAAC;MACxC;IACF;IACA,OAAO;MAAEd,SAAS,EAAE,IAAIe,YAAY,CAACf,SAAS,CAAC;MAAEC,MAAM,EAAE,IAAIc,YAAY,CAACd,MAAM;IAAE,CAAC;EACrF,CAAC,EAAE,CAACL,KAAK,EAAEC,UAAU,CAAC,CAAC;;EAEvB;EACArB,QAAQ,CAAC,CAAC;IAAEwC;EAAM,CAAC,KAAK;IACtB,MAAMC,IAAI,GAAGD,KAAK,CAACE,cAAc,CAAC,CAAC;IACnC,MAAMC,cAAc,GAAG1B,SAAS,CAAC2B,OAAO,CAACC,KAAK;IAC9C,IAAIC,CAAC,GAAG,CAAC;IACT,KAAK,IAAIpB,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGN,KAAK,EAAEM,EAAE,EAAE,EAAE;MACjC,KAAK,IAAIC,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGP,KAAK,EAAEO,EAAE,EAAE,EAAE;QACjC,MAAMC,CAAC,GAAGP,UAAU,IAAIK,EAAE,GAAGN,KAAK,GAAG,CAAC,CAAC;QACvC,MAAMS,CAAC,GAAGR,UAAU,IAAIM,EAAE,GAAGP,KAAK,GAAG,CAAC,CAAC;QACvC;QACAuB,cAAc,CAACG,CAAC,GAAG,CAAC,CAAC,GAAGC,IAAI,CAACC,GAAG,CAAC,CAACpB,CAAC,GAAGC,CAAC,GAAGY,IAAI,GAAGlB,SAAS,IAAI,GAAG,CAAC,GAAGD,SAAS;QAC9EwB,CAAC,IAAI,CAAC;MACR;IACF;IACA7B,SAAS,CAAC2B,OAAO,CAACK,WAAW,GAAG,IAAI;EACtC,CAAC,CAAC;EAEF,oBACE3C,OAAA;IAAQ4C,aAAa,EAAE,KAAM;IAAAC,QAAA,gBAC3B7C,OAAA;MAAA6C,QAAA,gBACE7C,OAAA;QACE8C,GAAG,EAAEnC,SAAU;QACfoC,MAAM,EAAC,qBAAqB;QAC5BR,KAAK,EAAErB,SAAU;QACjBJ,KAAK,EAAEI,SAAS,CAAC8B,MAAM,GAAG,CAAE;QAC5BC,QAAQ,EAAE;MAAE;QAAA7C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CAAC,eACFP,OAAA;QACE+C,MAAM,EAAC,kBAAkB;QACzBR,KAAK,EAAEpB,MAAO;QACdL,KAAK,EAAEK,MAAM,CAAC6B,MAAM,GAAG,CAAE;QACzBC,QAAQ,EAAE;MAAE;QAAA7C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACY,CAAC,eACjBP,OAAA;MACEkD,YAAY,OAAC;MAAA;MACbC,GAAG,EAAEvC,MAAO,CAAC;MAAA;MACbe,KAAK,EAAE,QAAS,CAAC;MAAA;MACjByB,IAAI,EAAE,IAAK,CAAC;MAAA;MACZC,eAAe;MACfC,WAAW,EAAE,IAAK;MAClBC,OAAO,EAAE,GAAI;MACbC,QAAQ,EAAE3D,KAAK,CAAC4D,gBAAiB,CAAC;IAAA;MAAArD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEb;AAACG,EAAA,CA5EQD,YAAY;EAAA,QAEJd,SAAS,EA6BxBD,QAAQ;AAAA;AAAAgE,GAAA,GA/BDjD,YAAY;AA8ErB,SAASkD,eAAeA,CAAA,EAAG;EACzB,oBACE3D,OAAA,CAACP,MAAM;IAACmE,MAAM,EAAE;MAAEC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;MAAEC,GAAG,EAAE;IAAG,CAAE;IAAAjB,QAAA,gBAChD7C,OAAA;MAAO+C,MAAM,EAAC,YAAY;MAACgB,IAAI,EAAE,CAAC,MAAM;IAAE;MAAA3D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7CP,OAAA;MAAcgE,SAAS,EAAE;IAAI;MAAA5D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChCP,OAAA;MAAY6D,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE;IAAE;MAAAzD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtCP,OAAA,CAACC,cAAc;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAGlBP,OAAA,CAACS,YAAY;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEb;AAAC0D,GAAA,GAZQN,eAAe;AAcxB,SAASO,GAAGA,CAAA,EAAG;EACb,oBACElE,OAAA;IAAKmE,SAAS,EAAC,MAAM;IAAAtB,QAAA,eACnB7C,OAAA,CAAC2D,eAAe;MAAAvD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAEV;AAAC6D,GAAA,GANQF,GAAG;AAQZ,eAAeA,GAAG;AAAC,IAAA1D,EAAA,EAAAkD,GAAA,EAAAO,GAAA,EAAAG,GAAA;AAAAC,YAAA,CAAA7D,EAAA;AAAA6D,YAAA,CAAAX,GAAA;AAAAW,YAAA,CAAAJ,GAAA;AAAAI,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}