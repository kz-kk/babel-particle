{"ast":null,"code":"var _jsxFileName = \"/Users/kasaikazunobu/project/ai/babel/babel-project/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\n// App.js\nimport React, { useRef, useMemo, useEffect, useState } from 'react';\nimport { Canvas, useFrame, useLoader, useThree } from '@react-three/fiber';\nimport { OrbitControls } from '@react-three/drei';\nimport * as THREE from 'three';\nimport { createNoise3D } from 'simplex-noise';\nimport ParticleText from './components/ParticleText';\nimport { Vector3 } from 'three';\nimport circleImg from './assets/circle.png';\nimport './App.css';\n\n// ... 残りのコード ...\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CameraControls() {\n  return /*#__PURE__*/_jsxDEV(OrbitControls, {\n    autoRotate: true,\n    autoRotateSpeed: -0.2\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 10\n  }, this);\n}\n_c = CameraControls;\nfunction ParticleWave() {\n  _s();\n  const pointsRef = useRef();\n  const imgTex = useLoader(THREE.TextureLoader, circleImg);\n  const noise3D = useMemo(() => createNoise3D(), []);\n  const count = 80000;\n  const radius = 5;\n  const height = 10;\n  const speed = 0.8;\n  const spiralSpeed = 0.3;\n  const flowIntensity = 0.05;\n  const magicCirclePositions = useMemo(() => {\n    // 魔法陣の形を定義（例: 複数の同心円）\n    const positions = [];\n    const circles = 5;\n    const pointsPerCircle = count / circles;\n    for (let i = 0; i < circles; i++) {\n      const circleRadius = radius * (i + 1) / circles;\n      for (let j = 0; j < pointsPerCircle; j++) {\n        const angle = j / pointsPerCircle * Math.PI * 2;\n        const x = circleRadius * Math.cos(angle);\n        const z = circleRadius * Math.sin(angle);\n        const y = (Math.random() - 0.5) * height * 0.1; // 少し厚みを持たせる\n        positions.push(new Vector3(x, y, z));\n      }\n    }\n    return positions;\n  }, [count, radius, height]);\n  const [positions, setPositions] = useState(() => {\n    const initialPositions = new Float32Array(count * 3);\n    for (let i = 0; i < count; i++) {\n      const theta = Math.random() * Math.PI * 2;\n      const phi = Math.acos(2 * Math.random() - 1);\n      const r = Math.pow(Math.random(), 0.3) * radius;\n      initialPositions[i * 3] = r * Math.sin(phi) * Math.cos(theta);\n      initialPositions[i * 3 + 1] = (Math.random() * 2 - 1) * height * 0.5;\n      initialPositions[i * 3 + 2] = r * Math.sin(phi) * Math.sin(theta);\n    }\n    return initialPositions;\n  });\n  const [animationState, setAnimationState] = useState('wave');\n  const animationTimer = useRef(null);\n  useEffect(() => {\n    const switchAnimation = () => {\n      setAnimationState(prev => prev === 'wave' ? 'magicCircle' : 'wave');\n    };\n    animationTimer.current = setInterval(switchAnimation, 10000); // 10秒ごとに切り替え\n\n    return () => clearInterval(animationTimer.current);\n  }, []);\n  useFrame(({\n    clock\n  }) => {\n    const time = clock.getElapsedTime();\n    const positionsArray = pointsRef.current.array;\n    for (let i = 0; i < count; i++) {\n      const i3 = i * 3;\n      let x = positionsArray[i3];\n      let y = positionsArray[i3 + 1];\n      let z = positionsArray[i3 + 2];\n      if (animationState === 'wave') {\n        // 既存の波のアニメーション\n        const noise = noise3D(x * 0.5, y * 0.5, z * 0.5 + time * 0.2) * flowIntensity;\n        const angle = Math.atan2(z, x) + spiralSpeed * 0.02 + noise;\n        const r = Math.sqrt(x * x + z * z);\n        x = r * Math.cos(angle);\n        z = r * Math.sin(angle);\n        y += speed * 0.02 * (1 + noise);\n        if (y > height / 2) {\n          y = -height / 2;\n          const newTheta = Math.random() * Math.PI * 2;\n          const newPhi = Math.acos(2 * Math.random() - 1);\n          const newR = Math.random() * radius;\n          x = newR * Math.sin(newPhi) * Math.cos(newTheta);\n          z = newR * Math.sin(newPhi) * Math.sin(newTheta);\n        }\n      } else {\n        // 魔法陣のアニメーション\n        const targetPosition = magicCirclePositions[i];\n        const lerpFactor = 0.05; // 補間係数（0.0 - 1.0）\n        x += (targetPosition.x - x) * lerpFactor;\n        y += (targetPosition.y - y) * lerpFactor;\n        z += (targetPosition.z - z) * lerpFactor;\n      }\n      positionsArray[i3] = x;\n      positionsArray[i3 + 1] = y;\n      positionsArray[i3 + 2] = z;\n    }\n    pointsRef.current.needsUpdate = true;\n  });\n  return /*#__PURE__*/_jsxDEV(\"points\", {\n    frustumCulled: false,\n    children: [/*#__PURE__*/_jsxDEV(\"bufferGeometry\", {\n      children: /*#__PURE__*/_jsxDEV(\"bufferAttribute\", {\n        ref: pointsRef,\n        attach: \"attributes-position\",\n        array: positions,\n        count: positions.length / 3,\n        itemSize: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointsMaterial\", {\n      map: imgTex,\n      color: 0x66ffff,\n      size: 0.01 // サイズを0.02から0.01に減少\n      ,\n      sizeAttenuation: true,\n      transparent: true,\n      opacity: 0.3,\n      blending: THREE.AdditiveBlending\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n_s(ParticleWave, \"6vlDu8sdKoE2WYtpx7lYJ7phaqk=\", false, function () {\n  return [useLoader, useFrame];\n});\n_c2 = ParticleWave;\nfunction ParticleBand({\n  yPosition,\n  count = 100000,\n  height = 0.4,\n  color = 0x66ffff\n}) {\n  _s2();\n  // heightを0.4に増加\n  const pointsRef = useRef();\n  const imgTex = useLoader(THREE.TextureLoader, circleImg);\n  const {\n    viewport\n  } = useThree();\n  const noise3D = useMemo(() => createNoise3D(), []);\n  const positions = useMemo(() => {\n    const positions = [];\n    const aspect = viewport.width / viewport.height;\n    const width = viewport.width * 1.2; // 幅を1.2倍に調整して密度を増加\n    const depth = width / aspect;\n    for (let i = 0; i < count; i++) {\n      const x = (Math.random() - 0.5) * width;\n      const y = yPosition + (Math.random() - 0.5) * height * 2; // 高さの範囲をさらに拡大\n      const z = (Math.random() - 0.5) * depth;\n      positions.push(x, y, z);\n    }\n    return new Float32Array(positions);\n  }, [count, height, yPosition, viewport.width, viewport.height]);\n  useFrame(({\n    clock\n  }) => {\n    const time = clock.getElapsedTime();\n    const positionsArray = pointsRef.current.array;\n    const width = viewport.width * 1.5;\n    const aspect = viewport.width / viewport.height;\n    const depth = width / aspect;\n    for (let i = 0; i < count; i++) {\n      const i3 = i * 3;\n      let x = positionsArray[i3];\n      let y = positionsArray[i3 + 1];\n      let z = positionsArray[i3 + 2];\n\n      // ノイズを使用してより複雑な動きを生成\n      const noiseX = noise3D(x * 0.1, y * 0.1, time * 0.1) * 0.02;\n      const noiseY = noise3D(y * 0.1, z * 0.1, time * 0.1) * 0.02;\n      const noiseZ = noise3D(z * 0.1, x * 0.1, time * 0.1) * 0.02;\n      x += noiseX;\n      y += noiseY + Math.sin(x * 0.3 + time * 0.2) * 0.005; // 上下の動きを追加\n      z += noiseZ;\n\n      // 範囲外に出た粒子をリセット\n      if (x < -width / 2 || x > width / 2 || y < yPosition - height || y > yPosition + height || z < -depth / 2 || z > depth / 2) {\n        x = (Math.random() - 0.5) * width;\n        y = yPosition + (Math.random() - 0.5) * height * 2;\n        z = (Math.random() - 0.5) * depth;\n      }\n      positionsArray[i3] = x;\n      positionsArray[i3 + 1] = y;\n      positionsArray[i3 + 2] = z;\n    }\n    pointsRef.current.needsUpdate = true;\n  });\n  return /*#__PURE__*/_jsxDEV(\"points\", {\n    frustumCulled: false,\n    children: [/*#__PURE__*/_jsxDEV(\"bufferGeometry\", {\n      children: /*#__PURE__*/_jsxDEV(\"bufferAttribute\", {\n        ref: pointsRef,\n        attach: \"attributes-position\",\n        array: positions,\n        count: positions.length / 3,\n        itemSize: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointsMaterial\", {\n      map: imgTex,\n      color: color,\n      size: 0.008 // サイズを0.015から0.008に減少\n      ,\n      sizeAttenuation: true,\n      transparent: true,\n      opacity: 0.5 // 不透明度を上げて、より濃く見せる\n      ,\n      blending: THREE.AdditiveBlending\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n}\n_s2(ParticleBand, \"DR82PxGpIHJgRQvCaN4D7HGMsf8=\", false, function () {\n  return [useLoader, useThree, useFrame];\n});\n_c3 = ParticleBand;\nfunction AnimationCanvas() {\n  _s3();\n  const [canvasSize, setCanvasSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n  const [showLogo, setShowLogo] = useState(false);\n  const [showButtons, setShowButtons] = useState(false); // 新しい state を追加\n  const [isHovered, setIsHovered] = useState(false);\n  useEffect(() => {\n    const handleResize = () => {\n      setCanvasSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    };\n    window.addEventListener('resize', handleResize);\n    const logoTimer = setTimeout(() => setShowLogo(true), 1000);\n    const buttonTimer = setTimeout(() => setShowButtons(true), 3000); // ボタンを遅れて表示\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      clearTimeout(logoTimer);\n      clearTimeout(buttonTimer);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Canvas, {\n      camera: {\n        position: [0, 0, 7],\n        fov: 75\n      },\n      style: {\n        width: canvasSize.width,\n        height: canvasSize.height\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"color\", {\n        attach: \"background\",\n        args: ['#000']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ambientLight\", {\n        intensity: 0.5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n        position: [10, 10, 10]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CameraControls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ParticleWave, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ParticleBand, {\n        yPosition: 8.5,\n        color: 0x66ffff,\n        count: 50000,\n        height: 0.4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ParticleBand, {\n        yPosition: -8.5,\n        color: 0x66ffff,\n        count: 50000,\n        height: 0.4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: `logo ${showLogo ? 'visible' : ''} ${isHovered ? 'hovered' : ''}`\n        // onMouseEnter={() => setIsHovered(true)}\n        // onMouseLeave={() => setIsHovered(false)}\n        ,\n        children: \"Babel & Zoltraak\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: `leed ${showLogo ? 'visible' : ''}`,\n        children: \"\\u8A00\\u8A9E\\u3092\\u8D85\\u3048\\u3001\\u6587\\u5316\\u3092\\u7E4B\\u3050 \\u65B0\\u305F\\u306A\\u4E16\\u754C\\u306E\\u5275\\u9020\\u3078\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `button-container ${showLogo ? 'visible' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-button\",\n          children: \"Babel Editor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-button\",\n          children: \"System List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s3(AnimationCanvas, \"Btlo/NZA9IhcKQFrgcztzzJjCMs=\");\n_c4 = AnimationCanvas;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"anim\",\n    children: /*#__PURE__*/_jsxDEV(AnimationCanvas, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 289,\n    columnNumber: 5\n  }, this);\n}\n_c5 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"CameraControls\");\n$RefreshReg$(_c2, \"ParticleWave\");\n$RefreshReg$(_c3, \"ParticleBand\");\n$RefreshReg$(_c4, \"AnimationCanvas\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"names":["React","useRef","useMemo","useEffect","useState","Canvas","useFrame","useLoader","useThree","OrbitControls","THREE","createNoise3D","ParticleText","Vector3","circleImg","jsxDEV","_jsxDEV","Fragment","_Fragment","CameraControls","autoRotate","autoRotateSpeed","fileName","_jsxFileName","lineNumber","columnNumber","_c","ParticleWave","_s","pointsRef","imgTex","TextureLoader","noise3D","count","radius","height","speed","spiralSpeed","flowIntensity","magicCirclePositions","positions","circles","pointsPerCircle","i","circleRadius","j","angle","Math","PI","x","cos","z","sin","y","random","push","setPositions","initialPositions","Float32Array","theta","phi","acos","r","pow","animationState","setAnimationState","animationTimer","switchAnimation","prev","current","setInterval","clearInterval","clock","time","getElapsedTime","positionsArray","array","i3","noise","atan2","sqrt","newTheta","newPhi","newR","targetPosition","lerpFactor","needsUpdate","frustumCulled","children","ref","attach","length","itemSize","map","color","size","sizeAttenuation","transparent","opacity","blending","AdditiveBlending","_c2","ParticleBand","yPosition","_s2","viewport","aspect","width","depth","noiseX","noiseY","noiseZ","_c3","AnimationCanvas","_s3","canvasSize","setCanvasSize","window","innerWidth","innerHeight","showLogo","setShowLogo","showButtons","setShowButtons","isHovered","setIsHovered","handleResize","addEventListener","logoTimer","setTimeout","buttonTimer","removeEventListener","clearTimeout","camera","position","fov","style","args","intensity","className","_c4","App","_c5","$RefreshReg$"],"sources":["/Users/kasaikazunobu/project/ai/babel/babel-project/src/App.js"],"sourcesContent":["// App.js\nimport React, { useRef, useMemo, useEffect, useState } from 'react';\nimport { Canvas, useFrame, useLoader, useThree } from '@react-three/fiber';\nimport { OrbitControls } from '@react-three/drei';\nimport * as THREE from 'three';\nimport { createNoise3D } from 'simplex-noise';\nimport ParticleText from './components/ParticleText';\nimport { Vector3 } from 'three';\n\nimport circleImg from './assets/circle.png';\nimport './App.css';\n\n// ... 残りのコード ...\n\nfunction CameraControls() {\n  return <OrbitControls autoRotate autoRotateSpeed={-0.2} />;\n}\n\nfunction ParticleWave() {\n  const pointsRef = useRef();\n  const imgTex = useLoader(THREE.TextureLoader, circleImg);\n  const noise3D = useMemo(() => createNoise3D(), []);\n\n  const count = 80000;\n  const radius = 5;\n  const height = 10;\n  const speed = 0.8;\n  const spiralSpeed = 0.3;\n  const flowIntensity = 0.05;\n\n  const magicCirclePositions = useMemo(() => {\n    // 魔法陣の形を定義（例: 複数の同心円）\n    const positions = [];\n    const circles = 5;\n    const pointsPerCircle = count / circles;\n    \n    for (let i = 0; i < circles; i++) {\n      const circleRadius = radius * (i + 1) / circles;\n      for (let j = 0; j < pointsPerCircle; j++) {\n        const angle = (j / pointsPerCircle) * Math.PI * 2;\n        const x = circleRadius * Math.cos(angle);\n        const z = circleRadius * Math.sin(angle);\n        const y = (Math.random() - 0.5) * height * 0.1; // 少し厚みを持たせる\n        positions.push(new Vector3(x, y, z));\n      }\n    }\n    return positions;\n  }, [count, radius, height]);\n\n  const [positions, setPositions] = useState(() => {\n    const initialPositions = new Float32Array(count * 3);\n    for (let i = 0; i < count; i++) {\n      const theta = Math.random() * Math.PI * 2;\n      const phi = Math.acos(2 * Math.random() - 1);\n      const r = Math.pow(Math.random(), 0.3) * radius;\n      initialPositions[i * 3] = r * Math.sin(phi) * Math.cos(theta);\n      initialPositions[i * 3 + 1] = (Math.random() * 2 - 1) * height * 0.5;\n      initialPositions[i * 3 + 2] = r * Math.sin(phi) * Math.sin(theta);\n    }\n    return initialPositions;\n  });\n\n  const [animationState, setAnimationState] = useState('wave');\n  const animationTimer = useRef(null);\n\n  useEffect(() => {\n    const switchAnimation = () => {\n      setAnimationState(prev => prev === 'wave' ? 'magicCircle' : 'wave');\n    };\n\n    animationTimer.current = setInterval(switchAnimation, 10000); // 10秒ごとに切り替え\n\n    return () => clearInterval(animationTimer.current);\n  }, []);\n\n  useFrame(({ clock }) => {\n    const time = clock.getElapsedTime();\n    const positionsArray = pointsRef.current.array;\n\n    for (let i = 0; i < count; i++) {\n      const i3 = i * 3;\n      let x = positionsArray[i3];\n      let y = positionsArray[i3 + 1];\n      let z = positionsArray[i3 + 2];\n\n      if (animationState === 'wave') {\n        // 既存の波のアニメーション\n        const noise = noise3D(x * 0.5, y * 0.5, z * 0.5 + time * 0.2) * flowIntensity;\n        const angle = Math.atan2(z, x) + spiralSpeed * 0.02 + noise;\n        const r = Math.sqrt(x * x + z * z);\n        \n        x = r * Math.cos(angle);\n        z = r * Math.sin(angle);\n        y += speed * 0.02 * (1 + noise);\n\n        if (y > height / 2) {\n          y = -height / 2;\n          const newTheta = Math.random() * Math.PI * 2;\n          const newPhi = Math.acos(2 * Math.random() - 1);\n          const newR = Math.random() * radius;\n          x = newR * Math.sin(newPhi) * Math.cos(newTheta);\n          z = newR * Math.sin(newPhi) * Math.sin(newTheta);\n        }\n      } else {\n        // 魔法陣のアニメーション\n        const targetPosition = magicCirclePositions[i];\n        const lerpFactor = 0.05; // 補間係数（0.0 - 1.0）\n        x += (targetPosition.x - x) * lerpFactor;\n        y += (targetPosition.y - y) * lerpFactor;\n        z += (targetPosition.z - z) * lerpFactor;\n      }\n\n      positionsArray[i3] = x;\n      positionsArray[i3 + 1] = y;\n      positionsArray[i3 + 2] = z;\n    }\n\n    pointsRef.current.needsUpdate = true;\n  });\n\n  return (\n    <points frustumCulled={false}>\n      <bufferGeometry>\n        <bufferAttribute\n          ref={pointsRef}\n          attach=\"attributes-position\"\n          array={positions}\n          count={positions.length / 3}\n          itemSize={3}\n        />\n      </bufferGeometry>\n      <pointsMaterial\n        map={imgTex}\n        color={0x66ffff}\n        size={0.01} // サイズを0.02から0.01に減少\n        sizeAttenuation\n        transparent={true}\n        opacity={0.3}\n        blending={THREE.AdditiveBlending}\n      />\n    </points>\n  );\n}\n\nfunction ParticleBand({ yPosition, count = 100000, height = 0.4, color = 0x66ffff }) { // heightを0.4に増加\n  const pointsRef = useRef();\n  const imgTex = useLoader(THREE.TextureLoader, circleImg);\n  const { viewport } = useThree();\n  const noise3D = useMemo(() => createNoise3D(), []);\n\n  const positions = useMemo(() => {\n    const positions = [];\n    const aspect = viewport.width / viewport.height;\n    const width = viewport.width * 1.2; // 幅を1.2倍に調整して密度を増加\n    const depth = width / aspect;\n    for (let i = 0; i < count; i++) {\n      const x = (Math.random() - 0.5) * width;\n      const y = yPosition + (Math.random() - 0.5) * height * 2; // 高さの範囲をさらに拡大\n      const z = (Math.random() - 0.5) * depth;\n      positions.push(x, y, z);\n    }\n    return new Float32Array(positions);\n  }, [count, height, yPosition, viewport.width, viewport.height]);\n\n  useFrame(({ clock }) => {\n    const time = clock.getElapsedTime();\n    const positionsArray = pointsRef.current.array;\n    const width = viewport.width * 1.5;\n    const aspect = viewport.width / viewport.height;\n    const depth = width / aspect;\n    for (let i = 0; i < count; i++) {\n      const i3 = i * 3;\n      let x = positionsArray[i3];\n      let y = positionsArray[i3 + 1];\n      let z = positionsArray[i3 + 2];\n\n      // ノイズを使用してより複雑な動きを生成\n      const noiseX = noise3D(x * 0.1, y * 0.1, time * 0.1) * 0.02;\n      const noiseY = noise3D(y * 0.1, z * 0.1, time * 0.1) * 0.02;\n      const noiseZ = noise3D(z * 0.1, x * 0.1, time * 0.1) * 0.02;\n\n      x += noiseX;\n      y += noiseY + Math.sin(x * 0.3 + time * 0.2) * 0.005; // 上下の動きを追加\n      z += noiseZ;\n\n      // 範囲外に出た粒子をリセット\n      if (x < -width / 2 || x > width / 2 || \n          y < yPosition - height || y > yPosition + height || \n          z < -depth / 2 || z > depth / 2) {\n        x = (Math.random() - 0.5) * width;\n        y = yPosition + (Math.random() - 0.5) * height * 2;\n        z = (Math.random() - 0.5) * depth;\n      }\n\n      positionsArray[i3] = x;\n      positionsArray[i3 + 1] = y;\n      positionsArray[i3 + 2] = z;\n    }\n    pointsRef.current.needsUpdate = true;\n  });\n\n  return (\n    <points frustumCulled={false}>\n      <bufferGeometry>\n        <bufferAttribute\n          ref={pointsRef}\n          attach=\"attributes-position\"\n          array={positions}\n          count={positions.length / 3}\n          itemSize={3}\n        />\n      </bufferGeometry>\n      <pointsMaterial\n        map={imgTex}\n        color={color}\n        size={0.008} // サイズを0.015から0.008に減少\n        sizeAttenuation\n        transparent={true}\n        opacity={0.5} // 不透明度を上げて、より濃く見せる\n        blending={THREE.AdditiveBlending}\n      />\n    </points>\n  );\n}\n\nfunction AnimationCanvas() {\n  const [canvasSize, setCanvasSize] = useState({ width: window.innerWidth, height: window.innerHeight });\n  const [showLogo, setShowLogo] = useState(false);\n  const [showButtons, setShowButtons] = useState(false);  // 新しい state を追加\n  const [isHovered, setIsHovered] = useState(false);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setCanvasSize({ width: window.innerWidth, height: window.innerHeight });\n    };\n    window.addEventListener('resize', handleResize);\n\n    const logoTimer = setTimeout(() => setShowLogo(true), 1000);\n    const buttonTimer = setTimeout(() => setShowButtons(true), 3000);  // ボタンを遅れて表示\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      clearTimeout(logoTimer);\n      clearTimeout(buttonTimer);\n    };\n  }, []);\n\n  return (\n    <>\n      <Canvas camera={{ position: [0, 0, 7], fov: 75 }} style={{ width: canvasSize.width, height: canvasSize.height }}>\n        <color attach=\"background\" args={['#000']} />\n        <ambientLight intensity={0.5} />\n        <pointLight position={[10, 10, 10]} />\n        <CameraControls />\n        <ParticleWave />\n        <ParticleBand yPosition={8.5} color={0x66ffff} count={50000} height={0.4} />\n        <ParticleBand yPosition={-8.5} color={0x66ffff} count={50000} height={0.4} />\n        {/* {isHovered && (\n          <ParticleText\n            text=\"Babel & Zoltraak\"\n            font=\"Baskervville Regular\"\n            position={[0, 0, 0]}\n            scale={[0.005, 0.005, 0.005]}\n          />\n        )} */}\n      </Canvas>\n      <div className=\"overlay-content\">\n        <h1\n          className={`logo ${showLogo ? 'visible' : ''} ${isHovered ? 'hovered' : ''}`}\n          // onMouseEnter={() => setIsHovered(true)}\n          // onMouseLeave={() => setIsHovered(false)}\n        >\n          Babel & Zoltraak\n        </h1>\n        <h2 className={`leed ${showLogo ? 'visible' : ''}`}>\n          言語を超え、文化を繋ぐ 新たな世界の創造へ\n        </h2>\n        <div className={`button-container ${showLogo ? 'visible' : ''}`}>\n          <button className=\"action-button\">Babel Editor</button>\n          <button className=\"action-button\">System List</button>\n        </div>\n      </div>\n    </>\n  );\n}\n\nfunction App() {\n  return (\n    <div className=\"anim\">\n      <AnimationCanvas />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;;AAAA;AACA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,OAAO,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACnE,SAASC,MAAM,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,oBAAoB;AAC1E,SAASC,aAAa,QAAQ,mBAAmB;AACjD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,aAAa,QAAQ,eAAe;AAC7C,OAAOC,YAAY,MAAM,2BAA2B;AACpD,SAASC,OAAO,QAAQ,OAAO;AAE/B,OAAOC,SAAS,MAAM,qBAAqB;AAC3C,OAAO,WAAW;;AAElB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEA,SAASC,cAAcA,CAAA,EAAG;EACxB,oBAAOH,OAAA,CAACP,aAAa;IAACW,UAAU;IAACC,eAAe,EAAE,CAAC;EAAI;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC5D;AAACC,EAAA,GAFQP,cAAc;AAIvB,SAASQ,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAMC,SAAS,GAAG5B,MAAM,CAAC,CAAC;EAC1B,MAAM6B,MAAM,GAAGvB,SAAS,CAACG,KAAK,CAACqB,aAAa,EAAEjB,SAAS,CAAC;EACxD,MAAMkB,OAAO,GAAG9B,OAAO,CAAC,MAAMS,aAAa,CAAC,CAAC,EAAE,EAAE,CAAC;EAElD,MAAMsB,KAAK,GAAG,KAAK;EACnB,MAAMC,MAAM,GAAG,CAAC;EAChB,MAAMC,MAAM,GAAG,EAAE;EACjB,MAAMC,KAAK,GAAG,GAAG;EACjB,MAAMC,WAAW,GAAG,GAAG;EACvB,MAAMC,aAAa,GAAG,IAAI;EAE1B,MAAMC,oBAAoB,GAAGrC,OAAO,CAAC,MAAM;IACzC;IACA,MAAMsC,SAAS,GAAG,EAAE;IACpB,MAAMC,OAAO,GAAG,CAAC;IACjB,MAAMC,eAAe,GAAGT,KAAK,GAAGQ,OAAO;IAEvC,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,OAAO,EAAEE,CAAC,EAAE,EAAE;MAChC,MAAMC,YAAY,GAAGV,MAAM,IAAIS,CAAC,GAAG,CAAC,CAAC,GAAGF,OAAO;MAC/C,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,eAAe,EAAEG,CAAC,EAAE,EAAE;QACxC,MAAMC,KAAK,GAAID,CAAC,GAAGH,eAAe,GAAIK,IAAI,CAACC,EAAE,GAAG,CAAC;QACjD,MAAMC,CAAC,GAAGL,YAAY,GAAGG,IAAI,CAACG,GAAG,CAACJ,KAAK,CAAC;QACxC,MAAMK,CAAC,GAAGP,YAAY,GAAGG,IAAI,CAACK,GAAG,CAACN,KAAK,CAAC;QACxC,MAAMO,CAAC,GAAG,CAACN,IAAI,CAACO,MAAM,CAAC,CAAC,GAAG,GAAG,IAAInB,MAAM,GAAG,GAAG,CAAC,CAAC;QAChDK,SAAS,CAACe,IAAI,CAAC,IAAI1C,OAAO,CAACoC,CAAC,EAAEI,CAAC,EAAEF,CAAC,CAAC,CAAC;MACtC;IACF;IACA,OAAOX,SAAS;EAClB,CAAC,EAAE,CAACP,KAAK,EAAEC,MAAM,EAAEC,MAAM,CAAC,CAAC;EAE3B,MAAM,CAACK,SAAS,EAAEgB,YAAY,CAAC,GAAGpD,QAAQ,CAAC,MAAM;IAC/C,MAAMqD,gBAAgB,GAAG,IAAIC,YAAY,CAACzB,KAAK,GAAG,CAAC,CAAC;IACpD,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,KAAK,EAAEU,CAAC,EAAE,EAAE;MAC9B,MAAMgB,KAAK,GAAGZ,IAAI,CAACO,MAAM,CAAC,CAAC,GAAGP,IAAI,CAACC,EAAE,GAAG,CAAC;MACzC,MAAMY,GAAG,GAAGb,IAAI,CAACc,IAAI,CAAC,CAAC,GAAGd,IAAI,CAACO,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;MAC5C,MAAMQ,CAAC,GAAGf,IAAI,CAACgB,GAAG,CAAChB,IAAI,CAACO,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,GAAGpB,MAAM;MAC/CuB,gBAAgB,CAACd,CAAC,GAAG,CAAC,CAAC,GAAGmB,CAAC,GAAGf,IAAI,CAACK,GAAG,CAACQ,GAAG,CAAC,GAAGb,IAAI,CAACG,GAAG,CAACS,KAAK,CAAC;MAC7DF,gBAAgB,CAACd,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAACI,IAAI,CAACO,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAInB,MAAM,GAAG,GAAG;MACpEsB,gBAAgB,CAACd,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAGmB,CAAC,GAAGf,IAAI,CAACK,GAAG,CAACQ,GAAG,CAAC,GAAGb,IAAI,CAACK,GAAG,CAACO,KAAK,CAAC;IACnE;IACA,OAAOF,gBAAgB;EACzB,CAAC,CAAC;EAEF,MAAM,CAACO,cAAc,EAAEC,iBAAiB,CAAC,GAAG7D,QAAQ,CAAC,MAAM,CAAC;EAC5D,MAAM8D,cAAc,GAAGjE,MAAM,CAAC,IAAI,CAAC;EAEnCE,SAAS,CAAC,MAAM;IACd,MAAMgE,eAAe,GAAGA,CAAA,KAAM;MAC5BF,iBAAiB,CAACG,IAAI,IAAIA,IAAI,KAAK,MAAM,GAAG,aAAa,GAAG,MAAM,CAAC;IACrE,CAAC;IAEDF,cAAc,CAACG,OAAO,GAAGC,WAAW,CAACH,eAAe,EAAE,KAAK,CAAC,CAAC,CAAC;;IAE9D,OAAO,MAAMI,aAAa,CAACL,cAAc,CAACG,OAAO,CAAC;EACpD,CAAC,EAAE,EAAE,CAAC;EAEN/D,QAAQ,CAAC,CAAC;IAAEkE;EAAM,CAAC,KAAK;IACtB,MAAMC,IAAI,GAAGD,KAAK,CAACE,cAAc,CAAC,CAAC;IACnC,MAAMC,cAAc,GAAG9C,SAAS,CAACwC,OAAO,CAACO,KAAK;IAE9C,KAAK,IAAIjC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,KAAK,EAAEU,CAAC,EAAE,EAAE;MAC9B,MAAMkC,EAAE,GAAGlC,CAAC,GAAG,CAAC;MAChB,IAAIM,CAAC,GAAG0B,cAAc,CAACE,EAAE,CAAC;MAC1B,IAAIxB,CAAC,GAAGsB,cAAc,CAACE,EAAE,GAAG,CAAC,CAAC;MAC9B,IAAI1B,CAAC,GAAGwB,cAAc,CAACE,EAAE,GAAG,CAAC,CAAC;MAE9B,IAAIb,cAAc,KAAK,MAAM,EAAE;QAC7B;QACA,MAAMc,KAAK,GAAG9C,OAAO,CAACiB,CAAC,GAAG,GAAG,EAAEI,CAAC,GAAG,GAAG,EAAEF,CAAC,GAAG,GAAG,GAAGsB,IAAI,GAAG,GAAG,CAAC,GAAGnC,aAAa;QAC7E,MAAMQ,KAAK,GAAGC,IAAI,CAACgC,KAAK,CAAC5B,CAAC,EAAEF,CAAC,CAAC,GAAGZ,WAAW,GAAG,IAAI,GAAGyC,KAAK;QAC3D,MAAMhB,CAAC,GAAGf,IAAI,CAACiC,IAAI,CAAC/B,CAAC,GAAGA,CAAC,GAAGE,CAAC,GAAGA,CAAC,CAAC;QAElCF,CAAC,GAAGa,CAAC,GAAGf,IAAI,CAACG,GAAG,CAACJ,KAAK,CAAC;QACvBK,CAAC,GAAGW,CAAC,GAAGf,IAAI,CAACK,GAAG,CAACN,KAAK,CAAC;QACvBO,CAAC,IAAIjB,KAAK,GAAG,IAAI,IAAI,CAAC,GAAG0C,KAAK,CAAC;QAE/B,IAAIzB,CAAC,GAAGlB,MAAM,GAAG,CAAC,EAAE;UAClBkB,CAAC,GAAG,CAAClB,MAAM,GAAG,CAAC;UACf,MAAM8C,QAAQ,GAAGlC,IAAI,CAACO,MAAM,CAAC,CAAC,GAAGP,IAAI,CAACC,EAAE,GAAG,CAAC;UAC5C,MAAMkC,MAAM,GAAGnC,IAAI,CAACc,IAAI,CAAC,CAAC,GAAGd,IAAI,CAACO,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;UAC/C,MAAM6B,IAAI,GAAGpC,IAAI,CAACO,MAAM,CAAC,CAAC,GAAGpB,MAAM;UACnCe,CAAC,GAAGkC,IAAI,GAAGpC,IAAI,CAACK,GAAG,CAAC8B,MAAM,CAAC,GAAGnC,IAAI,CAACG,GAAG,CAAC+B,QAAQ,CAAC;UAChD9B,CAAC,GAAGgC,IAAI,GAAGpC,IAAI,CAACK,GAAG,CAAC8B,MAAM,CAAC,GAAGnC,IAAI,CAACK,GAAG,CAAC6B,QAAQ,CAAC;QAClD;MACF,CAAC,MAAM;QACL;QACA,MAAMG,cAAc,GAAG7C,oBAAoB,CAACI,CAAC,CAAC;QAC9C,MAAM0C,UAAU,GAAG,IAAI,CAAC,CAAC;QACzBpC,CAAC,IAAI,CAACmC,cAAc,CAACnC,CAAC,GAAGA,CAAC,IAAIoC,UAAU;QACxChC,CAAC,IAAI,CAAC+B,cAAc,CAAC/B,CAAC,GAAGA,CAAC,IAAIgC,UAAU;QACxClC,CAAC,IAAI,CAACiC,cAAc,CAACjC,CAAC,GAAGA,CAAC,IAAIkC,UAAU;MAC1C;MAEAV,cAAc,CAACE,EAAE,CAAC,GAAG5B,CAAC;MACtB0B,cAAc,CAACE,EAAE,GAAG,CAAC,CAAC,GAAGxB,CAAC;MAC1BsB,cAAc,CAACE,EAAE,GAAG,CAAC,CAAC,GAAG1B,CAAC;IAC5B;IAEAtB,SAAS,CAACwC,OAAO,CAACiB,WAAW,GAAG,IAAI;EACtC,CAAC,CAAC;EAEF,oBACEtE,OAAA;IAAQuE,aAAa,EAAE,KAAM;IAAAC,QAAA,gBAC3BxE,OAAA;MAAAwE,QAAA,eACExE,OAAA;QACEyE,GAAG,EAAE5D,SAAU;QACf6D,MAAM,EAAC,qBAAqB;QAC5Bd,KAAK,EAAEpC,SAAU;QACjBP,KAAK,EAAEO,SAAS,CAACmD,MAAM,GAAG,CAAE;QAC5BC,QAAQ,EAAE;MAAE;QAAAtE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACY,CAAC,eACjBT,OAAA;MACE6E,GAAG,EAAE/D,MAAO;MACZgE,KAAK,EAAE,QAAS;MAChBC,IAAI,EAAE,IAAK,CAAC;MAAA;MACZC,eAAe;MACfC,WAAW,EAAE,IAAK;MAClBC,OAAO,EAAE,GAAI;MACbC,QAAQ,EAAEzF,KAAK,CAAC0F;IAAiB;MAAA9E,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEb;AAACG,EAAA,CA5HQD,YAAY;EAAA,QAEJpB,SAAS,EAuDxBD,QAAQ;AAAA;AAAA+F,GAAA,GAzDD1E,YAAY;AA8HrB,SAAS2E,YAAYA,CAAC;EAAEC,SAAS;EAAEtE,KAAK,GAAG,MAAM;EAAEE,MAAM,GAAG,GAAG;EAAE2D,KAAK,GAAG;AAAS,CAAC,EAAE;EAAAU,GAAA;EAAE;EACrF,MAAM3E,SAAS,GAAG5B,MAAM,CAAC,CAAC;EAC1B,MAAM6B,MAAM,GAAGvB,SAAS,CAACG,KAAK,CAACqB,aAAa,EAAEjB,SAAS,CAAC;EACxD,MAAM;IAAE2F;EAAS,CAAC,GAAGjG,QAAQ,CAAC,CAAC;EAC/B,MAAMwB,OAAO,GAAG9B,OAAO,CAAC,MAAMS,aAAa,CAAC,CAAC,EAAE,EAAE,CAAC;EAElD,MAAM6B,SAAS,GAAGtC,OAAO,CAAC,MAAM;IAC9B,MAAMsC,SAAS,GAAG,EAAE;IACpB,MAAMkE,MAAM,GAAGD,QAAQ,CAACE,KAAK,GAAGF,QAAQ,CAACtE,MAAM;IAC/C,MAAMwE,KAAK,GAAGF,QAAQ,CAACE,KAAK,GAAG,GAAG,CAAC,CAAC;IACpC,MAAMC,KAAK,GAAGD,KAAK,GAAGD,MAAM;IAC5B,KAAK,IAAI/D,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,KAAK,EAAEU,CAAC,EAAE,EAAE;MAC9B,MAAMM,CAAC,GAAG,CAACF,IAAI,CAACO,MAAM,CAAC,CAAC,GAAG,GAAG,IAAIqD,KAAK;MACvC,MAAMtD,CAAC,GAAGkD,SAAS,GAAG,CAACxD,IAAI,CAACO,MAAM,CAAC,CAAC,GAAG,GAAG,IAAInB,MAAM,GAAG,CAAC,CAAC,CAAC;MAC1D,MAAMgB,CAAC,GAAG,CAACJ,IAAI,CAACO,MAAM,CAAC,CAAC,GAAG,GAAG,IAAIsD,KAAK;MACvCpE,SAAS,CAACe,IAAI,CAACN,CAAC,EAAEI,CAAC,EAAEF,CAAC,CAAC;IACzB;IACA,OAAO,IAAIO,YAAY,CAAClB,SAAS,CAAC;EACpC,CAAC,EAAE,CAACP,KAAK,EAAEE,MAAM,EAAEoE,SAAS,EAAEE,QAAQ,CAACE,KAAK,EAAEF,QAAQ,CAACtE,MAAM,CAAC,CAAC;EAE/D7B,QAAQ,CAAC,CAAC;IAAEkE;EAAM,CAAC,KAAK;IACtB,MAAMC,IAAI,GAAGD,KAAK,CAACE,cAAc,CAAC,CAAC;IACnC,MAAMC,cAAc,GAAG9C,SAAS,CAACwC,OAAO,CAACO,KAAK;IAC9C,MAAM+B,KAAK,GAAGF,QAAQ,CAACE,KAAK,GAAG,GAAG;IAClC,MAAMD,MAAM,GAAGD,QAAQ,CAACE,KAAK,GAAGF,QAAQ,CAACtE,MAAM;IAC/C,MAAMyE,KAAK,GAAGD,KAAK,GAAGD,MAAM;IAC5B,KAAK,IAAI/D,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,KAAK,EAAEU,CAAC,EAAE,EAAE;MAC9B,MAAMkC,EAAE,GAAGlC,CAAC,GAAG,CAAC;MAChB,IAAIM,CAAC,GAAG0B,cAAc,CAACE,EAAE,CAAC;MAC1B,IAAIxB,CAAC,GAAGsB,cAAc,CAACE,EAAE,GAAG,CAAC,CAAC;MAC9B,IAAI1B,CAAC,GAAGwB,cAAc,CAACE,EAAE,GAAG,CAAC,CAAC;;MAE9B;MACA,MAAMgC,MAAM,GAAG7E,OAAO,CAACiB,CAAC,GAAG,GAAG,EAAEI,CAAC,GAAG,GAAG,EAAEoB,IAAI,GAAG,GAAG,CAAC,GAAG,IAAI;MAC3D,MAAMqC,MAAM,GAAG9E,OAAO,CAACqB,CAAC,GAAG,GAAG,EAAEF,CAAC,GAAG,GAAG,EAAEsB,IAAI,GAAG,GAAG,CAAC,GAAG,IAAI;MAC3D,MAAMsC,MAAM,GAAG/E,OAAO,CAACmB,CAAC,GAAG,GAAG,EAAEF,CAAC,GAAG,GAAG,EAAEwB,IAAI,GAAG,GAAG,CAAC,GAAG,IAAI;MAE3DxB,CAAC,IAAI4D,MAAM;MACXxD,CAAC,IAAIyD,MAAM,GAAG/D,IAAI,CAACK,GAAG,CAACH,CAAC,GAAG,GAAG,GAAGwB,IAAI,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC;MACtDtB,CAAC,IAAI4D,MAAM;;MAEX;MACA,IAAI9D,CAAC,GAAG,CAAC0D,KAAK,GAAG,CAAC,IAAI1D,CAAC,GAAG0D,KAAK,GAAG,CAAC,IAC/BtD,CAAC,GAAGkD,SAAS,GAAGpE,MAAM,IAAIkB,CAAC,GAAGkD,SAAS,GAAGpE,MAAM,IAChDgB,CAAC,GAAG,CAACyD,KAAK,GAAG,CAAC,IAAIzD,CAAC,GAAGyD,KAAK,GAAG,CAAC,EAAE;QACnC3D,CAAC,GAAG,CAACF,IAAI,CAACO,MAAM,CAAC,CAAC,GAAG,GAAG,IAAIqD,KAAK;QACjCtD,CAAC,GAAGkD,SAAS,GAAG,CAACxD,IAAI,CAACO,MAAM,CAAC,CAAC,GAAG,GAAG,IAAInB,MAAM,GAAG,CAAC;QAClDgB,CAAC,GAAG,CAACJ,IAAI,CAACO,MAAM,CAAC,CAAC,GAAG,GAAG,IAAIsD,KAAK;MACnC;MAEAjC,cAAc,CAACE,EAAE,CAAC,GAAG5B,CAAC;MACtB0B,cAAc,CAACE,EAAE,GAAG,CAAC,CAAC,GAAGxB,CAAC;MAC1BsB,cAAc,CAACE,EAAE,GAAG,CAAC,CAAC,GAAG1B,CAAC;IAC5B;IACAtB,SAAS,CAACwC,OAAO,CAACiB,WAAW,GAAG,IAAI;EACtC,CAAC,CAAC;EAEF,oBACEtE,OAAA;IAAQuE,aAAa,EAAE,KAAM;IAAAC,QAAA,gBAC3BxE,OAAA;MAAAwE,QAAA,eACExE,OAAA;QACEyE,GAAG,EAAE5D,SAAU;QACf6D,MAAM,EAAC,qBAAqB;QAC5Bd,KAAK,EAAEpC,SAAU;QACjBP,KAAK,EAAEO,SAAS,CAACmD,MAAM,GAAG,CAAE;QAC5BC,QAAQ,EAAE;MAAE;QAAAtE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACY,CAAC,eACjBT,OAAA;MACE6E,GAAG,EAAE/D,MAAO;MACZgE,KAAK,EAAEA,KAAM;MACbC,IAAI,EAAE,KAAM,CAAC;MAAA;MACbC,eAAe;MACfC,WAAW,EAAE,IAAK;MAClBC,OAAO,EAAE,GAAI,CAAC;MAAA;MACdC,QAAQ,EAAEzF,KAAK,CAAC0F;IAAiB;MAAA9E,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEb;AAAC+E,GAAA,CA/EQF,YAAY;EAAA,QAEJ/F,SAAS,EACHC,QAAQ,EAiB7BF,QAAQ;AAAA;AAAA0G,GAAA,GApBDV,YAAY;AAiFrB,SAASW,eAAeA,CAAA,EAAG;EAAAC,GAAA;EACzB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGhH,QAAQ,CAAC;IAAEuG,KAAK,EAAEU,MAAM,CAACC,UAAU;IAAEnF,MAAM,EAAEkF,MAAM,CAACE;EAAY,CAAC,CAAC;EACtG,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGrH,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACsH,WAAW,EAAEC,cAAc,CAAC,GAAGvH,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAE;EACxD,MAAM,CAACwH,SAAS,EAAEC,YAAY,CAAC,GAAGzH,QAAQ,CAAC,KAAK,CAAC;EAEjDD,SAAS,CAAC,MAAM;IACd,MAAM2H,YAAY,GAAGA,CAAA,KAAM;MACzBV,aAAa,CAAC;QAAET,KAAK,EAAEU,MAAM,CAACC,UAAU;QAAEnF,MAAM,EAAEkF,MAAM,CAACE;MAAY,CAAC,CAAC;IACzE,CAAC;IACDF,MAAM,CAACU,gBAAgB,CAAC,QAAQ,EAAED,YAAY,CAAC;IAE/C,MAAME,SAAS,GAAGC,UAAU,CAAC,MAAMR,WAAW,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC;IAC3D,MAAMS,WAAW,GAAGD,UAAU,CAAC,MAAMN,cAAc,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,CAAE;;IAEnE,OAAO,MAAM;MACXN,MAAM,CAACc,mBAAmB,CAAC,QAAQ,EAAEL,YAAY,CAAC;MAClDM,YAAY,CAACJ,SAAS,CAAC;MACvBI,YAAY,CAACF,WAAW,CAAC;IAC3B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACElH,OAAA,CAAAE,SAAA;IAAAsE,QAAA,gBACExE,OAAA,CAACX,MAAM;MAACgI,MAAM,EAAE;QAAEC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QAAEC,GAAG,EAAE;MAAG,CAAE;MAACC,KAAK,EAAE;QAAE7B,KAAK,EAAEQ,UAAU,CAACR,KAAK;QAAExE,MAAM,EAAEgF,UAAU,CAAChF;MAAO,CAAE;MAAAqD,QAAA,gBAC9GxE,OAAA;QAAO0E,MAAM,EAAC,YAAY;QAAC+C,IAAI,EAAE,CAAC,MAAM;MAAE;QAAAnH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7CT,OAAA;QAAc0H,SAAS,EAAE;MAAI;QAAApH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChCT,OAAA;QAAYsH,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE;MAAE;QAAAhH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtCT,OAAA,CAACG,cAAc;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClBT,OAAA,CAACW,YAAY;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChBT,OAAA,CAACsF,YAAY;QAACC,SAAS,EAAE,GAAI;QAACT,KAAK,EAAE,QAAS;QAAC7D,KAAK,EAAE,KAAM;QAACE,MAAM,EAAE;MAAI;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5ET,OAAA,CAACsF,YAAY;QAACC,SAAS,EAAE,CAAC,GAAI;QAACT,KAAK,EAAE,QAAS;QAAC7D,KAAK,EAAE,KAAM;QAACE,MAAM,EAAE;MAAI;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASvE,CAAC,eACTT,OAAA;MAAK2H,SAAS,EAAC,iBAAiB;MAAAnD,QAAA,gBAC9BxE,OAAA;QACE2H,SAAS,EAAE,QAAQnB,QAAQ,GAAG,SAAS,GAAG,EAAE,IAAII,SAAS,GAAG,SAAS,GAAG,EAAE;QAC1E;QACA;QAAA;QAAApC,QAAA,EACD;MAED;QAAAlE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACLT,OAAA;QAAI2H,SAAS,EAAE,QAAQnB,QAAQ,GAAG,SAAS,GAAG,EAAE,EAAG;QAAAhC,QAAA,EAAC;MAEpD;QAAAlE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACLT,OAAA;QAAK2H,SAAS,EAAE,oBAAoBnB,QAAQ,GAAG,SAAS,GAAG,EAAE,EAAG;QAAAhC,QAAA,gBAC9DxE,OAAA;UAAQ2H,SAAS,EAAC,eAAe;UAAAnD,QAAA,EAAC;QAAY;UAAAlE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACvDT,OAAA;UAAQ2H,SAAS,EAAC,eAAe;UAAAnD,QAAA,EAAC;QAAW;UAAAlE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA,eACN,CAAC;AAEP;AAACyF,GAAA,CA3DQD,eAAe;AAAA2B,GAAA,GAAf3B,eAAe;AA6DxB,SAAS4B,GAAGA,CAAA,EAAG;EACb,oBACE7H,OAAA;IAAK2H,SAAS,EAAC,MAAM;IAAAnD,QAAA,eACnBxE,OAAA,CAACiG,eAAe;MAAA3F,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAEV;AAACqH,GAAA,GANQD,GAAG;AAQZ,eAAeA,GAAG;AAAC,IAAAnH,EAAA,EAAA2E,GAAA,EAAAW,GAAA,EAAA4B,GAAA,EAAAE,GAAA;AAAAC,YAAA,CAAArH,EAAA;AAAAqH,YAAA,CAAA1C,GAAA;AAAA0C,YAAA,CAAA/B,GAAA;AAAA+B,YAAA,CAAAH,GAAA;AAAAG,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}