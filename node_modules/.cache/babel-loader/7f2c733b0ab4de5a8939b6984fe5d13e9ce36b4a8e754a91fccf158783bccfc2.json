{"ast":null,"code":"var _jsxFileName = \"/Users/kasaikazunobu/project/ai/babel/ripple/3d-ripple-animation/src/components/ParticleText.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport { useFrame, useLoader } from '@react-three/fiber';\nimport * as THREE from 'three';\nimport { FontLoader } from 'three/examples/jsm/loaders/FontLoader';\nimport { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry';\nimport circleImg from '../assets/circle.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ParticleText({\n  text\n}) {\n  _s();\n  const meshRef = useRef();\n  const imgTex = useLoader(THREE.TextureLoader, circleImg);\n  //   const font = useLoader(FontLoader, 'src/assets/Baskervville_Regular.json'); // フォントファイルのパスを指定\n  const font = useLoader(FontLoader, new URL('Baskervville_Regular.json', import.meta.url).href);\n  useEffect(() => {\n    if (font && meshRef.current) {\n      const geometry = new TextGeometry(text, {\n        font: font,\n        size: 1,\n        height: 0.2,\n        curveSegments: 12,\n        bevelEnabled: false\n      });\n      geometry.center();\n      const points = geometry.toNonIndexed().attributes.position.array;\n      const positions = [];\n      for (let i = 0; i < points.length; i += 3) {\n        positions.push(points[i], points[i + 1], points[i + 2]);\n      }\n      meshRef.current.geometry.setAttribute('position', new THREE.BufferAttribute(new Float32Array(positions), 3));\n    }\n  }, [font, text]);\n  useFrame(({\n    clock\n  }) => {\n    meshRef.current.rotation.y += 0.001;\n  });\n  return /*#__PURE__*/_jsxDEV(\"points\", {\n    ref: meshRef,\n    children: [/*#__PURE__*/_jsxDEV(\"bufferGeometry\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointsMaterial\", {\n      map: imgTex,\n      color: 0xffa500,\n      size: 0.05,\n      sizeAttenuation: true,\n      transparent: true,\n      opacity: 0.8,\n      blending: THREE.AdditiveBlending\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(ParticleText, \"2jBlws+KpHGtOCyXabvLqjPr/jg=\", false, function () {\n  return [useLoader, useLoader, useFrame];\n});\n_c = ParticleText;\nexport default ParticleText;\nvar _c;\n$RefreshReg$(_c, \"ParticleText\");","map":{"version":3,"names":["React","useRef","useEffect","useFrame","useLoader","THREE","FontLoader","TextGeometry","circleImg","jsxDEV","_jsxDEV","ParticleText","text","_s","meshRef","imgTex","TextureLoader","font","URL","import","meta","url","href","current","geometry","size","height","curveSegments","bevelEnabled","center","points","toNonIndexed","attributes","position","array","positions","i","length","push","setAttribute","BufferAttribute","Float32Array","clock","rotation","y","ref","children","fileName","_jsxFileName","lineNumber","columnNumber","map","color","sizeAttenuation","transparent","opacity","blending","AdditiveBlending","_c","$RefreshReg$"],"sources":["/Users/kasaikazunobu/project/ai/babel/ripple/3d-ripple-animation/src/components/ParticleText.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { useFrame, useLoader } from '@react-three/fiber';\nimport * as THREE from 'three';\nimport { FontLoader } from 'three/examples/jsm/loaders/FontLoader';\nimport { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry';\nimport circleImg from '../assets/circle.png';\n\n\n\nfunction ParticleText({ text }) {\n  const meshRef = useRef();\n  const imgTex = useLoader(THREE.TextureLoader, circleImg);\n//   const font = useLoader(FontLoader, 'src/assets/Baskervville_Regular.json'); // フォントファイルのパスを指定\n  const font = useLoader(FontLoader, new URL('Baskervville_Regular.json', import.meta.url).href);\n\n  useEffect(() => {\n    if (font && meshRef.current) {\n      const geometry = new TextGeometry(text, {\n        font: font,\n        size: 1,\n        height: 0.2,\n        curveSegments: 12,\n        bevelEnabled: false,\n      });\n      geometry.center();\n      const points = geometry.toNonIndexed().attributes.position.array;\n      const positions = [];\n      for (let i = 0; i < points.length; i += 3) {\n        positions.push(points[i], points[i + 1], points[i + 2]);\n      }\n      meshRef.current.geometry.setAttribute(\n        'position',\n        new THREE.BufferAttribute(new Float32Array(positions), 3)\n      );\n    }\n  }, [font, text]);\n\n  useFrame(({ clock }) => {\n    meshRef.current.rotation.y += 0.001;\n  });\n\n  return (\n    <points ref={meshRef}>\n      <bufferGeometry />\n      <pointsMaterial\n        map={imgTex}\n        color={0xffa500}\n        size={0.05}\n        sizeAttenuation\n        transparent={true}\n        opacity={0.8}\n        blending={THREE.AdditiveBlending}\n      />\n    </points>\n  );\n}\n\nexport default ParticleText;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}