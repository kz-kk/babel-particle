{"ast":null,"code":"var _jsxFileName = \"/Users/kasaikazunobu/project/ai/babel/ripple/3d-ripple-animation/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\n// App.js\nimport React, { useRef, useMemo, useEffect, useState } from 'react';\nimport { Canvas, useFrame, useLoader, useThree } from '@react-three/fiber';\nimport { OrbitControls } from '@react-three/drei';\nimport * as THREE from 'three';\nimport { createNoise3D } from 'simplex-noise';\nimport circleImg from './assets/circle.png';\nimport './App.css';\nimport ParticleText from './components/ParticleText'; // 新しいコンポーネントをインポート\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst noise3D = createNoise3D();\nfunction CameraControls() {\n  return /*#__PURE__*/_jsxDEV(OrbitControls, {\n    autoRotate: true,\n    autoRotateSpeed: -0.2\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 10\n  }, this);\n}\n_c = CameraControls;\nfunction ParticleWave() {\n  _s();\n  const pointsRef = useRef();\n  const imgTex = useLoader(THREE.TextureLoader, circleImg);\n  const count = 100000; // 粒子数を減らす\n  const radius = 2; // 半径を少し小さくする\n  const height = 7; // 高さを少し小さくする\n  const speed = 0.8;\n  const spiralSpeed = 0.3;\n  const flowIntensity = 0.05;\n  const positions = useMemo(() => {\n    const positions = [];\n    for (let i = 0; i < count; i++) {\n      const theta = Math.random() * Math.PI * 2;\n      const phi = Math.acos(2 * Math.random() - 1);\n      const r = Math.random() * radius;\n      const x = r * Math.sin(phi) * Math.cos(theta);\n      const y = Math.random() * height - height / 2;\n      const z = r * Math.sin(phi) * Math.sin(theta);\n      positions.push(x, y, z);\n    }\n    return new Float32Array(positions);\n  }, [count, radius, height]);\n  useFrame(({\n    clock\n  }) => {\n    const time = clock.getElapsedTime();\n    const positionsArray = pointsRef.current.array;\n    for (let i = 0; i < count; i++) {\n      const i3 = i * 3;\n      let x = positionsArray[i3];\n      let y = positionsArray[i3 + 1];\n      let z = positionsArray[i3 + 2];\n      const noise = noise3D(x * 0.5, y * 0.5, z * 0.5 + time * 0.2) * flowIntensity;\n      const angle = Math.atan2(z, x) + spiralSpeed * 0.01 + noise;\n      const r = Math.sqrt(x * x + z * z);\n      x = r * Math.cos(angle);\n      z = r * Math.sin(angle);\n      y += speed * 0.01 * (1 + noise); // 下降を上昇に変更\n\n      if (y > height / 2) {\n        // 上限に達したら下に戻す\n        y = -height / 2;\n        const newTheta = Math.random() * Math.PI * 2;\n        const newPhi = Math.acos(2 * Math.random() - 1);\n        const newR = Math.random() * radius;\n        x = newR * Math.sin(newPhi) * Math.cos(newTheta);\n        z = newR * Math.sin(newPhi) * Math.sin(newTheta);\n      }\n      positionsArray[i3] = x;\n      positionsArray[i3 + 1] = y;\n      positionsArray[i3 + 2] = z;\n    }\n    pointsRef.current.needsUpdate = true;\n  });\n  return /*#__PURE__*/_jsxDEV(\"points\", {\n    frustumCulled: false,\n    children: [/*#__PURE__*/_jsxDEV(\"bufferGeometry\", {\n      children: /*#__PURE__*/_jsxDEV(\"bufferAttribute\", {\n        ref: pointsRef,\n        attach: \"attributes-position\",\n        array: positions,\n        count: positions.length / 3,\n        itemSize: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointsMaterial\", {\n      map: imgTex,\n      color: 0x66ffff,\n      size: 0.02,\n      sizeAttenuation: true,\n      transparent: true,\n      opacity: 0.3,\n      blending: THREE.AdditiveBlending\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(ParticleWave, \"V8gvKTS4WlZhPJZRXUDAYoJHmbo=\", false, function () {\n  return [useLoader, useFrame];\n});\n_c2 = ParticleWave;\nfunction ParticleBand({\n  yPosition,\n  count = 200000,\n  height = 0.2,\n  color = 0x66ffff\n}) {\n  _s2();\n  const pointsRef = useRef();\n  const imgTex = useLoader(THREE.TextureLoader, circleImg);\n  const {\n    viewport\n  } = useThree();\n  const positions = useMemo(() => {\n    const positions = [];\n    const aspect = viewport.width / viewport.height;\n    const width = viewport.width * 1.2; // 描画範囲を少し小さくする\n    const depth = width / aspect;\n    for (let i = 0; i < count; i++) {\n      const x = (Math.random() - 0.5) * width;\n      const y = yPosition + (Math.random() - 0.5) * height;\n      const z = (Math.random() - 0.5) * depth;\n      positions.push(x, y, z);\n    }\n    return new Float32Array(positions);\n  }, [count, height, yPosition, viewport.width, viewport.height]);\n  useFrame(({\n    clock\n  }) => {\n    const time = clock.getElapsedTime();\n    const positionsArray = pointsRef.current.array;\n    const width = viewport.width * 1.2; // ここも同様に変更\n    const aspect = viewport.width / viewport.height;\n    const depth = width / aspect;\n    for (let i = 0; i < count; i++) {\n      const i3 = i * 3;\n      let x = positionsArray[i3];\n      let y = positionsArray[i3 + 1];\n      let z = positionsArray[i3 + 2];\n      x += Math.sin(z * 0.3 + time * 0.2) * 0.01;\n      z += Math.cos(x * 0.3 + time * 0.2) * 0.01;\n      y += Math.sin(x * 0.3 + z * 0.3 + time * 0.1) * 0.002;\n      if (x < -width / 2) x += width;\n      if (x > width / 2) x -= width;\n      if (z < -depth / 2) z += depth;\n      if (z > depth / 2) z -= depth;\n      positionsArray[i3] = x;\n      positionsArray[i3 + 1] = y;\n      positionsArray[i3 + 2] = z;\n    }\n    pointsRef.current.needsUpdate = true;\n  });\n  return /*#__PURE__*/_jsxDEV(\"points\", {\n    frustumCulled: false,\n    children: [/*#__PURE__*/_jsxDEV(\"bufferGeometry\", {\n      children: /*#__PURE__*/_jsxDEV(\"bufferAttribute\", {\n        ref: pointsRef,\n        attach: \"attributes-position\",\n        array: positions,\n        count: positions.length / 3,\n        itemSize: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointsMaterial\", {\n      map: imgTex,\n      color: color,\n      size: 0.015 // サイズを0.015から0.02に増加\n      ,\n      sizeAttenuation: true,\n      transparent: true,\n      opacity: 0.2 // 不透明度を0.2から0.3に増加\n      ,\n      blending: THREE.AdditiveBlending\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n}\n_s2(ParticleBand, \"mkjvxZxlZJUcDF4z3qt0/IvloEQ=\", false, function () {\n  return [useLoader, useThree, useFrame];\n});\n_c3 = ParticleBand;\nfunction AnimationCanvas() {\n  _s3();\n  const [canvasSize, setCanvasSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n  useEffect(() => {\n    const handleResize = () => {\n      setCanvasSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    camera: {\n      position: [0, 0, 9],\n      fov: 75\n    },\n    style: {\n      width: canvasSize.width,\n      height: canvasSize.height\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"color\", {\n      attach: \"background\",\n      args: ['#000']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ambientLight\", {\n      intensity: 0.5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n      position: [10, 10, 10]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CameraControls, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ParticleWave, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ParticleBand, {\n      yPosition: 4.5,\n      color: 0x66ffff,\n      count: 200000\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(ParticleBand, {\n      yPosition: -4.5,\n      color: 0x66ffff,\n      count: 200000\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 5\n  }, this);\n}\n_s3(AnimationCanvas, \"efV7aGodZujF4CF/3jUnM4vIknw=\");\n_c4 = AnimationCanvas;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"anim\",\n    children: [/*#__PURE__*/_jsxDEV(AnimationCanvas, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ParticleText, {\n      text: \"Babel & Zoltraak\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), \" \\u65B0\\u3057\\u3044\\u30B3\\u30F3\\u30DD\\u30FC\\u30CD\\u30F3\\u30C8\\u3092\\u8FFD\\u52A0\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 5\n  }, this);\n}\n_c5 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"CameraControls\");\n$RefreshReg$(_c2, \"ParticleWave\");\n$RefreshReg$(_c3, \"ParticleBand\");\n$RefreshReg$(_c4, \"AnimationCanvas\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"names":["React","useRef","useMemo","useEffect","useState","Canvas","useFrame","useLoader","useThree","OrbitControls","THREE","createNoise3D","circleImg","ParticleText","jsxDEV","_jsxDEV","noise3D","CameraControls","autoRotate","autoRotateSpeed","fileName","_jsxFileName","lineNumber","columnNumber","_c","ParticleWave","_s","pointsRef","imgTex","TextureLoader","count","radius","height","speed","spiralSpeed","flowIntensity","positions","i","theta","Math","random","PI","phi","acos","r","x","sin","cos","y","z","push","Float32Array","clock","time","getElapsedTime","positionsArray","current","array","i3","noise","angle","atan2","sqrt","newTheta","newPhi","newR","needsUpdate","frustumCulled","children","ref","attach","length","itemSize","map","color","size","sizeAttenuation","transparent","opacity","blending","AdditiveBlending","_c2","ParticleBand","yPosition","_s2","viewport","aspect","width","depth","_c3","AnimationCanvas","_s3","canvasSize","setCanvasSize","window","innerWidth","innerHeight","handleResize","addEventListener","removeEventListener","camera","position","fov","style","args","intensity","_c4","App","className","text","_c5","$RefreshReg$"],"sources":["/Users/kasaikazunobu/project/ai/babel/ripple/3d-ripple-animation/src/App.js"],"sourcesContent":["// App.js\nimport React, { useRef, useMemo, useEffect, useState } from 'react';\nimport { Canvas, useFrame, useLoader, useThree } from '@react-three/fiber';\nimport { OrbitControls } from '@react-three/drei';\nimport * as THREE from 'three';\nimport { createNoise3D } from 'simplex-noise';\nimport circleImg from './assets/circle.png';\nimport './App.css';\nimport ParticleText from './components/ParticleText'; // 新しいコンポーネントをインポート\n\nconst noise3D = createNoise3D();\n\nfunction CameraControls() {\n  return <OrbitControls autoRotate autoRotateSpeed={-0.2} />;\n}\n\nfunction ParticleWave() {\n  const pointsRef = useRef();\n  const imgTex = useLoader(THREE.TextureLoader, circleImg);\n\n  const count = 100000; // 粒子数を減らす\n  const radius = 2;     // 半径を少し小さくする\n  const height = 7;     // 高さを少し小さくする\n  const speed = 0.8;\n  const spiralSpeed = 0.3;\n  const flowIntensity = 0.05;\n\n  const positions = useMemo(() => {\n    const positions = [];\n    for (let i = 0; i < count; i++) {\n      const theta = Math.random() * Math.PI * 2;\n      const phi = Math.acos(2 * Math.random() - 1);\n      const r = Math.random() * radius;\n      const x = r * Math.sin(phi) * Math.cos(theta);\n      const y = Math.random() * height - height / 2;\n      const z = r * Math.sin(phi) * Math.sin(theta);\n      positions.push(x, y, z);\n    }\n    return new Float32Array(positions);\n  }, [count, radius, height]);\n\n  useFrame(({ clock }) => {\n    const time = clock.getElapsedTime();\n    const positionsArray = pointsRef.current.array;\n    for (let i = 0; i < count; i++) {\n      const i3 = i * 3;\n      let x = positionsArray[i3];\n      let y = positionsArray[i3 + 1];\n      let z = positionsArray[i3 + 2];\n\n      const noise = noise3D(x * 0.5, y * 0.5, z * 0.5 + time * 0.2) * flowIntensity;\n      const angle = Math.atan2(z, x) + spiralSpeed * 0.01 + noise;\n      const r = Math.sqrt(x * x + z * z);\n      \n      x = r * Math.cos(angle);\n      z = r * Math.sin(angle);\n      y += speed * 0.01 * (1 + noise); // 下降を上昇に変更\n\n      if (y > height / 2) { // 上限に達したら下に戻す\n        y = -height / 2;\n        const newTheta = Math.random() * Math.PI * 2;\n        const newPhi = Math.acos(2 * Math.random() - 1);\n        const newR = Math.random() * radius;\n        x = newR * Math.sin(newPhi) * Math.cos(newTheta);\n        z = newR * Math.sin(newPhi) * Math.sin(newTheta);\n      }\n\n      positionsArray[i3] = x;\n      positionsArray[i3 + 1] = y;\n      positionsArray[i3 + 2] = z;\n    }\n    pointsRef.current.needsUpdate = true;\n  });\n\n  return (\n    <points frustumCulled={false}>\n      <bufferGeometry>\n        <bufferAttribute\n          ref={pointsRef}\n          attach=\"attributes-position\"\n          array={positions}\n          count={positions.length / 3}\n          itemSize={3}\n        />\n      </bufferGeometry>\n      <pointsMaterial\n        map={imgTex}\n        color={0x66ffff}\n        size={0.02}\n        sizeAttenuation\n        transparent={true}\n        opacity={0.3}\n        blending={THREE.AdditiveBlending}\n      />\n    </points>\n  );\n}\n\nfunction ParticleBand({ yPosition, count = 200000, height = 0.2, color = 0x66ffff }) {\n  const pointsRef = useRef();\n  const imgTex = useLoader(THREE.TextureLoader, circleImg);\n  const { viewport } = useThree();\n\n  const positions = useMemo(() => {\n    const positions = [];\n    const aspect = viewport.width / viewport.height;\n    const width = viewport.width * 1.2; // 描画範囲を少し小さくする\n    const depth = width / aspect;\n    for (let i = 0; i < count; i++) {\n      const x = (Math.random() - 0.5) * width;\n      const y = yPosition + (Math.random() - 0.5) * height;\n      const z = (Math.random() - 0.5) * depth;\n      positions.push(x, y, z);\n    }\n    return new Float32Array(positions);\n  }, [count, height, yPosition, viewport.width, viewport.height]);\n\n  useFrame(({ clock }) => {\n    const time = clock.getElapsedTime();\n    const positionsArray = pointsRef.current.array;\n    const width = viewport.width * 1.2; // ここも同様に変更\n    const aspect = viewport.width / viewport.height;\n    const depth = width / aspect;\n    for (let i = 0; i < count; i++) {\n      const i3 = i * 3;\n      let x = positionsArray[i3];\n      let y = positionsArray[i3 + 1];\n      let z = positionsArray[i3 + 2];\n\n      x += Math.sin(z * 0.3 + time * 0.2) * 0.01;\n      z += Math.cos(x * 0.3 + time * 0.2) * 0.01;\n      y += Math.sin(x * 0.3 + z * 0.3 + time * 0.1) * 0.002;\n\n      if (x < -width / 2) x += width;\n      if (x > width / 2) x -= width;\n      if (z < -depth / 2) z += depth;\n      if (z > depth / 2) z -= depth;\n\n      positionsArray[i3] = x;\n      positionsArray[i3 + 1] = y;\n      positionsArray[i3 + 2] = z;\n    }\n    pointsRef.current.needsUpdate = true;\n  });\n\n  return (\n    <points frustumCulled={false}>\n      <bufferGeometry>\n        <bufferAttribute\n          ref={pointsRef}\n          attach=\"attributes-position\"\n          array={positions}\n          count={positions.length / 3}\n          itemSize={3}\n        />\n      </bufferGeometry>\n      <pointsMaterial\n        map={imgTex}\n        color={color}\n        size={0.015} // サイズを0.015から0.02に増加\n        sizeAttenuation\n        transparent={true}\n        opacity={0.2} // 不透明度を0.2から0.3に増加\n        blending={THREE.AdditiveBlending}\n      />\n    </points>\n  );\n}\n\nfunction AnimationCanvas() {\n  const [canvasSize, setCanvasSize] = useState({ width: window.innerWidth, height: window.innerHeight });\n\n  useEffect(() => {\n    const handleResize = () => {\n      setCanvasSize({ width: window.innerWidth, height: window.innerHeight });\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return (\n    <Canvas camera={{ position: [0, 0, 9], fov: 75 }} style={{ width: canvasSize.width, height: canvasSize.height }}>\n      <color attach=\"background\" args={['#000']} />\n      <ambientLight intensity={0.5} />\n      <pointLight position={[10, 10, 10]} />\n      <CameraControls />\n      <ParticleWave />\n      <ParticleBand yPosition={4.5} color={0x66ffff} count={200000} /> {/* 粒子数を増加 */}\n      <ParticleBand yPosition={-4.5} color={0x66ffff} count={200000} /> {/* 粒子数を増加 */}\n    </Canvas>\n  );\n}\n\nfunction App() {\n  return (\n    <div className=\"anim\">\n      <AnimationCanvas />\n      <ParticleText text=\"Babel & Zoltraak\" /> 新しいコンポーネントを追加\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;;AAAA;AACA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,OAAO,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACnE,SAASC,MAAM,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,oBAAoB;AAC1E,SAASC,aAAa,QAAQ,mBAAmB;AACjD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,aAAa,QAAQ,eAAe;AAC7C,OAAOC,SAAS,MAAM,qBAAqB;AAC3C,OAAO,WAAW;AAClB,OAAOC,YAAY,MAAM,2BAA2B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,OAAO,GAAGL,aAAa,CAAC,CAAC;AAE/B,SAASM,cAAcA,CAAA,EAAG;EACxB,oBAAOF,OAAA,CAACN,aAAa;IAACS,UAAU;IAACC,eAAe,EAAE,CAAC;EAAI;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC5D;AAACC,EAAA,GAFQP,cAAc;AAIvB,SAASQ,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAMC,SAAS,GAAG1B,MAAM,CAAC,CAAC;EAC1B,MAAM2B,MAAM,GAAGrB,SAAS,CAACG,KAAK,CAACmB,aAAa,EAAEjB,SAAS,CAAC;EAExD,MAAMkB,KAAK,GAAG,MAAM,CAAC,CAAC;EACtB,MAAMC,MAAM,GAAG,CAAC,CAAC,CAAK;EACtB,MAAMC,MAAM,GAAG,CAAC,CAAC,CAAK;EACtB,MAAMC,KAAK,GAAG,GAAG;EACjB,MAAMC,WAAW,GAAG,GAAG;EACvB,MAAMC,aAAa,GAAG,IAAI;EAE1B,MAAMC,SAAS,GAAGlC,OAAO,CAAC,MAAM;IAC9B,MAAMkC,SAAS,GAAG,EAAE;IACpB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,KAAK,EAAEO,CAAC,EAAE,EAAE;MAC9B,MAAMC,KAAK,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGD,IAAI,CAACE,EAAE,GAAG,CAAC;MACzC,MAAMC,GAAG,GAAGH,IAAI,CAACI,IAAI,CAAC,CAAC,GAAGJ,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;MAC5C,MAAMI,CAAC,GAAGL,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGT,MAAM;MAChC,MAAMc,CAAC,GAAGD,CAAC,GAAGL,IAAI,CAACO,GAAG,CAACJ,GAAG,CAAC,GAAGH,IAAI,CAACQ,GAAG,CAACT,KAAK,CAAC;MAC7C,MAAMU,CAAC,GAAGT,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGR,MAAM,GAAGA,MAAM,GAAG,CAAC;MAC7C,MAAMiB,CAAC,GAAGL,CAAC,GAAGL,IAAI,CAACO,GAAG,CAACJ,GAAG,CAAC,GAAGH,IAAI,CAACO,GAAG,CAACR,KAAK,CAAC;MAC7CF,SAAS,CAACc,IAAI,CAACL,CAAC,EAAEG,CAAC,EAAEC,CAAC,CAAC;IACzB;IACA,OAAO,IAAIE,YAAY,CAACf,SAAS,CAAC;EACpC,CAAC,EAAE,CAACN,KAAK,EAAEC,MAAM,EAAEC,MAAM,CAAC,CAAC;EAE3B1B,QAAQ,CAAC,CAAC;IAAE8C;EAAM,CAAC,KAAK;IACtB,MAAMC,IAAI,GAAGD,KAAK,CAACE,cAAc,CAAC,CAAC;IACnC,MAAMC,cAAc,GAAG5B,SAAS,CAAC6B,OAAO,CAACC,KAAK;IAC9C,KAAK,IAAIpB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,KAAK,EAAEO,CAAC,EAAE,EAAE;MAC9B,MAAMqB,EAAE,GAAGrB,CAAC,GAAG,CAAC;MAChB,IAAIQ,CAAC,GAAGU,cAAc,CAACG,EAAE,CAAC;MAC1B,IAAIV,CAAC,GAAGO,cAAc,CAACG,EAAE,GAAG,CAAC,CAAC;MAC9B,IAAIT,CAAC,GAAGM,cAAc,CAACG,EAAE,GAAG,CAAC,CAAC;MAE9B,MAAMC,KAAK,GAAG3C,OAAO,CAAC6B,CAAC,GAAG,GAAG,EAAEG,CAAC,GAAG,GAAG,EAAEC,CAAC,GAAG,GAAG,GAAGI,IAAI,GAAG,GAAG,CAAC,GAAGlB,aAAa;MAC7E,MAAMyB,KAAK,GAAGrB,IAAI,CAACsB,KAAK,CAACZ,CAAC,EAAEJ,CAAC,CAAC,GAAGX,WAAW,GAAG,IAAI,GAAGyB,KAAK;MAC3D,MAAMf,CAAC,GAAGL,IAAI,CAACuB,IAAI,CAACjB,CAAC,GAAGA,CAAC,GAAGI,CAAC,GAAGA,CAAC,CAAC;MAElCJ,CAAC,GAAGD,CAAC,GAAGL,IAAI,CAACQ,GAAG,CAACa,KAAK,CAAC;MACvBX,CAAC,GAAGL,CAAC,GAAGL,IAAI,CAACO,GAAG,CAACc,KAAK,CAAC;MACvBZ,CAAC,IAAIf,KAAK,GAAG,IAAI,IAAI,CAAC,GAAG0B,KAAK,CAAC,CAAC,CAAC;;MAEjC,IAAIX,CAAC,GAAGhB,MAAM,GAAG,CAAC,EAAE;QAAE;QACpBgB,CAAC,GAAG,CAAChB,MAAM,GAAG,CAAC;QACf,MAAM+B,QAAQ,GAAGxB,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGD,IAAI,CAACE,EAAE,GAAG,CAAC;QAC5C,MAAMuB,MAAM,GAAGzB,IAAI,CAACI,IAAI,CAAC,CAAC,GAAGJ,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;QAC/C,MAAMyB,IAAI,GAAG1B,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGT,MAAM;QACnCc,CAAC,GAAGoB,IAAI,GAAG1B,IAAI,CAACO,GAAG,CAACkB,MAAM,CAAC,GAAGzB,IAAI,CAACQ,GAAG,CAACgB,QAAQ,CAAC;QAChDd,CAAC,GAAGgB,IAAI,GAAG1B,IAAI,CAACO,GAAG,CAACkB,MAAM,CAAC,GAAGzB,IAAI,CAACO,GAAG,CAACiB,QAAQ,CAAC;MAClD;MAEAR,cAAc,CAACG,EAAE,CAAC,GAAGb,CAAC;MACtBU,cAAc,CAACG,EAAE,GAAG,CAAC,CAAC,GAAGV,CAAC;MAC1BO,cAAc,CAACG,EAAE,GAAG,CAAC,CAAC,GAAGT,CAAC;IAC5B;IACAtB,SAAS,CAAC6B,OAAO,CAACU,WAAW,GAAG,IAAI;EACtC,CAAC,CAAC;EAEF,oBACEnD,OAAA;IAAQoD,aAAa,EAAE,KAAM;IAAAC,QAAA,gBAC3BrD,OAAA;MAAAqD,QAAA,eACErD,OAAA;QACEsD,GAAG,EAAE1C,SAAU;QACf2C,MAAM,EAAC,qBAAqB;QAC5Bb,KAAK,EAAErB,SAAU;QACjBN,KAAK,EAAEM,SAAS,CAACmC,MAAM,GAAG,CAAE;QAC5BC,QAAQ,EAAE;MAAE;QAAApD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACY,CAAC,eACjBR,OAAA;MACE0D,GAAG,EAAE7C,MAAO;MACZ8C,KAAK,EAAE,QAAS;MAChBC,IAAI,EAAE,IAAK;MACXC,eAAe;MACfC,WAAW,EAAE,IAAK;MAClBC,OAAO,EAAE,GAAI;MACbC,QAAQ,EAAErE,KAAK,CAACsE;IAAiB;MAAA5D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEb;AAACG,EAAA,CAhFQD,YAAY;EAAA,QAEJlB,SAAS,EAuBxBD,QAAQ;AAAA;AAAA2E,GAAA,GAzBDxD,YAAY;AAkFrB,SAASyD,YAAYA,CAAC;EAAEC,SAAS;EAAErD,KAAK,GAAG,MAAM;EAAEE,MAAM,GAAG,GAAG;EAAE0C,KAAK,GAAG;AAAS,CAAC,EAAE;EAAAU,GAAA;EACnF,MAAMzD,SAAS,GAAG1B,MAAM,CAAC,CAAC;EAC1B,MAAM2B,MAAM,GAAGrB,SAAS,CAACG,KAAK,CAACmB,aAAa,EAAEjB,SAAS,CAAC;EACxD,MAAM;IAAEyE;EAAS,CAAC,GAAG7E,QAAQ,CAAC,CAAC;EAE/B,MAAM4B,SAAS,GAAGlC,OAAO,CAAC,MAAM;IAC9B,MAAMkC,SAAS,GAAG,EAAE;IACpB,MAAMkD,MAAM,GAAGD,QAAQ,CAACE,KAAK,GAAGF,QAAQ,CAACrD,MAAM;IAC/C,MAAMuD,KAAK,GAAGF,QAAQ,CAACE,KAAK,GAAG,GAAG,CAAC,CAAC;IACpC,MAAMC,KAAK,GAAGD,KAAK,GAAGD,MAAM;IAC5B,KAAK,IAAIjD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,KAAK,EAAEO,CAAC,EAAE,EAAE;MAC9B,MAAMQ,CAAC,GAAG,CAACN,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI+C,KAAK;MACvC,MAAMvC,CAAC,GAAGmC,SAAS,GAAG,CAAC5C,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,IAAIR,MAAM;MACpD,MAAMiB,CAAC,GAAG,CAACV,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,IAAIgD,KAAK;MACvCpD,SAAS,CAACc,IAAI,CAACL,CAAC,EAAEG,CAAC,EAAEC,CAAC,CAAC;IACzB;IACA,OAAO,IAAIE,YAAY,CAACf,SAAS,CAAC;EACpC,CAAC,EAAE,CAACN,KAAK,EAAEE,MAAM,EAAEmD,SAAS,EAAEE,QAAQ,CAACE,KAAK,EAAEF,QAAQ,CAACrD,MAAM,CAAC,CAAC;EAE/D1B,QAAQ,CAAC,CAAC;IAAE8C;EAAM,CAAC,KAAK;IACtB,MAAMC,IAAI,GAAGD,KAAK,CAACE,cAAc,CAAC,CAAC;IACnC,MAAMC,cAAc,GAAG5B,SAAS,CAAC6B,OAAO,CAACC,KAAK;IAC9C,MAAM8B,KAAK,GAAGF,QAAQ,CAACE,KAAK,GAAG,GAAG,CAAC,CAAC;IACpC,MAAMD,MAAM,GAAGD,QAAQ,CAACE,KAAK,GAAGF,QAAQ,CAACrD,MAAM;IAC/C,MAAMwD,KAAK,GAAGD,KAAK,GAAGD,MAAM;IAC5B,KAAK,IAAIjD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,KAAK,EAAEO,CAAC,EAAE,EAAE;MAC9B,MAAMqB,EAAE,GAAGrB,CAAC,GAAG,CAAC;MAChB,IAAIQ,CAAC,GAAGU,cAAc,CAACG,EAAE,CAAC;MAC1B,IAAIV,CAAC,GAAGO,cAAc,CAACG,EAAE,GAAG,CAAC,CAAC;MAC9B,IAAIT,CAAC,GAAGM,cAAc,CAACG,EAAE,GAAG,CAAC,CAAC;MAE9Bb,CAAC,IAAIN,IAAI,CAACO,GAAG,CAACG,CAAC,GAAG,GAAG,GAAGI,IAAI,GAAG,GAAG,CAAC,GAAG,IAAI;MAC1CJ,CAAC,IAAIV,IAAI,CAACQ,GAAG,CAACF,CAAC,GAAG,GAAG,GAAGQ,IAAI,GAAG,GAAG,CAAC,GAAG,IAAI;MAC1CL,CAAC,IAAIT,IAAI,CAACO,GAAG,CAACD,CAAC,GAAG,GAAG,GAAGI,CAAC,GAAG,GAAG,GAAGI,IAAI,GAAG,GAAG,CAAC,GAAG,KAAK;MAErD,IAAIR,CAAC,GAAG,CAAC0C,KAAK,GAAG,CAAC,EAAE1C,CAAC,IAAI0C,KAAK;MAC9B,IAAI1C,CAAC,GAAG0C,KAAK,GAAG,CAAC,EAAE1C,CAAC,IAAI0C,KAAK;MAC7B,IAAItC,CAAC,GAAG,CAACuC,KAAK,GAAG,CAAC,EAAEvC,CAAC,IAAIuC,KAAK;MAC9B,IAAIvC,CAAC,GAAGuC,KAAK,GAAG,CAAC,EAAEvC,CAAC,IAAIuC,KAAK;MAE7BjC,cAAc,CAACG,EAAE,CAAC,GAAGb,CAAC;MACtBU,cAAc,CAACG,EAAE,GAAG,CAAC,CAAC,GAAGV,CAAC;MAC1BO,cAAc,CAACG,EAAE,GAAG,CAAC,CAAC,GAAGT,CAAC;IAC5B;IACAtB,SAAS,CAAC6B,OAAO,CAACU,WAAW,GAAG,IAAI;EACtC,CAAC,CAAC;EAEF,oBACEnD,OAAA;IAAQoD,aAAa,EAAE,KAAM;IAAAC,QAAA,gBAC3BrD,OAAA;MAAAqD,QAAA,eACErD,OAAA;QACEsD,GAAG,EAAE1C,SAAU;QACf2C,MAAM,EAAC,qBAAqB;QAC5Bb,KAAK,EAAErB,SAAU;QACjBN,KAAK,EAAEM,SAAS,CAACmC,MAAM,GAAG,CAAE;QAC5BC,QAAQ,EAAE;MAAE;QAAApD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACY,CAAC,eACjBR,OAAA;MACE0D,GAAG,EAAE7C,MAAO;MACZ8C,KAAK,EAAEA,KAAM;MACbC,IAAI,EAAE,KAAM,CAAC;MAAA;MACbC,eAAe;MACfC,WAAW,EAAE,IAAK;MAClBC,OAAO,EAAE,GAAI,CAAC;MAAA;MACdC,QAAQ,EAAErE,KAAK,CAACsE;IAAiB;MAAA5D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEb;AAAC6D,GAAA,CArEQF,YAAY;EAAA,QAEJ3E,SAAS,EACHC,QAAQ,EAgB7BF,QAAQ;AAAA;AAAAmF,GAAA,GAnBDP,YAAY;AAuErB,SAASQ,eAAeA,CAAA,EAAG;EAAAC,GAAA;EACzB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGzF,QAAQ,CAAC;IAAEmF,KAAK,EAAEO,MAAM,CAACC,UAAU;IAAE/D,MAAM,EAAE8D,MAAM,CAACE;EAAY,CAAC,CAAC;EAEtG7F,SAAS,CAAC,MAAM;IACd,MAAM8F,YAAY,GAAGA,CAAA,KAAM;MACzBJ,aAAa,CAAC;QAAEN,KAAK,EAAEO,MAAM,CAACC,UAAU;QAAE/D,MAAM,EAAE8D,MAAM,CAACE;MAAY,CAAC,CAAC;IACzE,CAAC;IACDF,MAAM,CAACI,gBAAgB,CAAC,QAAQ,EAAED,YAAY,CAAC;IAC/C,OAAO,MAAMH,MAAM,CAACK,mBAAmB,CAAC,QAAQ,EAAEF,YAAY,CAAC;EACjE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACElF,OAAA,CAACV,MAAM;IAAC+F,MAAM,EAAE;MAAEC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAAEC,GAAG,EAAE;IAAG,CAAE;IAACC,KAAK,EAAE;MAAEhB,KAAK,EAAEK,UAAU,CAACL,KAAK;MAAEvD,MAAM,EAAE4D,UAAU,CAAC5D;IAAO,CAAE;IAAAoC,QAAA,gBAC9GrD,OAAA;MAAOuD,MAAM,EAAC,YAAY;MAACkC,IAAI,EAAE,CAAC,MAAM;IAAE;MAAApF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7CR,OAAA;MAAc0F,SAAS,EAAE;IAAI;MAAArF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChCR,OAAA;MAAYsF,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE;IAAE;MAAAjF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtCR,OAAA,CAACE,cAAc;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClBR,OAAA,CAACU,YAAY;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChBR,OAAA,CAACmE,YAAY;MAACC,SAAS,EAAE,GAAI;MAACT,KAAK,EAAE,QAAS;MAAC5C,KAAK,EAAE;IAAO;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,KAAC,eACjER,OAAA,CAACmE,YAAY;MAACC,SAAS,EAAE,CAAC,GAAI;MAACT,KAAK,EAAE,QAAS;MAAC5C,KAAK,EAAE;IAAO;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,KAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5D,CAAC;AAEb;AAACoE,GAAA,CAtBQD,eAAe;AAAAgB,GAAA,GAAfhB,eAAe;AAwBxB,SAASiB,GAAGA,CAAA,EAAG;EACb,oBACE5F,OAAA;IAAK6F,SAAS,EAAC,MAAM;IAAAxC,QAAA,gBACnBrD,OAAA,CAAC2E,eAAe;MAAAtE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnBR,OAAA,CAACF,YAAY;MAACgG,IAAI,EAAC;IAAkB;MAAAzF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,mFAC1C;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEV;AAACuF,GAAA,GAPQH,GAAG;AASZ,eAAeA,GAAG;AAAC,IAAAnF,EAAA,EAAAyD,GAAA,EAAAQ,GAAA,EAAAiB,GAAA,EAAAI,GAAA;AAAAC,YAAA,CAAAvF,EAAA;AAAAuF,YAAA,CAAA9B,GAAA;AAAA8B,YAAA,CAAAtB,GAAA;AAAAsB,YAAA,CAAAL,GAAA;AAAAK,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}