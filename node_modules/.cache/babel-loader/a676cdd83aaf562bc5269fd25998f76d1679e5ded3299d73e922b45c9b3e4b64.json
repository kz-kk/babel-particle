{"ast":null,"code":"var _jsxFileName = \"/Users/kasaikazunobu/project/ai/babel/ripple/3d-ripple-animation/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useRef, useMemo } from 'react';\nimport { Canvas, useFrame, useLoader } from '@react-three/fiber';\nimport { OrbitControls } from '@react-three/drei';\nimport * as THREE from 'three';\nimport { createNoise3D } from 'simplex-noise'; // この行は変更なし\nimport circleImg from './assets/circle.png';\nimport './App.css';\n\n// simplex オブジェクトを作成\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst noise3D = createNoise3D(); // この行を変更\n\nfunction CameraControls() {\n  return /*#__PURE__*/_jsxDEV(OrbitControls, {\n    autoRotate: true,\n    autoRotateSpeed: -0.2\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 10\n  }, this);\n}\n_c = CameraControls;\nfunction ParticleWave() {\n  _s();\n  const pointsRef = useRef();\n  const imgTex = useLoader(THREE.TextureLoader, circleImg);\n  const count = 150000; // 粒子数をさらに増やす\n  const radius = 2.5;\n  const height = 8;\n  const speed = 0.8;\n  const spiralSpeed = 0.3;\n  const flowIntensity = 0.05;\n\n  // 粒子の初期位置を計算\n  const positions = useMemo(() => {\n    const positions = [];\n    for (let i = 0; i < count; i++) {\n      const theta = Math.random() * Math.PI * 2;\n      const phi = Math.acos(2 * Math.random() - 1);\n      const r = Math.random() * radius;\n      const x = r * Math.sin(phi) * Math.cos(theta);\n      const y = Math.random() * height - height / 2;\n      const z = r * Math.sin(phi) * Math.sin(theta);\n      positions.push(x, y, z);\n    }\n    return new Float32Array(positions);\n  }, [count, radius, height]);\n\n  // フレームごとに粒子の位置を更新\n  useFrame(({\n    clock\n  }) => {\n    const time = clock.getElapsedTime();\n    const positionsArray = pointsRef.current.array;\n    for (let i = 0; i < count; i++) {\n      const i3 = i * 3;\n      let x = positionsArray[i3];\n      let y = positionsArray[i3 + 1];\n      let z = positionsArray[i3 + 2];\n\n      // エネルギーの流れを表現する動き\n      const noise = noise3D(x * 0.5, y * 0.5, z * 0.5 + time * 0.2) * flowIntensity; // この行を変更\n      const angle = Math.atan2(z, x) + spiralSpeed * 0.01 + noise;\n      const r = Math.sqrt(x * x + z * z);\n      x = r * Math.cos(angle);\n      z = r * Math.sin(angle);\n      y -= speed * 0.01 * (1 + noise);\n\n      // 中心に向かう力を加える\n      const distanceToCenter = Math.sqrt(x * x + z * z);\n      const centerForce = 0.001 * distanceToCenter;\n      x -= x * centerForce;\n      z -= z * centerForce;\n\n      // 底に到達したら上に戻す\n      if (y < -height / 2) {\n        y = height / 2;\n        const newTheta = Math.random() * Math.PI * 2;\n        const newPhi = Math.acos(2 * Math.random() - 1);\n        const newR = Math.random() * radius;\n        x = newR * Math.sin(newPhi) * Math.cos(newTheta);\n        z = newR * Math.sin(newPhi) * Math.sin(newTheta);\n      }\n      positionsArray[i3] = x;\n      positionsArray[i3 + 1] = y;\n      positionsArray[i3 + 2] = z;\n    }\n    pointsRef.current.needsUpdate = true;\n  });\n  return /*#__PURE__*/_jsxDEV(\"points\", {\n    frustumCulled: false,\n    children: [/*#__PURE__*/_jsxDEV(\"bufferGeometry\", {\n      children: /*#__PURE__*/_jsxDEV(\"bufferAttribute\", {\n        ref: pointsRef,\n        attach: \"attributes-position\",\n        array: positions,\n        count: positions.length / 3,\n        itemSize: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointsMaterial\", {\n      map: imgTex,\n      color: 0x00ffff // エネルギーっぽい色に変更\n      ,\n      size: 0.02,\n      sizeAttenuation: true,\n      transparent: true,\n      opacity: 0.6,\n      blending: THREE.AdditiveBlending\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(ParticleWave, \"V8gvKTS4WlZhPJZRXUDAYoJHmbo=\", false, function () {\n  return [useLoader, useFrame];\n});\n_c2 = ParticleWave;\nfunction AnimationCanvas() {\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    camera: {\n      position: [0, 0, 8],\n      fov: 75\n    },\n    children: [\" // \\u30AB\\u30E1\\u30E9\\u3092\\u5C11\\u3057\\u5F8C\\u308D\\u306B\\u4E0B\\u3052\\u308B\", /*#__PURE__*/_jsxDEV(\"color\", {\n      attach: \"background\",\n      args: ['#000']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ambientLight\", {\n      intensity: 0.5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n      position: [10, 10, 10]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CameraControls, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ParticleWave, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n_c3 = AnimationCanvas;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"anim\",\n    children: /*#__PURE__*/_jsxDEV(AnimationCanvas, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"CameraControls\");\n$RefreshReg$(_c2, \"ParticleWave\");\n$RefreshReg$(_c3, \"AnimationCanvas\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["React","useRef","useMemo","Canvas","useFrame","useLoader","OrbitControls","THREE","createNoise3D","circleImg","jsxDEV","_jsxDEV","noise3D","CameraControls","autoRotate","autoRotateSpeed","fileName","_jsxFileName","lineNumber","columnNumber","_c","ParticleWave","_s","pointsRef","imgTex","TextureLoader","count","radius","height","speed","spiralSpeed","flowIntensity","positions","i","theta","Math","random","PI","phi","acos","r","x","sin","cos","y","z","push","Float32Array","clock","time","getElapsedTime","positionsArray","current","array","i3","noise","angle","atan2","sqrt","distanceToCenter","centerForce","newTheta","newPhi","newR","needsUpdate","frustumCulled","children","ref","attach","length","itemSize","map","color","size","sizeAttenuation","transparent","opacity","blending","AdditiveBlending","_c2","AnimationCanvas","camera","position","fov","args","intensity","_c3","App","className","_c4","$RefreshReg$"],"sources":["/Users/kasaikazunobu/project/ai/babel/ripple/3d-ripple-animation/src/App.js"],"sourcesContent":["// App.js\nimport React, { useRef, useMemo } from 'react';\nimport { Canvas, useFrame, useLoader } from '@react-three/fiber';\nimport { OrbitControls } from '@react-three/drei';\nimport * as THREE from 'three';\nimport { createNoise3D } from 'simplex-noise'; // この行は変更なし\nimport circleImg from './assets/circle.png';\nimport './App.css';\n\n// simplex オブジェクトを作成\nconst noise3D = createNoise3D(); // この行を変更\n\nfunction CameraControls() {\n  return <OrbitControls autoRotate autoRotateSpeed={-0.2} />;\n}\n\nfunction ParticleWave() {\n  const pointsRef = useRef();\n  const imgTex = useLoader(THREE.TextureLoader, circleImg);\n\n  const count = 150000; // 粒子数をさらに増やす\n  const radius = 2.5;\n  const height = 8;\n  const speed = 0.8;\n  const spiralSpeed = 0.3;\n  const flowIntensity = 0.05;\n\n  // 粒子の初期位置を計算\n  const positions = useMemo(() => {\n    const positions = [];\n    for (let i = 0; i < count; i++) {\n      const theta = Math.random() * Math.PI * 2;\n      const phi = Math.acos(2 * Math.random() - 1);\n      const r = Math.random() * radius;\n      const x = r * Math.sin(phi) * Math.cos(theta);\n      const y = Math.random() * height - height / 2;\n      const z = r * Math.sin(phi) * Math.sin(theta);\n      positions.push(x, y, z);\n    }\n    return new Float32Array(positions);\n  }, [count, radius, height]);\n\n  // フレームごとに粒子の位置を更新\n  useFrame(({ clock }) => {\n    const time = clock.getElapsedTime();\n    const positionsArray = pointsRef.current.array;\n    for (let i = 0; i < count; i++) {\n      const i3 = i * 3;\n      let x = positionsArray[i3];\n      let y = positionsArray[i3 + 1];\n      let z = positionsArray[i3 + 2];\n\n      // エネルギーの流れを表現する動き\n      const noise = noise3D(x * 0.5, y * 0.5, z * 0.5 + time * 0.2) * flowIntensity; // この行を変更\n      const angle = Math.atan2(z, x) + spiralSpeed * 0.01 + noise;\n      const r = Math.sqrt(x * x + z * z);\n      \n      x = r * Math.cos(angle);\n      z = r * Math.sin(angle);\n      y -= speed * 0.01 * (1 + noise);\n\n      // 中心に向かう力を加える\n      const distanceToCenter = Math.sqrt(x * x + z * z);\n      const centerForce = 0.001 * distanceToCenter;\n      x -= x * centerForce;\n      z -= z * centerForce;\n\n      // 底に到達したら上に戻す\n      if (y < -height / 2) {\n        y = height / 2;\n        const newTheta = Math.random() * Math.PI * 2;\n        const newPhi = Math.acos(2 * Math.random() - 1);\n        const newR = Math.random() * radius;\n        x = newR * Math.sin(newPhi) * Math.cos(newTheta);\n        z = newR * Math.sin(newPhi) * Math.sin(newTheta);\n      }\n\n      positionsArray[i3] = x;\n      positionsArray[i3 + 1] = y;\n      positionsArray[i3 + 2] = z;\n    }\n    pointsRef.current.needsUpdate = true;\n  });\n\n  return (\n    <points frustumCulled={false}>\n      <bufferGeometry>\n        <bufferAttribute\n          ref={pointsRef}\n          attach=\"attributes-position\"\n          array={positions}\n          count={positions.length / 3}\n          itemSize={3}\n        />\n      </bufferGeometry>\n      <pointsMaterial\n        map={imgTex}\n        color={0x00ffff} // エネルギーっぽい色に変更\n        size={0.02}\n        sizeAttenuation\n        transparent={true}\n        opacity={0.6}\n        blending={THREE.AdditiveBlending}\n      />\n    </points>\n  );\n}\n\nfunction AnimationCanvas() {\n  return (\n    <Canvas camera={{ position: [0, 0, 8], fov: 75 }}> // カメラを少し後ろに下げる\n      <color attach=\"background\" args={['#000']} />\n      <ambientLight intensity={0.5} />\n      <pointLight position={[10, 10, 10]} />\n      <CameraControls />\n      <ParticleWave />\n    </Canvas>\n  );\n}\n\nfunction App() {\n  return (\n    <div className=\"anim\">\n      <AnimationCanvas />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}