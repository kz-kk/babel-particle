{"ast":null,"code":"import { jsx } from \"react/jsx-runtime\";\nimport { forwardRef, useMemo } from \"react\";\nimport { PixelationEffect } from \"postprocessing\";\nconst Pixelation = forwardRef(function Pixelation2({\n  granularity = 5\n}, ref) {\n  const effect = useMemo(() => new PixelationEffect(granularity), [granularity]);\n  return /* @__PURE__ */jsx(\"primitive\", {\n    ref,\n    object: effect,\n    dispose: null\n  });\n});\nexport { Pixelation };","map":{"version":3,"names":["Pixelation","forwardRef","Pixelation2","granularity","ref","effect","useMemo","PixelationEffect","jsx","object","dispose"],"sources":["/Users/kasaikazunobu/project/babel/babel-project/node_modules/@react-three/postprocessing/src/effects/Pixelation.tsx"],"sourcesContent":["import { forwardRef, useMemo, Ref } from 'react'\nimport { PixelationEffect } from 'postprocessing'\n\nexport type PixelationProps = {\n  granularity?: number\n}\n\nexport const Pixelation = forwardRef<PixelationEffect, PixelationProps>(function Pixelation(\n  { granularity = 5 }: PixelationProps,\n  ref: Ref<PixelationEffect>\n) {\n  /** Because GlitchEffect granularity is not an object but a number, we have to define a custom prop \"granularity\" */\n  const effect = useMemo(() => new PixelationEffect(granularity), [granularity])\n  return <primitive ref={ref} object={effect} dispose={null} />\n})\n"],"mappings":";;;AAOa,MAAAA,UAAA,GAAaC,UAAA,CAA8C,SAASC,YAC/E;EAAEC,WAAA,GAAc;AAAA,GAChBC,GAAA,EACA;EAEM,MAAAC,MAAA,GAASC,OAAA,CAAQ,MAAM,IAAIC,gBAAA,CAAiBJ,WAAW,GAAG,CAACA,WAAW,CAAC;EAC7E,sBAAAK,GAAA,CAAQ,aAAU;IAAAJ,GAAA;IAAUK,MAAA,EAAQJ,MAAA;IAAQK,OAAA,EAAS;EAAM;AAC7D,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}